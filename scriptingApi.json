{"data":[{"fullName":"openspace","functions":[{"arguments":[{"defaultValue":"","name":"path","type":"String"}],"help":"Passes the argument to FileSystem::absolutePath, which resolves occuring path tokens and returns the absolute path.","name":"absPath","returnType":"Path","sourceLocation":{"file":"src/scripting/scriptengine_lua.inl","line":68}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"type","type":"CustomPropertyType"},{"defaultValue":"","name":"guiName","type":"String?"},{"defaultValue":"","name":"description","type":"String?"},{"defaultValue":"","name":"onChange","type":"String?"}],"help":"Creates a new property that lives in the `UserProperty` group.\n\n\\\\param identifier The identifier that is going to be used for the new property \\\\param type The type of the property, has to be one of \\\"DMat2Property\\\", \\\"DMat3Property\\\", \\\"DMat4Property\\\", \\\"Mat2Property\\\", \\\"Mat3Property\\\", \\\"Mat4Property\\\", \\\"BoolProperty\\\", \\\"DoubleProperty\\\", \\\"FloatProperty\\\", \\\"IntProperty\\\", \\\"StringProperty\\\", \\\"StringListProperty\\\", \\\"LongProperty\\\", \\\"ShortProperty\\\", \\\"UIntProperty\\\", \\\"ULongProperty\\\", \\\"DVec2Property\\\", \\\"DVec3Property\\\", \\\"DVec4Property\\\", \\\"IVec2Property\\\", \\\"IVec3Property\\\", \\\"IVec4Property\\\", \\\"UVec2Property\\\", \\\"UVec3Property\\\", \\\"UVec4Property\\\", \\\"Vec2Property\\\", \\\"Vec3Property\\\", \\\"Vec4Property\\\" \\\\param guiName The name that the property uses in the user interface. If this value is not provided, the `identifier` is used instead \\\\param description A description what the property is used for \\\\param onChange A Lua script that will be executed whenever the property changes","name":"addCustomProperty","returnType":"","sourceLocation":{"file":"src/scene/scene_lua.inl","line":1087}},{"arguments":[{"defaultValue":"","name":"node","type":"Table"}],"help":"Loads the SceneGraphNode described in the table and adds it to the SceneGraph.","name":"addSceneGraphNode","returnType":"","sourceLocation":{"file":"src/scene/scene_lua.inl","line":621}},{"arguments":[{"defaultValue":"","name":"screenSpace","type":"Table"}],"help":"/ Will create a ScreenSpaceRenderable from a lua Table and add it in the RenderEngine","name":"addScreenSpaceRenderable","returnType":"","sourceLocation":{"file":"src/rendering/renderengine_lua.inl","line":28}},{"arguments":[{"defaultValue":"","name":"uri","type":"String"},{"defaultValue":"","name":"tag","type":"String"}],"help":"Adds a Tag to a SceneGraphNode identified by the provided uri","name":"addTag","returnType":"","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":64}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"value","type":"String | Number"}],"help":"Add a value to the property with the given identifier. Works on both numerical and string properties, where adding to a string property means appending the given string value to the existing string value.","name":"addToPropertyValue","returnType":""},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"value","type":"any"}],"help":"Add a value to the list property with the given identifier. The value can be any type, as long as it is the correct type for the given property. Note that a number will be converted to a string automatically.","name":"appendToListProperty","returnType":""},{"arguments":[{"defaultValue":"","name":"key","type":"String"},{"defaultValue":"","name":"action","type":"String"}],"help":"Binds a key to Lua command to both execute locally and broadcast to all clients if this node is hosting a parallel connection.","name":"bindKey","returnType":"","sourceLocation":{"file":"src/interaction/keybindingmanager_lua.inl","line":31}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Returns the bounding sphere of the scene graph node with the given string as identifier.","name":"boundingSphere","returnType":"Number","sourceLocation":{"file":"src/scene/scene_lua.inl","line":988}},{"arguments":[{"defaultValue":"","name":"key","type":"String | String[]"}],"help":"Unbinds the key or keys that have been provided. This function can be called with a single key or with an array of keys to remove all of the provided keys at once.","name":"clearKey","returnType":"","sourceLocation":{"file":"src/interaction/keybindingmanager_lua.inl","line":74}},{"arguments":[],"help":"Clear all key bindings","name":"clearKeys","returnType":"","sourceLocation":{"file":"src/interaction/keybindingmanager_lua.inl","line":91}},{"arguments":[],"help":"Returns the whole configuration object as a Dictionary","name":"configuration","returnType":"Table","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":240}},{"arguments":[{"defaultValue":"","name":"name","type":"String"},{"defaultValue":"","name":"color","type":"vec3"}],"help":"Creates a 1 pixel image with a certain color in the cache folder and returns the path to the file. If a cached file with the given name already exists, the path to that file is returned. The first argument is the name of the file, without extension. The second is the RGB color, given as {r, g, b} with values between 0 and 1.","name":"createSingleColorImage","returnType":"Path","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":121}},{"arguments":[{"defaultValue":"","name":"file","type":"Path"}],"help":"Checks whether the provided file exists.","name":"directoryExists","returnType":"Boolean","sourceLocation":{"file":"src/scripting/scriptengine_lua.inl","line":107}},{"arguments":[{"defaultValue":"","name":"file","type":"Path"}],"help":"This function extracts the directory part of the passed path. For example, if the parameter is 'C:\\\\\\\\OpenSpace\\\\\\\\foobar\\\\\\\\foo.txt', this function returns 'C:\\\\\\\\OpenSpace\\\\\\\\foobar'.","name":"directoryForPath","returnType":"Path","sourceLocation":{"file":"src/scripting/scriptengine_lua.inl","line":208}},{"arguments":[{"defaultValue":"","name":"url","type":"String"},{"defaultValue":"","name":"savePath","type":"String"},{"defaultValue":"false","name":"waitForCompletion","type":"Boolean?"}],"help":"Downloads a file from Lua interpreter","name":"downloadFile","returnType":"","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":88}},{"arguments":[],"help":"Extracts the DPI scaling for either the GUI window or if there is no dedicated GUI window, the first window.","name":"dpiScaling","returnType":"Number","sourceLocation":{"file":"src/rendering/renderengine_lua.inl","line":80}},{"arguments":[{"defaultValue":"","name":"endScript","type":"String?"},{"defaultValue":"","name":"fadeTime","type":"Number?"},{"defaultValue":"","name":"identifier","type":"String"}],"help":"Fades in the node(s) with the given identifier over the given time in seconds. The identifier can contain a tag and/or a wildcard to target several nodes. If the fade time is not provided then the 'OpenSpaceEngine.FadeDuration' property will be used instead. If the third argument (endScript) is provided then that script will be run after the fade is finished.","name":"fadeIn","returnType":""},{"arguments":[{"defaultValue":"","name":"endScript","type":"String?"},{"defaultValue":"","name":"fadeTime","type":"Number?"},{"defaultValue":"","name":"identifier","type":"String"}],"help":"Fades out the node(s) with the given identifier over the given time in seconds. The identifier can contain a tag and/or a wildcard to target several nodes. If the fade time is not provided then the 'OpenSpaceEngine.FadeDuration' property will be used instead. If the third argument (endScript) is provided then that script will be run after the fade is finished.","name":"fadeOut","returnType":""},{"arguments":[{"defaultValue":"","name":"file","type":"String"}],"help":"Checks whether the provided file exists.","name":"fileExists","returnType":"Boolean","sourceLocation":{"file":"src/scripting/scriptengine_lua.inl","line":87}},{"arguments":[{"defaultValue":"","name":"regex","type":"String"}],"help":"Returns a list of property identifiers that match the passed regular expression","name":"getProperty","returnType":"String[]","sourceLocation":{"file":"src/scene/scene_lua.inl","line":608}},{"arguments":[],"help":"Returns the value the property, identified by the provided URI. Deprecated in favor of the 'propertyValue' function","name":"getPropertyValue","returnType":"","sourceLocation":{"file":"<none>","line":0}},{"arguments":[{"defaultValue":"","name":"missionName","type":"String"}],"help":"Returns whether a mission with the provided name has been loaded.","name":"hasMission","returnType":"Boolean","sourceLocation":{"file":"src/mission/missionmanager_lua.inl","line":49}},{"arguments":[{"defaultValue":"","name":"uri","type":"String"}],"help":"Returns whether a property with the given URI exists","name":"hasProperty","returnType":"Boolean","sourceLocation":{"file":"src/scene/scene_lua.inl","line":492}},{"arguments":[{"defaultValue":"","name":"nodeName","type":"String"}],"help":"Checks whether the specifies SceneGraphNode is present in the current scene.","name":"hasSceneGraphNode","returnType":"Boolean","sourceLocation":{"file":"src/scene/scene_lua.inl","line":877}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Returns the interaction sphere of the scene graph node with the given string as identifier.","name":"interactionSphere","returnType":"Number","sourceLocation":{"file":"src/scene/scene_lua.inl","line":1005}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Inverts the value of a boolean property with the given identifier","name":"invertBooleanProperty","returnType":""},{"arguments":[],"help":"Returns whether the current OpenSpace instance is the master node of a cluster configuration. If this instance is not part of a cluster, this function also returns 'true'.","name":"isMaster","returnType":"Boolean","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":180}},{"arguments":[{"defaultValue":"","name":"key","type":"String"}],"help":"Returns the strings of the script that are bound to the passed key and whether they were local or remote key binds.","name":"keyBindings","returnType":"String[]","sourceLocation":{"file":"src/interaction/keybindingmanager_lua.inl","line":53}},{"arguments":[],"help":"Returns the current layer server from the configuration","name":"layerServer","returnType":"String","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":248}},{"arguments":[{"defaultValue":"","name":"path","type":"Path"}],"help":"Loads the provided JSON file and returns it back to the caller. Please note that if the JSON contains keys that array of an array type, they are converted into a Dictionary with numerical keys and the numerical keys start with 1.","name":"loadJson","returnType":"Table","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":258}},{"arguments":[{"defaultValue":"","name":"mission","type":"Table"}],"help":"Load mission phases from file.","name":"loadMission","returnType":"","sourceLocation":{"file":"src/mission/missionmanager_lua.inl","line":28}},{"arguments":[{"defaultValue":"","name":"input","type":"String"}],"help":"Create a valid identifier from the provided input string. Will replace invalid characters like whitespaces and some punctuation marks with valid alternatives","name":"makeIdentifier","returnType":"String","sourceLocation":{"file":"src/scene/scene_lua.inl","line":1233}},{"arguments":[{"defaultValue":"","name":"sceneGraphNodes","type":"String[]"}],"help":"This function marks the scene graph nodes identified by name as interesting, which will provide shortcut access to focus buttons and featured properties","name":"markInterestingNodes","returnType":""},{"arguments":[{"defaultValue":"","name":"times","type":"Table[]"}],"help":"This function marks interesting times for the current scene, which will create shortcuts for a quick access","name":"markInterestingTimes","returnType":""},{"arguments":[{"defaultValue":"","name":"type","type":"String"}],"help":"Returns a list of all scene graph nodes in the scene that have a renderable of the specific type","name":"nodeByRenderableType","returnType":"String[]","sourceLocation":{"file":"src/scene/scene_lua.inl","line":899}},{"arguments":[{"defaultValue":"","name":"","type":"*"}],"help":"Logs the passed value to the installed LogManager with a LogLevel of 'Debug'. For Boolean, numbers, and strings, the internal values are printed, for all other types, the type is printed instead","name":"printDebug","returnType":"","sourceLocation":{"file":"<none>","line":0}},{"arguments":[{"defaultValue":"","name":"","type":"*"}],"help":"Logs the passed value to the installed LogManager with a LogLevel of 'Error'. For Boolean, numbers, and strings, the internal values are printed, for all other types, the type is printed instead","name":"printError","returnType":"","sourceLocation":{"file":"<none>","line":0}},{"arguments":[{"defaultValue":"","name":"","type":"*"}],"help":"Logs the passed value to the installed LogManager with a LogLevel of 'Fatal'. For Boolean, numbers, and strings, the internal values are printed, for all other types, the type is printed instead","name":"printFatal","returnType":"","sourceLocation":{"file":"<none>","line":0}},{"arguments":[{"defaultValue":"","name":"","type":"*"}],"help":"Logs the passed value to the installed LogManager with a LogLevel of 'Info'. For Boolean, numbers, and strings, the internal values are printed, for all other types, the type is printed instead","name":"printInfo","returnType":"","sourceLocation":{"file":"<none>","line":0}},{"arguments":[{"defaultValue":"","name":"","type":"*"}],"help":"Logs the passed value to the installed LogManager with a LogLevel of 'Trace'. For Boolean, numbers, and strings, the internal values are printed, for all other types, the type is printed instead","name":"printTrace","returnType":"","sourceLocation":{"file":"<none>","line":0}},{"arguments":[{"defaultValue":"","name":"","type":"*"}],"help":"Logs the passed value to the installed LogManager with a LogLevel of 'Warning'. For Boolean, numbers, and strings, the internal values are printed, for all other types, the type is printed instead","name":"printWarning","returnType":"","sourceLocation":{"file":"<none>","line":0}},{"arguments":[{"defaultValue":"","name":"regex","type":"String"}],"help":"Returns a list of property identifiers that match the passed regular expression","name":"property","returnType":"String[]","sourceLocation":{"file":"src/scene/scene_lua.inl","line":500}},{"arguments":[],"help":"Returns the value the property, identified by the provided URI. Deprecated in favor of the 'propertyValue' function","name":"propertyValue","returnType":"","sourceLocation":{"file":"<none>","line":0}},{"arguments":[{"defaultValue":"","name":"file","type":"Path"},{"defaultValue":"false","name":"includeFirstLine","type":"Boolean?"}],"help":"Loads the CSV file provided as a parameter and returns it as a vector containing the values of the each row. The inner vector has the same number of values as the CSV has columns. The second parameter controls whether the first entry in the returned outer vector is containing the names of the columns","name":"readCSVFile","returnType":"String[][]","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":218}},{"arguments":[{"defaultValue":"","name":"file","type":"Path"}],"help":"Reads a file from disk and return its contents.","name":"readFile","returnType":"String","sourceLocation":{"file":"src/scripting/scriptengine_lua.inl","line":93}},{"arguments":[{"defaultValue":"","name":"newKey","type":"String"},{"defaultValue":"","name":"oldKey","type":"String"}],"help":"Rebinds all scripts from the old key (first argument) to the new key (second argument)","name":"rebindKey","returnType":""},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"","name":"removeCustomProperty","returnType":"","sourceLocation":{"file":"src/scene/scene_lua.inl","line":1215}},{"arguments":[{"defaultValue":"","name":"sceneGraphNodes","type":"String[]"}],"help":"This function removes unmarks the scene graph nodes identified by name as interesting, thus removing the shortcuts from the features properties list","name":"removeInterestingNodes","returnType":""},{"arguments":[{"defaultValue":"","name":"node","type":"String | Table"}],"help":"Removes the SceneGraphNode identified by name or by extracting the 'Identifier' key if the parameter is a table.","name":"removeSceneGraphNode","returnType":"","sourceLocation":{"file":"src/scene/scene_lua.inl","line":656}},{"arguments":[{"defaultValue":"","name":"name","type":"String"}],"help":"Removes all SceneGraphNodes with identifiers matching the input regular expression.","name":"removeSceneGraphNodesFromRegex","returnType":"","sourceLocation":{"file":"src/scene/scene_lua.inl","line":726}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String | Table"}],"help":"Given a ScreenSpaceRenderable name this script will remove it from the RenderEngine. The parameter can also be a table in which case the 'Identifier' key is used to look up the name from the table.","name":"removeScreenSpaceRenderable","returnType":"","sourceLocation":{"file":"src/rendering/renderengine_lua.inl","line":40}},{"arguments":[{"defaultValue":"","name":"uri","type":"String"},{"defaultValue":"","name":"tag","type":"String"}],"help":"Removes a tag (second argument) from a scene graph node (first argument)","name":"removeTag","returnType":"","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":76}},{"arguments":[],"help":"Resets the camera position to the same position where the profile originally started","name":"resetCamera","returnType":"","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":233}},{"arguments":[],"help":"Reset screenshot index to 0.","name":"resetScreenshotNumber","returnType":"","sourceLocation":{"file":"src/rendering/renderengine_lua.inl","line":73}},{"arguments":[{"defaultValue":"","name":"saveFilePath","type":"String?"},{"defaultValue":"true","name":"overwrite","type":"Boolean?"}],"help":"Collects all changes that have been made since startup, including all property changes and assets required, requested, or removed. All changes will be added to the profile that OpenSpace was started with, and the new saved file will contain all of this information. If the argument is provided, the settings will be saved into new profile with that name. If the argument is blank, the current profile will be saved to a backup file and the original profile will be overwritten. The second argument determines if a file that already exists should be overwritten, which is 'false' by default.","name":"saveSettingsToProfile","returnType":"","sourceLocation":{"file":"src/scene/profile_lua.inl","line":36}},{"arguments":[],"help":"Returns a list of all scene graph nodes in the scene","name":"sceneGraphNodes","returnType":"String[]","sourceLocation":{"file":"src/scene/scene_lua.inl","line":884}},{"arguments":[],"help":"Returns a list of all screen-space renderables","name":"screenSpaceRenderables","returnType":"String[]","sourceLocation":{"file":"src/scene/scene_lua.inl","line":915}},{"arguments":[{"defaultValue":"","name":"missionName","type":"String"}],"help":"Set the currnet mission.","name":"setCurrentMission","returnType":"","sourceLocation":{"file":"src/mission/missionmanager_lua.inl","line":59}},{"arguments":[],"help":"This function sets the default values for the dashboard consisting of 'DashboardItemDate', 'DashboardItemSimulationIncrement', 'DashboardItemDistance', 'DashboardItemFramerate', and 'DashboardItemParallelConnection'","name":"setDefaultDashboard","returnType":""},{"arguments":[],"help":"This function sets the default GUI sorting for the space environment to increasing size, from solar system, through Milky Way, Universe and finishing with other elements","name":"setDefaultGuiSorting","returnType":""},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"newParent","type":"String"}],"help":"The scene graph node identified by the first string is reparented to be a child of the scene graph node identified by the second string.","name":"setParent","returnType":"","sourceLocation":{"file":"src/scene/scene_lua.inl","line":965}},{"arguments":[{"defaultValue":"","name":"pathToken","type":"String"},{"defaultValue":"","name":"path","type":"Path"}],"help":"Registers the path token provided by the first argument to the path in the second argument. If the path token already exists, it will be silently overridden.","name":"setPathToken","returnType":"","sourceLocation":{"file":"src/scripting/scriptengine_lua.inl","line":77}},{"arguments":[],"help":"Sets all property(s) identified by the URI (with potential wildcards) in the first argument. The second argument can be any type, but it has to match the type that the property (or properties) expect. If the third is not present or is '0', the value changes instantly, otherwise the change will take that many seconds and the value is interpolated at each step in between. The fourth parameter is an optional easing function if a 'duration' has been specified. If 'duration' is 0, this parameter value is ignored. Otherwise, it can be one of many supported easing functions. See easing.h for available functions. The fifth argument is another Lua script that will be executed when the interpolation provided in parameter 3 finishes.\nThe URI is interpreted using a wildcard in which '*' is expanded to '(.*)' and bracketed components '{ }' are interpreted as group tag names. Then, the passed value will be set on all properties that fit the regex + group name combination.","name":"setPropertyValue","returnType":"","sourceLocation":{"file":"<none>","line":0}},{"arguments":[],"help":"Sets the property identified by the URI in the first argument. The second argument can be any type, but it has to match the type that the property expects. If the third is not present or is '0', the value changes instantly, otherwise the change will take that many seconds and the value is interpolated at each step in between. The fourth parameter is an optional easing function if a 'duration' has been specified. If 'duration' is 0, this parameter value is ignored. Otherwise, it has to be one of the easing functions defined in the list below. This is the same as calling the setValue method and passing 'single' as the fourth argument to setPropertyValue. The fifth argument is another Lua script that will be executed when the interpolation provided in parameter 3 finishes.\n Avaiable easing functions: Linear, QuadraticEaseIn, QuadraticEaseOut, QuadraticEaseInOut, CubicEaseIn, CubicEaseOut, CubicEaseInOut, QuarticEaseIn, QuarticEaseOut, QuarticEaseInOut, QuinticEaseIn, QuinticEaseOut, QuinticEaseInOut, SineEaseIn, SineEaseOut, SineEaseInOut, CircularEaseIn, CircularEaseOut, CircularEaseInOut, ExponentialEaseIn, ExponentialEaseOut, ExponentialEaseInOut, ElasticEaseIn, ElasticEaseOut, ElasticEaseInOut, BounceEaseIn, BounceEaseOut, BounceEaseInOut","name":"setPropertyValueSingle","returnType":"","sourceLocation":{"file":"<none>","line":0}},{"arguments":[{"defaultValue":"","name":"newFolder","type":"String"}],"help":"Sets the folder used for storing screenshots or session recording frames","name":"setScreenshotFolder","returnType":"","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":46}},{"arguments":[],"help":"Take a screenshot and return the screenshot number. The screenshot will be stored in the ${SCREENSHOTS} folder.","name":"takeScreenshot","returnType":"Integer","sourceLocation":{"file":"src/rendering/renderengine_lua.inl","line":63}},{"arguments":[{"defaultValue":"","name":"endScript","type":"String?"},{"defaultValue":"","name":"fadeTime","type":"Number?"},{"defaultValue":"","name":"identifier","type":"String"}],"help":"Toggles the fade state of the node(s) with the given identifier over the given\n          time in seconds. The identifier can contain a tag and/or a wildcard to target\n          several nodes. If the fade time is not provided then the\n          \"OpenSpaceEngine.FadeDuration\" property will be used instead. If the third\n          argument (endScript) is provided then that script will be run after the fade\n          is finished.","name":"toggleFade","returnType":""},{"arguments":[],"help":"Toggles the shutdown mode that will close the application after the countdown timer is reached","name":"toggleShutdown","returnType":"","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":34}},{"arguments":[{"defaultValue":"","name":"missionName","type":"String"}],"help":"Unloads a previously loaded mission.","name":"unloadMission","returnType":"","sourceLocation":{"file":"src/mission/missionmanager_lua.inl","line":34}},{"arguments":[{"defaultValue":"","name":"source","type":"String"},{"defaultValue":"","name":"destination","type":"String"},{"defaultValue":"false","name":"deleteSource","type":"Boolean?"}],"help":"This function extracts the contents of a zip file. The first argument is the path to the zip file. The second argument is the directory where to put the extracted files. If the third argument is true, the compressed file will be deleted after the decompression is finished.","name":"unzipFile","returnType":"","sourceLocation":{"file":"src/scripting/scriptengine_lua.inl","line":219}},{"arguments":[],"help":"This function returns information about the current OpenSpace version. The resulting table has the structure: \\\\code Version = { Major = <number> Minor = <number> Patch = <number> }, Commit = <string> Branch = <string> \\\\endcode","name":"version","returnType":"Table","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":197}},{"arguments":[{"defaultValue":"","name":"path","type":"Path"},{"defaultValue":"false","name":"recursive","type":"Boolean?"},{"defaultValue":"false","name":"sorted","type":"Boolean?"}],"help":"Walks a directory and returns the contents of the directory as absolute paths. The first argument is the path of the directory that should be walked, the second argument determines if the walk is recursive and will continue in contained directories. The default value for this parameter is \\\"false\\\". The third argument determines whether the table that is returned is sorted. The default value for this parameter is \\\"false\\\".","name":"walkDirectory","returnType":"Path[]","sourceLocation":{"file":"src/scripting/scriptengine_lua.inl","line":147}},{"arguments":[{"defaultValue":"","name":"path","type":"Path"},{"defaultValue":"false","name":"recursive","type":"Boolean?"},{"defaultValue":"false","name":"sorted","type":"Boolean?"}],"help":"Walks a directory and returns the files of the directory as absolute paths. The first argument is the path of the directory that should be walked, the second argument determines if the walk is recursive and will continue in contained directories. The default value for this parameter is \\\"false\\\". The third argument determines whether the table that is returned is sorted. The default value for this parameter is \\\"false\\\".","name":"walkDirectoryFiles","returnType":"Path[]","sourceLocation":{"file":"src/scripting/scriptengine_lua.inl","line":168}},{"arguments":[{"defaultValue":"","name":"path","type":"Path"},{"defaultValue":"false","name":"recursive","type":"Boolean?"},{"defaultValue":"false","name":"sorted","type":"Boolean?"}],"help":"Walks a directory and returns the subfolders of the directory as absolute paths. The first argument is the path of the directory that should be walked, the second argument determines if the walk is recursive and will continue in contained directories. The default value for this parameter is \\\"false\\\". The third argument determines whether the table that is returned is sorted. The default value for this parameter is \\\"false\\\".","name":"walkDirectoryFolders","returnType":"Path[]","sourceLocation":{"file":"src/scripting/scriptengine_lua.inl","line":189}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Returns the world position of the scene graph node with the given string as identifier.","name":"worldPosition","returnType":"vec3","sourceLocation":{"file":"src/scene/scene_lua.inl","line":931}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Returns the world rotation matrix of the scene graph node with the given string as identifier.","name":"worldRotation","returnType":"mat3x3","sourceLocation":{"file":"src/scene/scene_lua.inl","line":948}},{"arguments":[],"help":"Writes out documentation files","name":"writeDocumentation","returnType":"","sourceLocation":{"file":"src/engine/openspaceengine_lua.inl","line":41}}],"library":"","name":""},{"fullName":"openspace.action","functions":[{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Returns information about the action as a table with the keys 'Identifier', 'Command', 'Name', 'Documentation', 'GuiPath', and 'Synchronization'.","name":"action","returnType":"Table","sourceLocation":{"file":"src/interaction/actionmanager_lua.inl","line":136}},{"arguments":[],"help":"Returns all registered actions in the system as a table of tables each containing the keys 'Identifier', 'Command', 'Name', 'Documentation', 'GuiPath', and 'Synchronization'.","name":"actions","returnType":"Table[]","sourceLocation":{"file":"src/interaction/actionmanager_lua.inl","line":164}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Checks if the passed identifier corresponds to an action.","name":"hasAction","returnType":"Boolean","sourceLocation":{"file":"src/interaction/actionmanager_lua.inl","line":30}},{"arguments":[{"defaultValue":"","name":"action","type":"Action"}],"help":"Registers a new action. The first argument is the identifier which cannot have been used to register a previous action before, the second argument is the Lua command that is to be executed, and the optional third argument is the name used in a user-interface to refer to this action. The fourth is a human readable description of the command for documentation purposes. The fifth is the GUI path and the last parameter determines whether the action should be executed locally (= false) or remotely (= true, the default).","name":"registerAction","returnType":"","sourceLocation":{"file":"src/interaction/actionmanager_lua.inl","line":104}},{"arguments":[{"defaultValue":"","name":"action","type":"String | Table"}],"help":"Removes an existing action from the list of possible actions. The action is identifies either by the passed name, or if it is a table, the value behind the 'Identifier' key is extract and used instead.","name":"removeAction","returnType":"","sourceLocation":{"file":"src/interaction/actionmanager_lua.inl","line":43}},{"arguments":[{"defaultValue":"","name":"id","type":"String"},{"defaultValue":"ghoul::Dictionary()","name":"arg","type":"Table?"}],"help":"Triggers the action given by the specified identifier.","name":"triggerAction","returnType":"","sourceLocation":{"file":"src/interaction/actionmanager_lua.inl","line":183}}],"library":"action","name":"action"},{"fullName":"openspace.asset","functions":[{"arguments":[{"defaultValue":"","name":"assetName","type":"String"}],"help":"Adds an asset to the current scene. The parameter passed into this function is the path to the file that should be loaded.","name":"add","returnType":"","sourceLocation":{"file":"src/scene/assetmanager_lua.inl","line":31}},{"arguments":[],"help":"Returns the paths to all loaded assets, loaded directly or indirectly, as a table containing the paths to all loaded assets.","name":"allAssets","returnType":"Path[]","sourceLocation":{"file":"src/scene/assetmanager_lua.inl","line":76}},{"arguments":[{"defaultValue":"","name":"assetName","type":"String"}],"help":"Returns true if the referenced asset already has been loaded. Otherwise false is returned. The parameter to this function is the path of the asset that should be tested.","name":"isLoaded","returnType":"Boolean","sourceLocation":{"file":"src/scene/assetmanager_lua.inl","line":61}},{"arguments":[{"defaultValue":"","name":"assetName","type":"String"}],"help":"Removes the asset with the specfied name from the scene. The parameter to this function is the same that was originally used to load this asset, i.e. the path to the asset file.","name":"remove","returnType":"","sourceLocation":{"file":"src/scene/assetmanager_lua.inl","line":40}},{"arguments":[],"help":"Removes all assets that are currently loaded","name":"removeAll","returnType":"","sourceLocation":{"file":"src/scene/assetmanager_lua.inl","line":47}},{"arguments":[],"help":"Returns the paths to all loaded root assets, which are assets that are loaded directly either through a profile or by calling the `openspace.asset.add` method.","name":"rootAssets","returnType":"Path[]","sourceLocation":{"file":"src/scene/assetmanager_lua.inl","line":91}}],"library":"asset","name":"asset"},{"fullName":"openspace.dashboard","functions":[{"arguments":[{"defaultValue":"","name":"dashboard","type":"Table"}],"help":"Adds a new dashboard item to the main dashboard.","name":"addDashboardItem","returnType":"","sourceLocation":{"file":"src/rendering/dashboard_lua.inl","line":28}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"dashboard","type":"Table"}],"help":"Adds a new dashboard item to an existing SceenSpaceDashboard.","name":"addDashboardItemToScreenSpace","returnType":"","sourceLocation":{"file":"modules/base/rendering/screenspacedashboard_lua.inl","line":28}},{"arguments":[],"help":"Removes all dashboard items from the main dashboard.","name":"clearDashboardItems","returnType":"","sourceLocation":{"file":"src/rendering/dashboard_lua.inl","line":62}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String | Table"}],"help":"Removes the dashboard item with the specified identifier.","name":"removeDashboardItem","returnType":"","sourceLocation":{"file":"src/rendering/dashboard_lua.inl","line":43}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Removes all dashboard items from an existing ScreenSpaceDashboard.","name":"removeDashboardItemsFromScreenSpace","returnType":"","sourceLocation":{"file":"modules/base/rendering/screenspacedashboard_lua.inl","line":49}}],"library":"dashboard","name":"dashboard"},{"fullName":"openspace.debugging","functions":[{"arguments":[{"defaultValue":"","name":"nodeIdentifier","type":"String"},{"defaultValue":"","name":"scale","type":"Number?"}],"help":"Adds a set of Cartesian axes to the scene graph node identified by the first string, to illustrate its local coordinate system. The second (optional) argument is a scale value, in meters.","name":"addCartesianAxes","returnType":"","sourceLocation":{"file":"modules/debugging/debuggingmodule_lua.inl","line":255}},{"arguments":[],"help":"Removes the rendered control points.","name":"removePathControlPoints","returnType":"","sourceLocation":{"file":"modules/debugging/debuggingmodule_lua.inl","line":241}},{"arguments":[],"help":"Removes the currently rendered camera path if there is one.","name":"removeRenderedCameraPath","returnType":"","sourceLocation":{"file":"modules/debugging/debuggingmodule_lua.inl","line":159}},{"arguments":[{"defaultValue":"100","name":"nSteps","type":"Integer?"},{"defaultValue":"false","name":"renderDirections","type":"Boolean?"},{"defaultValue":"6e7","name":"directionLineLength","type":"Number?"}],"help":"Render the current camera path from the path navigation system. The first optional argument is the number of samples to take along the path (defaults to 100). If a second optional argument is included and set to true, a line indicating the camera view direction along the path will also be rendered. This can be useful when debugging camera orientations. Finally, the third optional argument can be used to set the length (in meter) of the view direction lines.","name":"renderCameraPath","returnType":"","sourceLocation":{"file":"modules/debugging/debuggingmodule_lua.inl","line":44}},{"arguments":[{"defaultValue":"2000000.0","name":"radius","type":"Number?"}],"help":"Render the control points for the camera path spline as spheres. The optional argument can be used to set the radius of the created spheres.","name":"renderPathControlPoints","returnType":"","sourceLocation":{"file":"modules/debugging/debuggingmodule_lua.inl","line":172}}],"library":"debugging","name":"debugging"},{"fullName":"openspace.event","functions":[{"arguments":[{"defaultValue":"","name":"identifier","type":"Integer"}],"help":"Disables the event with the provided identifier.","name":"disableEvent","returnType":"","sourceLocation":{"file":"src/events/eventengine_lua.inl","line":87}},{"arguments":[{"defaultValue":"","name":"identifier","type":"Integer"}],"help":"Enables the event with the provided identifier.","name":"enableEvent","returnType":"","sourceLocation":{"file":"src/events/eventengine_lua.inl","line":80}},{"arguments":[],"help":"Returns the list of registered events.","name":"registeredEvents","returnType":"Table[]","sourceLocation":{"file":"src/events/eventengine_lua.inl","line":54}},{"arguments":[{"defaultValue":"","name":"event","type":"String"},{"defaultValue":"","name":"action","type":"String"},{"defaultValue":"","name":"filter","type":"Table?"}],"help":"Registers an action to be executed whenever an event is encountered. If the optional third parameter is provided, it describes a filter that the event is being checked against and only if it passes the filter, the action is triggered.","name":"registerEventAction","returnType":"","sourceLocation":{"file":"src/events/eventengine_lua.inl","line":32}},{"arguments":[{"defaultValue":"","name":"event","type":"String"},{"defaultValue":"","name":"action","type":"String"},{"defaultValue":"","name":"filter","type":"Table?"}],"help":"Unregisters a specific combination of event, action, and potentially a filter.","name":"unregisterEventAction","returnType":"","sourceLocation":{"file":"src/events/eventengine_lua.inl","line":43}}],"library":"event","name":"event"},{"fullName":"openspace.exoplanets","functions":[{"arguments":[{"defaultValue":"","name":"starNames","type":"String | String[]"}],"help":"Add one or multiple exoplanet systems to the scene, as specified by the input. An input string should be the name of the system host star.","name":"addExoplanetSystem","returnType":"","sourceLocation":{"file":"modules/exoplanets/exoplanetsmodule_lua.inl","line":620}},{"arguments":[],"help":"Deprecated in favor of 'listOfExoplanets'","name":"getListOfExoplanets","returnType":"String[]","sourceLocation":{"file":"modules/exoplanets/exoplanetsmodule_lua.inl","line":675}},{"arguments":[],"help":"","name":"listAvailableExoplanetSystems","returnType":"","sourceLocation":{"file":"modules/exoplanets/exoplanetsmodule_lua.inl","line":686}},{"arguments":[],"help":"Returns a list with names of the host star of all the exoplanet systems that have sufficient data for generating a visualization, based on the module's loaded data file.","name":"listOfExoplanets","returnType":"String[]","sourceLocation":{"file":"modules/exoplanets/exoplanetsmodule_lua.inl","line":667}},{"arguments":[{"defaultValue":"","name":"csvFile","type":"String"}],"help":"Load a set of exoplanets based on custom data, in the form of a CSV file, and add them to the rendering. Can be used to load custom datasets, or more recent planets than what are included in the internal data file that is released with OpenSpace.\n\nThe format and column names in the CSV sould be the same as the ones provided by the NASA Exoplanet Archive. https://exoplanetarchive.ipac.caltech.edu/\n\nWe recommend downloading the file from the Exoplanet Archive's Composite data table, where multiple sources are combined into one row per planet. https://exoplanetarchive.ipac.caltech.edu /cgi-bin/TblView/nph-tblView?app=ExoTbls&config=PSCompPars\n\nPlease remember to include all columns in the file download, as missing data columns may lead to an incomplete visualization.\n\nAlso, avoid loading too large files of planets, as each added system will affect the rendering performance.","name":"loadExoplanetsFromCsv","returnType":"","sourceLocation":{"file":"modules/exoplanets/exoplanetsmodule_lua.inl","line":721}},{"arguments":[{"defaultValue":"","name":"starName","type":"String"}],"help":"","name":"removeExoplanetSystem","returnType":"","sourceLocation":{"file":"modules/exoplanets/exoplanetsmodule_lua.inl","line":648}}],"library":"exoplanets","name":"exoplanets"},{"fullName":"openspace.gaia","functions":[{"arguments":[{"defaultValue":"","name":"name","type":"String"},{"defaultValue":"","name":"position","type":"vec3"},{"defaultValue":"","name":"size","type":"vec3"}],"help":"Creates a clipping box for the Gaia renderable in the first argument","name":"addClippingBox","returnType":""},{"arguments":[{"defaultValue":"","name":"name","type":"String"},{"defaultValue":"","name":"radius","type":"Number"}],"help":"Creates a clipping sphere for the Gaia renderable in the first argument","name":"addClippingSphere","returnType":""},{"arguments":[],"help":"","name":"removeClippingBox","returnType":""}],"library":"gaia","name":"gaia"},{"fullName":"openspace.globebrowsing","functions":[{"arguments":[{"defaultValue":"","name":"directory","type":"String"},{"defaultValue":"","name":"nodeName","type":"String"}],"help":"Retrieves all info files recursively in the directory passed as the first argument to this function. The color and height tables retrieved from these info files are then added to the RenderableGlobe identified by name passed to the second argument.Usage: openspace.globebrowsing.addBlendingLayersFromDirectory(directory, \"Earth\")","name":"addBlendingLayersFromDirectory","returnType":""},{"arguments":[{"defaultValue":"","name":"altitude","type":"Number"},{"defaultValue":"","name":"globeIdentifier","type":"String"},{"defaultValue":"","name":"latitude","type":"Number"},{"defaultValue":"","name":"longitude","type":"Number"},{"defaultValue":"","name":"name","type":"String"}],"help":"Creates a new SceneGraphNode that can be used as focus node. Usage: openspace.globebrowsing.addFocusNodeFromLatLong(\"Olympus Mons\", \"Mars\", -18.65, 226.2, optionalAltitude)","name":"addFocusNodeFromLatLong","returnType":""},{"arguments":[{"defaultValue":"","name":"directory","type":"String"},{"defaultValue":"","name":"nodeName","type":"String"}],"help":"Retrieves all info files recursively in the directory passed as the first argument to this function. The name and location retrieved from these info files are then used to create new SceneGraphNodes that can be used as focus nodes. Usage: openspace.globebrowsing.addFocusNodesFromDirectory(directory, \"Mars\")","name":"addFocusNodesFromDirectory","returnType":""},{"arguments":[{"defaultValue":"","name":"globeName","type":"String"},{"defaultValue":"","name":"table","type":"Table"}],"help":"Add a GeoJson layer specified by the given table to the globe specified by the 'globeName' argument","name":"addGeoJson","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":598}},{"arguments":[{"defaultValue":"","name":"filename","type":"String"},{"defaultValue":"","name":"name","type":"String?"}],"help":"Add a GeoJson layer from the given file name and add it to the current anchor node, if it is a globe. Note that you might have to increase the height offset for the added feature to be visible on the globe, if using a height map","name":"addGeoJsonFromFile","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":663}},{"arguments":[{"defaultValue":"","name":"endDate","type":"String"},{"defaultValue":"","name":"format","type":"String"},{"defaultValue":"","name":"layer","type":"String"},{"defaultValue":"","name":"resolution","type":"String"},{"defaultValue":"","name":"startDate","type":"String"}],"help":"Adds a new layer from NASA GIBS to the Earth globe. Arguments are: imagery layer name, imagery resolution, start date, end date, format. For all specifications, see https://wiki.earthdata.nasa.gov/display/GIBS/GIBS+Available+Imagery+ProductsUsage:openspace.globebrowsing.addGibsLayer('AIRS_Temperature_850hPa_Night', '2km', '2013-07-15', 'Present', 'png')","name":"addGibsLayer","returnType":""},{"arguments":[{"defaultValue":"","name":"globeName","type":"String"},{"defaultValue":"","name":"layerGroupName","type":"String"},{"defaultValue":"","name":"layer","type":"Table"}],"help":"Adds a layer to the specified globe. The first argument specifies the name of the scene graph node of which to add the layer. The renderable of the specified scene graph node needs to be a renderable globe. The second argument is the layer group which can be any of the supported layer groups. The third argument is the dictionary defining the layer.","name":"addLayer","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":36}},{"arguments":[{"defaultValue":"","name":"name","type":"String"}],"help":"Returns an array of tables that describe the available layers that are supported by the WMS server identified by the provided name. The 'URL' component of the returned table can be used in the 'FilePath' argument for a call to the 'addLayer' function to add the value to a globe.","name":"capabilitiesWMS","returnType":"Table[]","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":576}},{"arguments":[{"defaultValue":"","name":"date","type":"String"},{"defaultValue":"","name":"format","type":"String"},{"defaultValue":"","name":"layerName","type":"String"},{"defaultValue":"","name":"resolution","type":"String"}],"help":"Creates an XML configuration for a GIBS dataset.Arguments are: layerName, date, resolution, format.For all specifications, see https://wiki.earthdata.nasa.gov/display/GIBS/GIBS+Available+Imagery+ProductsUsage:openspace.globebrowsing.addLayer(\"Earth\",\"ColorLayers\",{Name = \"MODIS_Terra_Chlorophyll_A\",FilePath = openspace.globebrowsing.createGibsGdalXml(\"MODIS_Terra_Chlorophyll_A\",\"2013-07-02\",\"1km\",\"png\")})","name":"createGibsGdalXml","returnType":""},{"arguments":[{"defaultValue":"","name":"format","type":"String"},{"defaultValue":"","name":"layerName","type":"String"},{"defaultValue":"","name":"resolution","type":"String"}],"help":"            Creates an XML configuration for a temporal GIBS dataset to be used in\n            a TemporalTileprovider\n        ","name":"createTemporalGibsGdalXml","returnType":""},{"arguments":[{"defaultValue":"","name":"globeName","type":"String"},{"defaultValue":"","name":"tableOrIdentifier","type":"String | Table"}],"help":"Remove the GeoJson layer specified by the given table or string identifier from the globe specified by the 'globeName' argument","name":"deleteGeoJson","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":623}},{"arguments":[{"defaultValue":"","name":"globeName","type":"String"},{"defaultValue":"","name":"layerGroupName","type":"String"},{"defaultValue":"","name":"layerOrName","type":"String | Table"}],"help":"Removes a layer from the specified globe. The first argument specifies the name of the scene graph node of which to remove the layer. The renderable of the specified scene graph node needs to be a renderable globe. The second argument is the layer group which can be any of the supported layer groups. The third argument is either the identifier for the layer or a dictionary with the 'Identifier' key that is used instead.","name":"deleteLayer","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":77}},{"arguments":[{"defaultValue":"","name":"globe","type":"String"},{"defaultValue":"","name":"latitude","type":"Number"},{"defaultValue":"","name":"longitude","type":"Number"},{"defaultValue":"","name":"altitude","type":"Number"},{"defaultValue":"","name":"duration","type":"Number?"},{"defaultValue":"","name":"shouldUseUpVector","type":"Boolean?"}],"help":"Fly the camera to geographic coordinates of a globe, using the path navigation system. The first (optional) argument is the identifier of a scene graph node with a RenderableGlobe. If the globe name is empty, the current anchor will be used. The second and third argument is latitude and longitude (degrees). The fourth argument is the altitude, in meters. The last two optional arguments are: a bool specifying whether the up vector at the target position should be set to the globe's North vector, and a duration for the motion, in seconds. Either of the two can be left out.","name":"flyToGeo","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":343}},{"arguments":[{"defaultValue":"false","name":"useEyePosition","type":"Boolean?"}],"help":"Get geographic coordinates of the camera position in latitude, longitude, and altitude (degrees and meters). If the optional bool paramater is specified, the camera eye postion will be used instead","name":"geoPositionForCamera","returnType":"(Number, Number, Number)","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":469}},{"arguments":[{"defaultValue":"false","name":"useEyePosition","type":"Boolean?"}],"help":"Get geographic coordinates of the camera position in latitude, longitude, and altitude (degrees and meters). If the optional bool paramater is specified, the camera eye postion will be used instead. Deprecated in favor of 'geoPositionForCamera'.","name":"getGeoPositionForCamera","returnType":"(Number, Number, Number)","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":528}},{"arguments":[{"defaultValue":"","name":"globeIdentifier","type":"String"},{"defaultValue":"","name":"layer","type":"String"}],"help":"Returns the list of layers for the scene graph node specified in the first parameter. The second parameter specifies which layer type should be queried. Deprecated in favor of 'layers'.","name":"getLayers","returnType":"String[]","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":159}},{"arguments":[{"defaultValue":"","name":"globeIdentifier","type":"String"},{"defaultValue":"","name":"latitude","type":"Number"},{"defaultValue":"","name":"longitude","type":"Number"},{"defaultValue":"","name":"altitude","type":"Number"}],"help":"Returns a position in the local Cartesian coordinate system of the globe identified by the first argument, that corresponds to the given geographic coordinates: latitude, longitude and altitude (in degrees and meters). In the local coordinate system, the position (0,0,0) corresponds to the globe's center. Deprecated in favor of 'localPositionFromGeo'.","name":"getLocalPositionFromGeo","returnType":"(Number, Number, Number)","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":445}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"x","type":"Integer"},{"defaultValue":"","name":"y","type":"Integer"},{"defaultValue":"","name":"level","type":"Integer"}],"help":"Go to the chunk on a globe with given index x, y, level.","name":"goToChunk","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":263}},{"arguments":[{"defaultValue":"","name":"globe","type":"String"},{"defaultValue":"","name":"latitude","type":"Number"},{"defaultValue":"","name":"longitude","type":"Number"},{"defaultValue":"","name":"altitude","type":"Number?"}],"help":"Go to geographic coordinates of a globe. The first (optional) argument is the identifier of a scene graph node that has a RenderableGlobe attached. If the name of the globe is empty, the current anchor will be used. The second argument is latitude and the third is longitude (degrees). North and East are expressed as positive angles, while South and West are negative. The optional fourth argument is the altitude in meters. If no altitude is provided, the altitude will be kept as the current distance to the surface of the specified globe.","name":"goToGeo","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":289}},{"arguments":[{"defaultValue":"","name":"globeIdentifier","type":"String"},{"defaultValue":"","name":"layer","type":"String"}],"help":"Returns the list of layers for the scene graph node specified in the first parameter. The second parameter specifies which layer type should be queried.","name":"layers","returnType":"String[]","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":122}},{"arguments":[{"defaultValue":"","name":"name","type":"String"},{"defaultValue":"","name":"globe","type":"String"},{"defaultValue":"","name":"url","type":"String"}],"help":"Loads and parses the WMS capabilities xml file from a remote server. The first argument is the name of the capabilities that can be used to later refer to the set of capabilities. The second argument is the globe for which this server is applicable. The third argument is the URL at which the capabilities file can be found.","name":"loadWMSCapabilities","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":547}},{"arguments":[{"defaultValue":"","name":"filePath","type":"String"}],"help":"Loads all WMS servers from the provided file and passes them to the 'openspace.globebrowsing.loadWMSCapabilities' file.","name":"loadWMSServersFromFile","returnType":""},{"arguments":[{"defaultValue":"","name":"globeIdentifier","type":"String"},{"defaultValue":"","name":"latitude","type":"Number"},{"defaultValue":"","name":"longitude","type":"Number"},{"defaultValue":"","name":"altitude","type":"Number"}],"help":"Returns a position in the local Cartesian coordinate system of the globe identified by the first argument, that corresponds to the given geographic coordinates: latitude, longitude and altitude (in degrees and meters). In the local coordinate system, the position (0,0,0) corresponds to the globe's center.","name":"localPositionFromGeo","returnType":"(Number, Number, Number)","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":416}},{"arguments":[{"defaultValue":"","name":"globeIdentifier","type":"String"},{"defaultValue":"","name":"layerGroup","type":"String"},{"defaultValue":"","name":"source","type":"Integer | String"},{"defaultValue":"","name":"destination","type":"Integer | String"}],"help":"Rearranges the order of a single layer on a globe. The first parameter is the identifier of the globe, the second parameter specifies the name of the layer group, the third parameter is the original position of the layer that should be moved and the last parameter is the new position in the list. The third and fourth parameters can also acccept names, in which case these refer to identifiers of the layer to be moved. If the last parameter is a name, the source layer is moved below that destination layer. The first position in the list has index 0, and the last position is given by the number of layers minus one.","name":"moveLayer","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":181}},{"arguments":[{"defaultValue":"","name":"file","type":"String"}],"help":"Parses the passed info file and return the table with the information provided in the info file. The return table contains the optional keys: 'Color', 'Height', 'Node', 'Location', 'Identifier'.Usage: local t = openspace.globebrowsing.parseInfoFile(file)openspace.globebrowsing.addLayer(\"Earth\", \"ColorLayers\", t.color)openspace.globebrowsing.addLayer(\"Earth\", \"HeightLayers\", t.height)","name":"parseInfoFile","returnType":""},{"arguments":[{"defaultValue":"","name":"name","type":"String"}],"help":"Removes the WMS server identified by the first argument from the list of available servers. The parameter corrsponds to the first argument in the loadWMSCapabilities call that was used to load the WMS server.","name":"removeWMSServer","returnType":"","sourceLocation":{"file":"modules/globebrowsing/globebrowsingmodule_lua.inl","line":564}},{"arguments":[{"defaultValue":"","name":"altitude","type":"Number"},{"defaultValue":"","name":"globeIdentifier","type":"String"},{"defaultValue":"","name":"latitude","type":"Number"},{"defaultValue":"","name":"longitude","type":"Number"},{"defaultValue":"","name":"nodeIdentifer","type":"String"}],"help":"Sets the position of a SceneGraphNode that has GlobeTranslation/GlobeRotations. Usage: openspace.globebrowsing.setNodePosition(\"Scale_StatueOfLiberty\", \"Earth\", 40.000, -117.5, optionalAltitude)","name":"setNodePosition","returnType":""},{"arguments":[{"defaultValue":"","name":"nodeIdentifer","type":"String"},{"defaultValue":"","name":"useAltitude","type":"Boolean"}],"help":"Sets the position of a SceneGraphNode that has GlobeTranslation/GlobeRotations to match the camera. Only uses camera position not rotation. If useAltitude is true, then the position will also be updated to the camera's altitude.Usage: openspace.globebrowsing.setNodePositionFromCamera(\"Scale_StatueOfLiberty\", optionalUseAltitude)","name":"setNodePositionFromCamera","returnType":""}],"library":"globebrowsing","name":"globebrowsing"},{"fullName":"openspace.modules","functions":[{"arguments":[{"defaultValue":"","name":"moduleName","type":"String"}],"help":"Checks whether the passed OpenSpaceModule is loaded.","name":"isLoaded","returnType":"Boolean","sourceLocation":{"file":"src/engine/moduleengine_lua.inl","line":28}}],"library":"modules","name":"modules"},{"fullName":"openspace.navigation","functions":[{"arguments":[{"defaultValue":"","name":"v1","type":"Number"},{"defaultValue":"","name":"v2","type":"Number"}],"help":"Directly adds to the global roll of the camera.","name":"addGlobalRoll","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":410}},{"arguments":[{"defaultValue":"","name":"v1","type":"Number"},{"defaultValue":"","name":"v2","type":"Number"}],"help":"Directly adds to the global rotation of the camera.","name":"addGlobalRotation","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":378}},{"arguments":[{"defaultValue":"","name":"v1","type":"Number"},{"defaultValue":"","name":"v2","type":"Number"}],"help":"Directly adds to the local roll of the camera.","name":"addLocalRoll","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":402}},{"arguments":[{"defaultValue":"","name":"v1","type":"Number"},{"defaultValue":"","name":"v2","type":"Number"}],"help":"Directly adds to the local rotation of the camera.","name":"addLocalRotation","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":386}},{"arguments":[{"defaultValue":"","name":"v1","type":"Number"},{"defaultValue":"","name":"v2","type":"Number"}],"help":"Directly adds to the truck movement of the camera.","name":"addTruckMovement","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":394}},{"arguments":[{"defaultValue":"","name":"joystickName","type":"String"},{"defaultValue":"","name":"axis","type":"Integer"}],"help":"Returns the deadzone for the desired axis of the provided joystick.","name":"axisDeadzone","returnType":"Number","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":307}},{"arguments":[{"defaultValue":"","name":"joystickName","type":"String"},{"defaultValue":"","name":"axis","type":"Integer"},{"defaultValue":"","name":"axisType","type":"String"},{"defaultValue":"false","name":"shouldInvert","type":"Boolean?"},{"defaultValue":"\"JoystickLike\"","name":"joystickType","type":"String?"},{"defaultValue":"false","name":"isSticky","type":"Boolean?"},{"defaultValue":"false","name":"shouldFlip","type":"Boolean?"},{"defaultValue":"0.0","name":"sensitivity","type":"Number?"}],"help":"Finds the input joystick with the given 'name' and binds the axis identified by the second argument to be used as the type identified by the third argument. If 'isInverted' is 'true', the axis value is inverted. 'joystickType' is if the joystick behaves more like a joystick or a trigger, where the first is the default. If 'isSticky' is 'true', the value is calculated relative to the previous value. If 'shouldFlip' is true, then the camera movement for the axis is reversed. If 'sensitivity' is given then that value will affect the sensitivity of the axis together with the global sensitivity.\n\n\\\\param joystickName the name for the joystick or game controller that should be bound \\\\param axis the axis of the joystick that should be bound \\\\param axisType the type of movement that the axis should be mapped to \\\\param shouldInvert if the joystick movement should be inverted or not \\\\param joystickType what type of joystick or axis this is. Either <code>\\\"JoystickLike\\\"</code> or <code>\\\"TriggerLike\\\"</code>. \\\\param isSticky if true, the value is calculated relative to the previous value, if false the the value is used as is. \\\\param shouldFlip reverses the movement of the camera that the joystick produces \\\\param sensitivity sensitivity for this axis","name":"bindJoystickAxis","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":199}},{"arguments":[{"defaultValue":"","name":"joystickName","type":"String"},{"defaultValue":"","name":"axis","type":"Integer"},{"defaultValue":"","name":"propertyUri","type":"String"},{"defaultValue":"0.f","name":"min","type":"Number?"},{"defaultValue":"1.f","name":"max","type":"Number?"},{"defaultValue":"false","name":"shouldInvert","type":"Boolean?"},{"defaultValue":"true","name":"isRemote","type":"Boolean?"}],"help":"Finds the input joystick with the given 'name' and binds the axis identified by the second argument to be bound to the property identified by the third argument. 'min' and 'max' is the minimum and the maximum allowed value for the given property and the axis value is rescaled from [-1, 1] to [min, max], default is [0, 1]. If 'isInverted' is 'true', the axis value is inverted. The last argument determines whether the property change is going to be executed locally or remotely, where the latter is the default.\n\n\\\\param joystickName the name for the joystick or game controller that should be bound \\\\param axis the axis of the joystick that should be bound \\\\param propertyUri the property that this joystick axis should modify \\\\param min the minimum value that this axis can set for the property \\\\param max the maximum value that this axis can set for the property \\\\param shouldInvert if the joystick movement should be inverted or not \\\\param isRemote if true, the property change will also be executed on connected nodes if false, the property change will only affect the master node","name":"bindJoystickAxisProperty","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":238}},{"arguments":[{"defaultValue":"","name":"joystickName","type":"String"},{"defaultValue":"","name":"button","type":"Integer"},{"defaultValue":"","name":"command","type":"String"},{"defaultValue":"","name":"documentation","type":"String"},{"defaultValue":"\"Press\"","name":"action","type":"String?"},{"defaultValue":"true","name":"isRemote","type":"Boolean?"}],"help":"Finds the input joystick with the given 'name' and binds a Lua script given by the third argument to be executed when the joystick button identified by the second argument is triggered. The fifth argument determines when the script should be executed, this defaults to 'Press', which means that the script is run when the user presses the button. The fourth arguemnt is the documentation of the script in the third argument. The sixth argument determines whether the command is going to be executable locally or remotely, where the latter is the default.","name":"bindJoystickButton","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":326}},{"arguments":[{"defaultValue":"","name":"joystickName","type":"String"},{"defaultValue":"","name":"button","type":"Integer"}],"help":"Finds the input joystick with the given 'name' and removes all commands that are currently bound to the button identified by the second argument.","name":"clearJoystickButton","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":350}},{"arguments":[],"help":"Returns the distance in meters to the current focus node","name":"distanceToFocus","returnType":"Number","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":442}},{"arguments":[],"help":"Returns the distance in meters to the current focus node's bounding sphere","name":"distanceToFocusBoundingSphere","returnType":"Number","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":454}},{"arguments":[],"help":"Returns the distance in meters to the current focus node's interaction sphere","name":"distanceToFocusInteractionSphere","returnType":"Number","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":468}},{"arguments":[{"defaultValue":"","name":"frame","type":"String?"}],"help":"Return the current navigation state as a Lua table. The optional argument is the scene graph node to use as reference frame. By default, the reference frame will picked based on whether the orbital navigator is currently following the anchor node rotation. If it is, the anchor will be chosen as reference frame. If not, the reference frame will be set to the scene graph root.","name":"getNavigationState","returnType":"Table","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":53}},{"arguments":[{"defaultValue":"","name":"joystickName","type":"String"},{"defaultValue":"","name":"axis","type":"Integer"}],"help":"Finds the input joystick with the given 'name' and returns the joystick axis information for the passed axis. The information that is returned is the current axis binding as a string, whether the values are inverted as bool, the joystick type as a string, whether the axis is sticky as bool, the sensitivity as number, the property uri bound to the axis as string (empty is type is not Property), the min and max values for the property as numbers and whether the property change will be executed remotly as bool.","name":"joystickAxis","returnType":"(String, Boolean, String, Boolean, Boolean, Number, String, Number, Number, Boolean)","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":266}},{"arguments":[{"defaultValue":"","name":"joystickName","type":"String"},{"defaultValue":"","name":"button","type":"Integer"}],"help":"Finds the input joystick with the given 'name' and returns the script that is currently bound to be executed when the provided button is pressed.","name":"joystickButton","returnType":"String","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":361}},{"arguments":[],"help":"Return the complete list of connected joysticks","name":"listAllJoysticks","returnType":"String[]","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":434}},{"arguments":[{"defaultValue":"","name":"cameraStateFilePath","type":"String"},{"defaultValue":"false","name":"useTimeStamp","type":"Boolean?"}],"help":"Load a navigation state from file. The file should be a lua file returning the navigation state as a table formatted as a Navigation State, such as the output files of saveNavigationState. If usetimeStamp is set to true and the provided navigation state has a timestamp, time will be set as well.","name":"loadNavigationState","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":33}},{"arguments":[],"help":"Reset the camera direction to point at the aim node.","name":"retargetAim","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":112}},{"arguments":[],"help":"Reset the camera direction to point at the anchor node.","name":"retargetAnchor","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":107}},{"arguments":[{"defaultValue":"","name":"path","type":"String"},{"defaultValue":"\"\"","name":"frame","type":"String?"}],"help":"Save the current navigation state to a file with the path given by the first argument. The optional second argument is the scene graph node to use as reference frame. By default, the reference frame will picked based on whether the orbital navigator is currently following the anchor node rotation. If it is, the anchor will be chosen as reference frame. If not, the reference frame will be set to the scene graph root.","name":"saveNavigationState","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":99}},{"arguments":[{"defaultValue":"","name":"joystickName","type":"String"},{"defaultValue":"","name":"axis","type":"Integer"},{"defaultValue":"","name":"deadzone","type":"Number"}],"help":"Finds the input joystick with the given 'name' and sets the deadzone for a particular joystick axis, which means that any input less than this value is completely ignored.","name":"setAxisDeadZone","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":295}},{"arguments":[{"defaultValue":"","name":"navigationState","type":"Table"},{"defaultValue":"false","name":"useTimeStamp","type":"Boolean?"}],"help":"Set the navigation state. The first argument must be a valid Navigation State. If useTimeStamp is set to true and the provided navigation state has a timestamp, time will be set as well.","name":"setNavigationState","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":78}},{"arguments":[],"help":"Picks the next node from the interesting nodes out of the profile and selects that. If the current anchor is not an interesting node, the first will be selected","name":"targetNextInterestingAnchor","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":118}},{"arguments":[],"help":"Picks the previous node from the interesting nodes out of the profile and selects that. If the current anchor is not an interesting node, the first will be selected","name":"targetPreviousInterestingAnchor","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":148}},{"arguments":[{"defaultValue":"\"\"","name":"choice","type":"String?"}],"help":"Immediately start applying the chosen IdleBehavior. If none is specified, use the one set to default in the OrbitalNavigator.","name":"triggerIdleBehavior","returnType":"","sourceLocation":{"file":"src/navigation/navigationhandler_lua.inl","line":421}}],"library":"navigation","name":"navigation"},{"fullName":"openspace.openglCapabilities","functions":[{"arguments":[],"help":"Returns all available extensions as a list of names.","name":"extensions","returnType":"String[]","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":165}},{"arguments":[],"help":"Returns the value of a call to `glGetString(GL_VENDOR)`. This will give detailed information about the vendor of the main graphics card. This string can be used if the automatic Vendor detection failed.","name":"glslCompiler","returnType":"String","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":153}},{"arguments":[],"help":"Returns the vendor of the main graphics card.","name":"gpuVendor","returnType":"String","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":159}},{"arguments":[{"defaultValue":"","name":"version","type":"String"}],"help":"Tests whether the current instance supports the passed OpenGL version. The parameter has to have the form 'X.Y' or 'X.Y.Z'.","name":"hasOpenGLVersion","returnType":"Boolean","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":119}},{"arguments":[{"defaultValue":"","name":"extension","type":"String"}],"help":"Checks is a specific `extension` is supported or not.","name":"isExtensionSupported","returnType":"Boolean","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":171}},{"arguments":[],"help":"Returns the largest dimension for a 2D texture on this graphics card.","name":"max2DTextureSize","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":186}},{"arguments":[],"help":"Returns the largest dimension for a 3D texture on this graphics card.","name":"max3DTextureSize","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":192}},{"arguments":[],"help":"Returns the maximum number of atomic counter buffer bindings that are available on the main graphics card.","name":"maxAtomicCounterBufferBindings","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":201}},{"arguments":[],"help":"Returns the maximum number of shader storage bindings that are available on the main graphics card.","name":"maxShaderStorageBufferBindings","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":210}},{"arguments":[],"help":"Returns the maximum number of texture units that are available on the main graphics card.","name":"maxTextureUnits","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":180}},{"arguments":[],"help":"Returns the maximum number of uniform buffer bindings that are available on the main graphics card.","name":"maxUniformBufferBindings","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":219}},{"arguments":[],"help":"Returns the maximum OpenGL version that is supported on this platform.","name":"openGLVersion","returnType":"String","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":143}}],"library":"openglCapabilities","name":"openglCapabilities"},{"fullName":"openspace.orbitalnavigation","functions":[{"arguments":[{"defaultValue":"","name":"multiplier","type":"Number"}],"help":"Set maximum allowed distance to a multiplier of the interaction sphere of the focus node","name":"setRelativeMaxDistance","returnType":"","sourceLocation":{"file":"src/navigation/orbitalnavigator_lua.inl","line":46}},{"arguments":[{"defaultValue":"","name":"multiplier","type":"Number"}],"help":"Set minimum allowed distance to a multiplier of the interaction sphere of the focus node","name":"setRelativeMinDistance","returnType":"","sourceLocation":{"file":"src/navigation/orbitalnavigator_lua.inl","line":30}}],"library":"orbitalnavigation","name":"orbitalnavigation"},{"fullName":"openspace.parallel","functions":[{"arguments":[],"help":"Connect to parallel.","name":"connect","returnType":"","sourceLocation":{"file":"src/network/parallelpeer_lua.inl","line":28}},{"arguments":[],"help":"Disconnect from parallel.","name":"disconnect","returnType":"","sourceLocation":{"file":"src/network/parallelpeer_lua.inl","line":36}},{"arguments":[],"help":"Request to be the host for this session.","name":"requestHostship","returnType":"","sourceLocation":{"file":"src/network/parallelpeer_lua.inl","line":44}},{"arguments":[],"help":"Resign hostship.","name":"resignHostship","returnType":"","sourceLocation":{"file":"src/network/parallelpeer_lua.inl","line":52}}],"library":"parallel","name":"parallel"},{"fullName":"openspace.pathnavigation","functions":[{"arguments":[],"help":"Continue playing a paused camera path.","name":"continuePath","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":34}},{"arguments":[{"defaultValue":"","name":"path","type":"Table"}],"help":"Create a camera path as described by the lua table input argument.","name":"createPath","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":386}},{"arguments":[{"defaultValue":"","name":"nodeIdentifier","type":"String"},{"defaultValue":"","name":"useUpFromTargetOrDuration","type":"Boolean | Number?"},{"defaultValue":"","name":"duration","type":"Number?"}],"help":"Move the camera to the node with the specified identifier. The optional double specifies the duration of the motion, in seconds. If the optional bool is set to true the target up vector for camera is set based on the target node. Either of the optional parameters can be left out.","name":"flyTo","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":59}},{"arguments":[{"defaultValue":"","name":"nodeIdentifier","type":"String"},{"defaultValue":"","name":"height","type":"Number"},{"defaultValue":"","name":"useUpFromTargetOrDuration","type":"Boolean | Number?"},{"defaultValue":"","name":"duration","type":"Number?"}],"help":"Move the camera to the node with the specified identifier. The second argument is the desired target height above the target node's bounding sphere, in meters. The optional double specifies the duration of the motion, in seconds. If the optional bool is set to true, the target up vector for camera is set based on the target node. Either of the optional parameters can be left out.","name":"flyToHeight","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":115}},{"arguments":[{"defaultValue":"","name":"navigationState","type":"Table"},{"defaultValue":"","name":"duration","type":"Number?"}],"help":"Create a path to the navigation state described by the input table. The optional double specifies the target duration of the motion, in seconds. Note that roll must be included for the target up direction to be taken into account.","name":"flyToNavigationState","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":163}},{"arguments":[],"help":"Returns true if a camera path is currently running, and false otherwise.","name":"isFlying","returnType":"Boolean","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":28}},{"arguments":[{"defaultValue":"","name":"nodeIdentifier","type":"String"},{"defaultValue":"","name":"fadeDuration","type":"Number?"}],"help":"Fade rendering to black, jump to the specified navigation state, and then fade in. This is done by triggering another script that handles the logic.\n\nIf no fade duration is specified, use the property from Navigation Handler","name":"jumpTo","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":362}},{"arguments":[{"defaultValue":"","name":"navigationState","type":"Table"},{"defaultValue":"","name":"fadeDuration","type":"Number?"}],"help":"Fade rendering to black, jump to the specified node, and then fade in. This is done by triggering another script that handles the logic.\n\nIf no fade duration is specified, use the property from Navigation Handler","name":"jumpToNavigationState","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":316}},{"arguments":[],"help":"Pause a playing camera path.","name":"pausePath","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":39}},{"arguments":[],"help":"Immediately skips to the end of the current camera path, if one is being played.","name":"skipToEnd","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":49}},{"arguments":[],"help":"Stops a path, if one is being played.","name":"stopPath","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":44}},{"arguments":[{"defaultValue":"","name":"distance","type":"Number"},{"defaultValue":"","name":"duration","type":"Number?"}],"help":"Fly linearly to a specific distance in relation to the focus node. The distance is given in meters above the bounding sphere of the current focus node. The optional input parameter specifies the duration for the motion, in seconds.","name":"zoomToDistance","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":234}},{"arguments":[{"defaultValue":"","name":"distance","type":"Number"},{"defaultValue":"","name":"duration","type":"Number?"}],"help":"Fly linearly to a specific distance in relation to the focus node. The distance is given as a multiple of the bounding sphere of the current focus node. That is, a value of 1 will result in a position at a distance of one times the size of the bounding sphere away from the object. The optional input parameter specifies the duration for the motion, in seconds.","name":"zoomToDistanceRelative","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":274}},{"arguments":[{"defaultValue":"","name":"duration","type":"Number?"}],"help":"Zoom linearly to the current focus node, using the default distance. The optional input parameter specifies the duration for the motion, in seconds.","name":"zoomToFocus","returnType":"","sourceLocation":{"file":"src/navigation/pathnavigator_lua.inl","line":202}}],"library":"pathnavigation","name":"pathnavigation"},{"fullName":"openspace.scriptScheduler","functions":[{"arguments":[{"defaultValue":"","name":"group","type":"Integer?"}],"help":"Clears all scheduled scripts.","name":"clear","returnType":"","sourceLocation":{"file":"src/scripting/scriptscheduler_lua.inl","line":106}},{"arguments":[{"defaultValue":"","name":"fileName","type":"String"}],"help":"Load timed scripts from a Lua script file that returns a list of scheduled scripts.","name":"loadFile","returnType":"","sourceLocation":{"file":"src/scripting/scriptscheduler_lua.inl","line":28}},{"arguments":[{"defaultValue":"","name":"time","type":"String"},{"defaultValue":"","name":"forwardScript","type":"String"},{"defaultValue":"","name":"backwardScript","type":"String?"},{"defaultValue":"","name":"universalScript","type":"String?"},{"defaultValue":"","name":"group","type":"Integer?"}],"help":"Load a single scheduled script. The first argument is the time at which the scheduled script is triggered, the second argument is the script that is executed in the forward direction, the optional third argument is the script executed in the backwards direction, and the optional last argument is the universal script, executed in either direction.","name":"loadScheduledScript","returnType":"","sourceLocation":{"file":"src/scripting/scriptscheduler_lua.inl","line":62}},{"arguments":[],"help":"Returns the list of all scheduled scripts","name":"scheduledScripts","returnType":"Table[]","sourceLocation":{"file":"src/scripting/scriptscheduler_lua.inl","line":111}},{"arguments":[],"help":"Sets the time reference for scheduled scripts to application time (seconds since OpenSpace application started).","name":"setModeApplicationTime","returnType":"","sourceLocation":{"file":"src/scripting/scriptscheduler_lua.inl","line":85}},{"arguments":[],"help":"Sets the time reference for scheduled scripts to the time since the recording was started (the same relative time applies to playback).","name":"setModeRecordedTime","returnType":"","sourceLocation":{"file":"src/scripting/scriptscheduler_lua.inl","line":93}},{"arguments":[],"help":"Sets the time reference for scheduled scripts to the simulated date & time (J2000 epoch seconds).","name":"setModeSimulationTime","returnType":"","sourceLocation":{"file":"src/scripting/scriptscheduler_lua.inl","line":101}}],"library":"scriptScheduler","name":"scriptScheduler"},{"fullName":"openspace.sessionRecording","functions":[{"arguments":[],"help":"Used to disable that renderings are saved during playback.","name":"disableTakeScreenShotDuringPlayback","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":169}},{"arguments":[{"defaultValue":"60","name":"fps","type":"Integer?"}],"help":"Enables that rendered frames should be saved during playback. The parameter determines the number of frames that are exported per second if this value is not provided, 60 frames per second will be exported.","name":"enableTakeScreenShotDuringPlayback","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":164}},{"arguments":[{"defaultValue":"","name":"convertFilePath","type":"String"}],"help":"Performs a conversion of the specified file to the most most recent file format, creating a copy of the recording file.","name":"fileFormatConversion","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":177}},{"arguments":[],"help":"Returns true if session recording is currently playing back a recording.","name":"isPlayingBack","returnType":"Boolean","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":201}},{"arguments":[],"help":"Returns true if session recording is currently recording a recording.","name":"isRecording","returnType":"Boolean","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":206}},{"arguments":[{"defaultValue":"","name":"pause","type":"Boolean"}],"help":"Pauses or resumes the playback progression through keyframes.","name":"setPlaybackPause","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":185}},{"arguments":[{"defaultValue":"","name":"file","type":"String"},{"defaultValue":"false","name":"loop","type":"Boolean?"},{"defaultValue":"true","name":"shouldWaitForTiles","type":"Boolean?"}],"help":"Starts a playback session with keyframe times that are relative to the time since the recording was started (the same relative time applies to the playback). When playback starts, the simulation time is automatically set to what it was at recording time. The string argument is the filename to pull playback keyframes from (the file path is relative to the RECORDINGS variable specified in the config file). If a second input value of true is given, then playback will continually loop until it is manually stopped.","name":"startPlayback","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":73}},{"arguments":[{"defaultValue":"","name":"file","type":"String"}],"help":"Starts a playback session with keyframe times that are relative to application time (seconds since OpenSpace application started). The string argument is the filename to pull playback keyframes from (the file path is relative to the RECORDINGS variable specified in the config file).","name":"startPlaybackApplicationTime","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":97}},{"arguments":[{"defaultValue":"","name":"file","type":"String"},{"defaultValue":"false","name":"loop","type":"Boolean?"}],"help":"Starts a playback session with keyframe times that are relative to the time since the recording was started (the same relative time applies to the playback). The string argument is the filename to pull playback keyframes from (the file path is relative to the RECORDINGS variable specified in the config file). If a second input value of true is given, then playback will continually loop until it is manually stopped.","name":"startPlaybackRecordedTime","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":119}},{"arguments":[{"defaultValue":"","name":"file","type":"String"}],"help":"Starts a playback session with keyframe times that are relative to the simulated date & time. The string argument is the filename to pull playback keyframes from (the file path is relative to the RECORDINGS variable specified in the config file).","name":"startPlaybackSimulationTime","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":139}},{"arguments":[{"defaultValue":"","name":"recordFilePath","type":"String"}],"help":"Starts a recording session. The string argument is the filename used for the file where the recorded keyframes are saved. The file data format is binary.","name":"startRecording","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":31}},{"arguments":[{"defaultValue":"","name":"recordFilePath","type":"String"}],"help":"Starts a recording session. The string argument is the filename used for the file where the recorded keyframes are saved. The file data format is ASCII.","name":"startRecordingAscii","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":47}},{"arguments":[],"help":"Stops a playback session before playback of all keyframes is complete.","name":"stopPlayback","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":155}},{"arguments":[],"help":"Stops a recording session.","name":"stopRecording","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":60}},{"arguments":[],"help":"Toggles the pause function, i.e. temporarily setting the delta time to 0 and restoring it afterwards.","name":"togglePlaybackPause","returnType":"","sourceLocation":{"file":"src/interaction/sessionrecording_lua.inl","line":193}}],"library":"sessionRecording","name":"sessionRecording"},{"fullName":"openspace.skybrowser","functions":[{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"1","name":"numberOfCopies","type":"Integer?"},{"defaultValue":"glm::vec3(2.1f, 0.f, 0.f)","name":"position","type":"vec3?"}],"help":"Takes an identifier to a sky browser and adds a rendered copy to it. The first argument is the position of the first copy. The position is in RAE or Cartesian coordinates, depending on if 'Use Radius Azimuth Elevation' is checked. The second argument is the number of copies. If RAE is used, they will be evenly spread out on the azimuth.","name":"addDisplayCopy","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":804}},{"arguments":[{"defaultValue":"","name":"targetId","type":"String"},{"defaultValue":"","name":"browserId","type":"String"}],"help":"Takes the identifier of the sky target and a sky browser and adds them to the sky browser module.","name":"addPairToSkyBrowserModule","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":311}},{"arguments":[{"defaultValue":"","name":"id","type":"String"}],"help":"Takes an identifier to a sky browser or sky target. Rotates the camera so that the target is placed in the center of the view.","name":"adjustCamera","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":488}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Takes an identifier to a sky browser and animates its corresponding target to the center of the current view.","name":"centerTargetOnScreen","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":517}},{"arguments":[],"help":"Creates a sky browser and a target.","name":"createTargetBrowserPair","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":540}},{"arguments":[],"help":"Disables the hover circle, if there is one added to the sky browser module.","name":"disableHoverCircle","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":183}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"translation","type":"vec2"}],"help":"Finetunes the target depending on a mouse drag. rendered copy to it. First argument is the identifier of the sky browser, second is the start position of the drag and third is the end position of the drag.","name":"finetuneTargetPosition","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":847}},{"arguments":[],"help":"Deprecated in favor of 'listOfExoplanets'","name":"getListOfImages","returnType":"Table","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":393}},{"arguments":[],"help":"Deprecated in favor of 'targetData'","name":"getTargetData","returnType":"Table","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":476}},{"arguments":[],"help":"Deprecated in favor of 'wwtImageCollectionUrl'","name":"getWwtImageCollectionUrl","returnType":"Table","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":337}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Takes an identifier to a sky browser and starts the initialization for that browser. That means that the browser starts to try to connect to the AAS WorldWide Telescope application by sending it messages. And that the target matches its appearance to its corresponding browser.","name":"initializeBrowser","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":290}},{"arguments":[],"help":"Returns a list of all the loaded AAS WorldWide Telescope images that have been loaded. Each image has a name, thumbnail url, equatorial spherical coordinates RA and Dec, equatorial Cartesian coordinates, if the image has celestial coordinates, credits text, credits url and the identifier of the image which is a unique number.","name":"listOfImages","returnType":"Table","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":354}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Takes an identifier to a sky browser or target and loads the WWT image collection to that browser.","name":"loadImagesToWWT","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":210}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Sets the image collection as loaded in the sky browser. Takes an identifier to the sky browser.","name":"loadingImageCollectionComplete","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":863}},{"arguments":[{"defaultValue":"","name":"imageUrl","type":"String"}],"help":"Moves the hover circle to the coordinate specified by the image index.","name":"moveCircleToHoverImage","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":174}},{"arguments":[{"defaultValue":"","name":"nodeIndex","type":"Integer"},{"defaultValue":"\"all\"","name":"id","type":"String?"}],"help":"Reloads the sky browser display copy for the node index that is sent in. .If no ID is sent in, it will reload all display copies on that node.","name":"reloadDisplayCopyOnNode","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":71}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Takes an identifier to a sky browser and removes the latest added rendered copy to it.","name":"removeDisplayCopy","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":819}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"imageUrl","type":"String"}],"help":"Takes an identifier to a sky browser or target and an index to an image. Removes that image from that sky browser.","name":"removeSelectedImageInBrowser","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":693}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Takes in identifier to a sky browser or target and removes them.","name":"removeTargetBrowserPair","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":639}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"scroll","type":"Number"}],"help":"Takes an identifier to a sky browser or a sky target and a vertical field of view. Changes the field of view as specified by the input.","name":"scrollOverBrowser","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":742}},{"arguments":[{"defaultValue":"","name":"imageUrl","type":"String"}],"help":"Takes an index to an image and selects that image in the currently selected sky browser.","name":"selectImage","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":101}},{"arguments":[],"help":"Sends all sky browsers' identifiers to their respective CEF browser.","name":"sendOutIdsToBrowsers","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":272}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"red","type":"Integer"},{"defaultValue":"","name":"green","type":"Integer"},{"defaultValue":"","name":"blue","type":"Integer"}],"help":"Takes an identifier to a sky browser or a sky target and a rgb color in the ranges [0, 255].","name":"setBorderColor","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":756}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"radius","type":"Number"}],"help":"Takes an identifier to a sky browser and a radius value between 0 and 1, where 0 is rectangular and 1 is circular","name":"setBorderRadius","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":772}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"ratio","type":"Number"}],"help":"Sets the screen space size of the sky browser to the numbers specified by the input [x, y].","name":"setBrowserRatio","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":787}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"rightAscension","type":"Number"},{"defaultValue":"","name":"declination","type":"Number"}],"help":"Takes the identifier of a sky browser or a sky target and equatorial coordinates Right Ascension and Declination. The target will animate to this coordinate and the browser will display the coordinate.","name":"setEquatorialAim","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":710}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Takes an identifier to a screen space renderable and adds it to the module.","name":"setHoverCircle","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":158}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"imageUrl","type":"String"},{"defaultValue":"","name":"imageOrder","type":"Integer"}],"help":"Takes an identifier to a sky browser or a sky target, an image index and the order which it should have in the selected image list. The image is then changed to have this order.","name":"setImageLayerOrder","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":194}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"imageUrl","type":"String"},{"defaultValue":"","name":"opacity","type":"Number"}],"help":"Takes an identifier to a sky browser or sky target, an index to an image and a value for the opacity.","name":"setOpacityOfImageLayer","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":501}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Takes an identifier to a sky browser or target. Sets that sky browser currently selected.","name":"setSelectedBrowser","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":531}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"verticalFieldOfView","type":"Number"}],"help":"Takes an identifier to a sky browser or a sky target and a vertical field of view. Changes the field of view as specified by the input.","name":"setVerticalFov","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":726}},{"arguments":[{"defaultValue":"","name":"show","type":"Boolean"}],"help":"Show or hide all targets and browsers. Takes a boolean that sets it to either be shown or not.","name":"showAllTargetsAndBrowsers","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":894}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Starts the fine-tuning of the target rendered copy to it.","name":"startFinetuningTarget","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":832}},{"arguments":[],"help":"Starts the setup process of the sky browers. This function calls the Lua function 'sendOutIdsToBrowsers' in all nodes in the cluster.","name":"startSetup","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":234}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"}],"help":"Stop animations. Takes an identifier to a sky browser.","name":"stopAnimations","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":906}},{"arguments":[],"help":"Returns a table of data regarding the current view and the sky browsers and targets. returns a table of data regarding the current targets.","name":"targetData","returnType":"Table","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":407}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"startingPositionX","type":"Number"},{"defaultValue":"","name":"startingPositionY","type":"Number"},{"defaultValue":"","name":"translationX","type":"Number"},{"defaultValue":"","name":"translationY","type":"Number"}],"help":"Takes an identifier to a sky browser or sky target and the [x, y] starting position and the [x, y] translation vector.","name":"translateScreenSpaceRenderable","returnType":"","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":671}},{"arguments":[],"help":"Returns the AAS WorldWide Telescope image collection url.","name":"wwtImageCollectionUrl","returnType":"Table","sourceLocation":{"file":"modules/skybrowser/skybrowsermodule_lua.inl","line":326}}],"library":"skybrowser","name":"skybrowser"},{"fullName":"openspace.space","functions":[{"arguments":[{"defaultValue":"","name":"rightAscension","type":"Number | String"},{"defaultValue":"","name":"declination","type":"Number | String"},{"defaultValue":"","name":"distance","type":"Number"}],"help":"Returns the cartesian world position of a ra dec coordinate with distance. If the coordinate is given as strings the format should be ra 'XhYmZs' and dec 'XdYmZs'. If the coordinate is given as numbers the values should be in degrees.","name":"convertFromRaDec","returnType":"vec3","sourceLocation":{"file":"modules/space/spacemodule_lua.inl","line":34}},{"arguments":[{"defaultValue":"","name":"x","type":"Number"},{"defaultValue":"","name":"y","type":"Number"},{"defaultValue":"","name":"z","type":"Number"}],"help":"Returns the formatted ra, dec strings and distance for a given cartesian world coordinate.","name":"convertToRaDec","returnType":"(String, String, Number)","sourceLocation":{"file":"modules/space/spacemodule_lua.inl","line":72}},{"arguments":[{"defaultValue":"","name":"p","type":"Path"},{"defaultValue":"","name":"type","type":"String"}],"help":"","name":"readKeplerFile","returnType":"Table[]","sourceLocation":{"file":"modules/space/spacemodule_lua.inl","line":82}},{"arguments":[{"defaultValue":"","name":"tlePath","type":"String"}],"help":"        Takes the provided TLE file, converts it into a SPICE kernel and returns a\n        SpiceTranslation instance that can be used to access the information in the TLE\n        file using SPICE's superior integral solver.\n\n        The second return value is the spice kernel that should be loaded and unloaded by\n        whoever called this function.\n    ","name":"tleToSpiceTranslation","returnType":"{ Translation, SpiceKernel }"}],"library":"space","name":"space"},{"fullName":"openspace.spice","functions":[{"arguments":[{"defaultValue":"","name":"tle","type":"Path"},{"defaultValue":"","name":"spk","type":"Path"},{"defaultValue":"0","name":"elementToExtract","type":"Integer?"}],"help":"This function converts a TLE file into SPK format and saves it at the provided path. The last parameter is only used if there are multiple craft specified in the provided TLE file and is selecting which (0-based index) of the list to create a kernel from.\n\nThis function returns the SPICE ID of the object for which the kernel was created","name":"convertTLEtoSPK","returnType":"Integer","sourceLocation":{"file":"src/util/spicemanager_lua.inl","line":143}},{"arguments":[],"help":"Returns a list of all loaded kernels","name":"kernels","returnType":"Path[]","sourceLocation":{"file":"src/util/spicemanager_lua.inl","line":76}},{"arguments":[{"defaultValue":"","name":"kernel","type":"String | String[]"}],"help":"Loads the provided SPICE kernel by name. The name can contain path tokens, which are automatically resolved.","name":"loadKernel","returnType":"","sourceLocation":{"file":"src/util/spicemanager_lua.inl","line":33}},{"arguments":[{"defaultValue":"","name":"target","type":"String"},{"defaultValue":"","name":"observer","type":"String"},{"defaultValue":"","name":"frame","type":"String"},{"defaultValue":"","name":"date","type":"String"}],"help":"Returns the position for a given body relative to another body, in a given frame of reference, at a specific time. Example: openspace.spice.position('INSIGHT', 'MARS',' GALACTIC', '2018 NOV 26 19:45:34')","name":"position","returnType":"vec3","sourceLocation":{"file":"src/util/spicemanager_lua.inl","line":120}},{"arguments":[{"defaultValue":"","name":"body","type":"String"},{"defaultValue":"","name":"frame","type":"String"},{"defaultValue":"","name":"date","type":"String"}],"help":"Returns the rotationMatrix for a given body in a frame of reference at a specific time. Example: openspace.spice.rotationMatrix('INSIGHT_LANDER_CRUISE','MARS', '2018 NOV 26 19:45:34')","name":"rotationMatrix","returnType":"mat3x3","sourceLocation":{"file":"src/util/spicemanager_lua.inl","line":100}},{"arguments":[{"defaultValue":"","name":"includeBuiltIn","type":"Boolean"}],"help":"Returns a list of Spice Bodies loaded into the system. Returns SPICE built in frames if builtInFrames. Returns User loaded frames if !builtInFrames.","name":"spiceBodies","returnType":"String -> String","sourceLocation":{"file":"src/util/spicemanager_lua.inl","line":84}},{"arguments":[{"defaultValue":"","name":"kernel","type":"String | String[]"}],"help":"Unloads the provided SPICE kernel. The name can contain path tokens, which are automatically resolved.","name":"unloadKernel","returnType":"","sourceLocation":{"file":"src/util/spicemanager_lua.inl","line":60}}],"library":"spice","name":"spice"},{"fullName":"openspace.statemachine","functions":[{"arguments":[{"defaultValue":"","name":"state","type":"String"}],"help":"Returns true if there is a defined transition between the current state and the given string name of a state, otherwise false.","name":"canGoToState","returnType":"Boolean","sourceLocation":{"file":"modules/statemachine/statemachinemodule_lua.inl","line":98}},{"arguments":[{"defaultValue":"","name":"states","type":"Table"},{"defaultValue":"","name":"transitions","type":"Table"},{"defaultValue":"","name":"startState","type":"String?"}],"help":"Creates a state machine from a list of states and transitions. See State and Transition documentation for details. The optional thrid argument is the identifier of the desired initial state. If left out, the first state in the list will be used.","name":"createStateMachine","returnType":"","sourceLocation":{"file":"modules/statemachine/statemachinemodule_lua.inl","line":32}},{"arguments":[],"help":"Returns the string name of the current state that the statemachine is in.","name":"currentState","returnType":"String","sourceLocation":{"file":"modules/statemachine/statemachinemodule_lua.inl","line":76}},{"arguments":[],"help":"Destroys the current state machine and deletes all the memory.","name":"destroyStateMachine","returnType":"","sourceLocation":{"file":"modules/statemachine/statemachinemodule_lua.inl","line":46}},{"arguments":[{"defaultValue":"","name":"newState","type":"String"}],"help":"Triggers a transition from the current state to the state with the given identifier. Requires that the specified string corresponds to an existing state, and that a transition between the two states exists.","name":"goToState","returnType":"","sourceLocation":{"file":"modules/statemachine/statemachinemodule_lua.inl","line":57}},{"arguments":[],"help":"Returns a list with the identifiers of all the states that can be transitioned to from the current state.","name":"possibleTransitions","returnType":"String[]","sourceLocation":{"file":"modules/statemachine/statemachinemodule_lua.inl","line":87}},{"arguments":[],"help":"Prints information about the current state and possible transitions to the log.","name":"printCurrentStateInfo","returnType":"","sourceLocation":{"file":"modules/statemachine/statemachinemodule_lua.inl","line":108}},{"arguments":[{"defaultValue":"","name":"filename","type":"String"},{"defaultValue":"","name":"directory","type":"String?"}],"help":"Saves the current state machine to a .dot file as a directed graph. The resulting graph can be rendered using external tools such as Graphviz. The first parameter is the name of the file, and the second is an optional directory. If no directory is given, the file is saved to the temp folder.","name":"saveToDotFile","returnType":"","sourceLocation":{"file":"modules/statemachine/statemachinemodule_lua.inl","line":134}},{"arguments":[{"defaultValue":"","name":"startState","type":"String"}],"help":"Immediately sets the current state to the state with the given name, if it exists. This is done without doing a transition and completely ignores the previous state.","name":"setInitialState","returnType":"","sourceLocation":{"file":"modules/statemachine/statemachinemodule_lua.inl","line":68}}],"library":"statemachine","name":"statemachine"},{"fullName":"openspace.sync","functions":[{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"version","type":"Integer"}],"help":"Synchronizes the http resource identified by the name passed as the first parameter and the version provided as the second parameter. The application will hang while the data is being downloaded.","name":"syncResource","returnType":"Boolean","sourceLocation":{"file":"modules/sync/syncmodule_lua.inl","line":32}},{"arguments":[{"defaultValue":"","name":"identifier","type":"String"},{"defaultValue":"","name":"version","type":"Integer?"}],"help":"Unsynchronizes the http resources identified by the name passed as the first parameter by removing all data that was downloaded as part of the original synchronization. If the second parameter is provided, is it the version of the resources that is unsynchronized, if the parameter is not provided, all versions for the specified http resource are removed.","name":"unsyncResource","returnType":"","sourceLocation":{"file":"modules/sync/syncmodule_lua.inl","line":60}}],"library":"sync","name":"sync"},{"fullName":"openspace.systemCapabilities","functions":[{"arguments":[],"help":"Returns the cache line size.","name":"cacheLineSize","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":92}},{"arguments":[],"help":"Returns the cache size.","name":"cacheSize","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":104}},{"arguments":[],"help":"Returns the number of cores.","name":"cores","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":86}},{"arguments":[],"help":"Returns all supported exteions as comma-separated string.","name":"extensions","returnType":"String","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":110}},{"arguments":[],"help":"Returns the operating system as a string. The exact format of the returned string is implementation and operating system-dependent but it should contain the manufacturer and the version.","name":"fullOperatingSystem","returnType":"String","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":72}},{"arguments":[],"help":"Returns the amount of available, installed main memory (RAM) on the system in MB.","name":"installedMainMemory","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":80}},{"arguments":[],"help":"Returns the L2 associativity.","name":"L2Associativity","returnType":"Integer","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":98}},{"arguments":[],"help":"This function returns a string identifying the currently running operating system. For Windows, the string is 'windows', for MacOS, it is 'osx', and for Linux it is 'linux'. For any other operating system, this function returns 'other'.","name":"os","returnType":"String","sourceLocation":{"file":"src/scripting/systemcapabilitiesbinding_lua.inl","line":32}}],"library":"systemCapabilities","name":"systemCapabilities"},{"fullName":"openspace.time","functions":[{"arguments":[{"defaultValue":"","name":"base","type":"String | Number"},{"defaultValue":"","name":"change","type":"String | Number"}],"help":"Modifies the passed time (first argument) by the delta time (second argument). The first argument can either be an ISO 8601 date string or the number of seconds past the J2000 epoch. The second argument can either be a string of the form [-]XX(s,m,h,d,M,y] with (s)econds, (m)inutes, (h)ours, (d)ays, (M)onths, and (y)ears as units and an optional - sign to move backwards in time. If the second argument is a number, it is interpreted as a number of seconds. The return value is of the same type as the first argument.","name":"advancedTime","returnType":"String | Number","sourceLocation":{"file":"src/util/time_lua.inl","line":321}},{"arguments":[{"defaultValue":"","name":"time","type":"String | Number"}],"help":"Converts the given time to either a J2000 seconds number or a ISO 8601 timestamp, depending on the type of the given time.\n\nIf the given time is a timestamp: the function returns a double precision value representing the ephemeris version of that time; that is the number of TDB seconds past the J2000 epoch.\n\nIf the given time is a J2000 seconds value: the function returns a ISO 8601 timestamp.","name":"convertTime","returnType":"String | Number","sourceLocation":{"file":"src/util/time_lua.inl","line":362}},{"arguments":[],"help":"Returns the current application time as the number of seconds since the OpenSpace application started.","name":"currentApplicationTime","returnType":"Number","sourceLocation":{"file":"src/util/time_lua.inl","line":308}},{"arguments":[],"help":"Returns the current time as the number of seconds since the J2000 epoch.","name":"currentTime","returnType":"Number","sourceLocation":{"file":"src/util/time_lua.inl","line":276}},{"arguments":[],"help":"Returns the current wall time as an ISO 8601 date string (YYYY-MM-DDTHH-MN-SS) in the UTC timezone.","name":"currentWallTime","returnType":"String","sourceLocation":{"file":"src/util/time_lua.inl","line":300}},{"arguments":[],"help":"Returns the amount of simulated time that passes in one second of real time.","name":"deltaTime","returnType":"Number","sourceLocation":{"file":"src/util/time_lua.inl","line":110}},{"arguments":[{"defaultValue":"","name":"deltaTime","type":"Number"},{"defaultValue":"","name":"interpolationDuration","type":"Number?"}],"help":"Sets the amount of simulation time that happens in one second of real time. If a second input value is given, the interpolation is done over the specified number of seconds.","name":"interpolateDeltaTime","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":95}},{"arguments":[{"defaultValue":"","name":"interpolationDuration","type":"Number?"}],"help":"Interpolate the simulation speed to the first delta time step in the list that is larger than the current simulation speed, if any. If an input value is given, the interpolation is done over the specified number of seconds.","name":"interpolateNextDeltaTimeStep","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":64}},{"arguments":[{"defaultValue":"","name":"isPaused","type":"Boolean"},{"defaultValue":"","name":"interpolationDuration","type":"Number?"}],"help":"Same behaviour as setPause, but with interpolation. If no interpolation duration is provided, the interpolation time will be based on the `defaultPauseInterpolationDuration` and `defaultUnpauseInterpolationDuration` properties of the TimeManager.","name":"interpolatePause","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":180}},{"arguments":[{"defaultValue":"","name":"interpolationDuration","type":"Number?"}],"help":"Interpolate the simulation speed to the first delta time step in the list that is smaller than the current simulation speed, if any. If an input value is given, the interpolation is done over the specified number of seconds.","name":"interpolatePreviousDeltaTimeStep","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":80}},{"arguments":[{"defaultValue":"","name":"time","type":"String | Number"},{"defaultValue":"","name":"interpolationDutation","type":"Number?"}],"help":"Sets the current simulation time to the specified value. If the first parameter is a number, the target is the number of seconds past the J2000 epoch. If it is a string, it has to be a valid ISO 8601-like date string of the format YYYY-MM-DDTHH:MN:SS (Note: providing time zone using the Z format is not supported. UTC is assumed). If a second input value is given, the interpolation is done over the specified number of seconds.","name":"interpolateTime","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":228}},{"arguments":[{"defaultValue":"","name":"delta","type":"Number"},{"defaultValue":"","name":"interpolationDuration","type":"Number?"}],"help":"Increments the current simulation time by the specified number of seconds. If a second input value is given, the interpolation is done over the specified number of seconds.","name":"interpolateTimeRelative","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":254}},{"arguments":[{"defaultValue":"","name":"interpolationDuration","type":"Number?"}],"help":"Toggles the pause function, i.e. temporarily setting the delta time to 0 and restoring it afterwards. If an input value is given, the interpolation is done over the specified number of seconds.","name":"interpolateTogglePause","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":128}},{"arguments":[],"help":"Returns whether the simulation time is currently paused or is progressing.","name":"isPaused","returnType":"Boolean","sourceLocation":{"file":"src/util/time_lua.inl","line":197}},{"arguments":[],"help":"This allows for a keypress (via keybinding) to have dual functionality. In normal operational mode it will behave just like time_interpolateTogglePause, but during playback of a session recording it will pause the playback without manipulating the delta time.","name":"pauseToggleViaKeyboard","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":148}},{"arguments":[{"defaultValue":"","name":"deltaTime","type":"Number"}],"help":"Sets the amount of simulation time that happens in one second of real time.","name":"setDeltaTime","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":30}},{"arguments":[{"defaultValue":"","name":"deltaTime","type":"Number[]"}],"help":"Sets the list of discrete delta time steps for the simulation speed that can be quickly jumped between. The list will be sorted to be in increasing order. A negative verison of each specified time step will be added per default as well.","name":"setDeltaTimeSteps","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":39}},{"arguments":[],"help":"Immediately set the simulation speed to the first delta time step in the list that is larger than the current choice of simulation speed, if any.","name":"setNextDeltaTimeStep","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":47}},{"arguments":[{"defaultValue":"","name":"isPaused","type":"Boolean"}],"help":"Toggles a pause function i.e. setting the delta time to 0 and restoring it afterwards.","name":"setPause","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":170}},{"arguments":[],"help":"Immediately set the simulation speed to the first delta time step in the list that is smaller than the current choice of simulation speed if any.","name":"setPreviousDeltaTimeStep","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":55}},{"arguments":[{"defaultValue":"","name":"time","type":"Number | String"}],"help":"Sets the current simulation time to the specified value. If the parameter is a number, the value is the number of seconds past the J2000 epoch. If it is a string, it has to be a valid ISO 8601-like date string of the format YYYY-MM-DDTHH:MN:SS. Note: providing time zone using the Z format is not supported. UTC is assumed.","name":"setTime","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":207}},{"arguments":[],"help":"Returns the current time as an date string of the form (YYYY MON DDTHR:MN:SC.### ::RND) as returned by SPICE.","name":"SPICE","returnType":"String","sourceLocation":{"file":"src/util/time_lua.inl","line":292}},{"arguments":[],"help":"Toggles the pause function, i.e. temporarily setting the delta time to 0 and restoring it afterwards.","name":"togglePause","returnType":"","sourceLocation":{"file":"src/util/time_lua.inl","line":118}},{"arguments":[],"help":"Returns the current time as an ISO 8601 date string (YYYY-MM-DDTHH:MN:SS).","name":"UTC","returnType":"String","sourceLocation":{"file":"src/util/time_lua.inl","line":283}}],"library":"time","name":"time"}],"name":"Scripting API"}