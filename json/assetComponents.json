[{"classes":[{"identifier":"DashboardItem","members":[],"name":"DashboardItem"},{"description":"This DashboardItem shows the angle between two scenegraph nodes relative to a reference node. The angle is calculated in the plane that is defined by the 'SourceNodeName', 'DestinationNodeName', and the 'ReferenceNodeName'.","identifier":"base_dashboarditem_angle","members":[{"description":"Value of type 'String'","documentation":"If a scene graph node is selected as type, this value specifies the name of the node that is to be used as the destination for computing the angle","name":"DestinationNodeName","optional":1,"type":"String"},{"description":"In list { Node, Focus, Camera }","documentation":"The type of position that is used as the destination to calculate the angle. The computed angle is the incident angle to Source in the triangle (Source, Reference, Destination). The default value for this is 'Focus'","name":"DestinationType","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"This value is the name of the font that is used. It can either refer to an internal name registered previously, or it can refer to a path that is used","name":"FontName","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value determines the size of the font that is used to render the distance","name":"FontSize","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"If a scene graph node is selected as type, this value specifies the name of the node that is to be used as the reference direction to compute the angle","name":"ReferenceNodeName","optional":1,"type":"String"},{"description":"In list { Node, Focus, Camera }","documentation":"The type of position that is used as the destination of the reference line used to calculate the angle. The computed angle is the incident angle to Source in the triangle (Source, Reference, Destination)","name":"ReferenceType","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"If a scene graph node is selected as type, this value specifies the name of the node that is to be used as the apex of the triangle used to calculate the angle. The computed angle is the incident angle to Source in the triangle (Source, Reference, Destination)","name":"SourceNodeName","optional":1,"type":"String"},{"description":"In list { Node, Focus, Camera }","documentation":"The type of position that is used as the triangle apex used to calculate the angle. The default value is 'Camera'","name":"SourceType","optional":1,"type":"String"}],"name":"DashboardItemAngle"},{"description":"","identifier":"base_dashboarditem_date","members":[{"description":"Value of type 'String'","documentation":"The format text describing how this dashboard item renders its text. This text must contain exactly one {} which is a placeholder that will contain the date","name":"FormatString","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The format string used for formatting the date/time before being passed to the string in FormatString. See https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/timout_c.html for full information about how to structure this format","name":"TimeFormat","optional":1,"type":"String"}],"name":"DashboardItemDate"},{"description":"","identifier":"base_dashboarditem_distance","members":[{"description":"Value of type 'String'","documentation":"If a scene graph node is selected as type, this value specifies the name of the node that is to be used as the destination for computing the distance","name":"DestinationNodeName","optional":1,"type":"String"},{"description":"In list { Node, Node Surface, Focus, Camera }","documentation":"The type of position that is used as the destination to calculate the distance. The default value for this is 'Focus'","name":"DestinationType","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"This value is the name of the font that is used. It can either refer to an internal name registered previously, or it can refer to a path that is used","name":"FontName","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value determines the size of the font that is used to render the distance","name":"FontSize","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The format string that is used for formatting the distance string.  This format receives four parameters:  The name of the source, the name of the destination the value of the distance and the unit of the distance","name":"FormatString","optional":1,"type":"String"},{"description":"In list { nanometer, micrometer, millimeter, centimeter, decimeter, meter, km, AU, lighthour, lightday, lightmonth, lightyear, parsec, kiloparsec, megaparsec, gigaparsec, gigalightyear, thou, inch, foot, yard, chain, furlong, mile, league }","documentation":"If the simplification is disabled, this distance unit is used as a destination to convert the meters into","name":"RequestedUnit","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If this value is enabled, the distance is displayed in nuanced units, such as km, AU, light years, parsecs, etc. If this value is disabled, the unit can be explicitly requested","name":"Simplification","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"If a scene graph node is selected as type, this value specifies the name of the node that is to be used as the source for computing the distance","name":"SourceNodeName","optional":1,"type":"String"},{"description":"In list { Node, Node Surface, Focus, Camera }","documentation":"The type of position that is used as the source to calculate the distance. The default value is 'Camera'","name":"SourceType","optional":1,"type":"String"}],"name":"DashboardItemDistance"},{"identifier":"DashboardItemElapsedTime","members":[],"name":"DashboardItemElapsedTime"},{"description":"","identifier":"base_dashboarditem_framerate","members":[{"description":"Value of type 'String'","documentation":"This value is the name of the font that is used. It can either refer to an internal name registered previously, or it can refer to a path that is used","name":"FontName","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value determines the size of the font that is used to render the distance","name":"FontSize","optional":1,"type":"Double"},{"description":"In list { Average Deltatime, Deltatime extremes, Deltatime standard deviation, Deltatime coefficient of variation, Frames per second, Average frames per second }","documentation":"This value determines the units in which the frame time is displayed","name":"FrametimeType","optional":1,"type":"String"}],"name":"DashboardItemFramerate"},{"identifier":"DashboardItemGlobeLocation","members":[],"name":"DashboardItemGlobeLocation"},{"identifier":"DashboardItemInputState","members":[],"name":"DashboardItemInputState"},{"identifier":"DashboardItemInstruments","members":[],"name":"DashboardItemInstruments"},{"description":"","identifier":"base_dashboarditem_mission","members":[{"description":"Value of type 'String'","documentation":"This value is the name of the font that is used. It can either refer to an internal name registered previously, or it can refer to a path that is used","name":"FontName","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value determines the size of the font that is used to render the distance","name":"FontSize","optional":1,"type":"Double"}],"name":"DashboardItemMission"},{"description":"","identifier":"base_dashboarditem_parallelconnection","members":[{"description":"Value of type 'String'","documentation":"This value is the name of the font that is used. It can either refer to an internal name registered previously, or it can refer to a path that is used","name":"FontName","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value determines the size of the font that is used to render the distance","name":"FontSize","optional":1,"type":"Double"}],"name":"DashboardItemParallelConnection"},{"description":"","identifier":"base_dashboarditem_propertyvalue","members":[{"description":"Value of type 'String'","documentation":"The String that is being displayed. It must either be empty (in which case only the value itself will be displayed), or it must contain extact one or more instances of {}, which will be replaced with the value(s) of the property during rendering. For scalar types, there has to be exactly one instance of {}, for vector types, there need to be as many {} as there are compoents in the vector, for example two {} for vec2 types, three for vec3 types, etc","name":"DisplayString","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"This value is the name of the font that is used. It can either refer to an internal name registered previously, or it can refer to a path that is used","name":"FontName","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value determines the size of the font that is used to render the distance","name":"FontSize","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The URI of the property that is displayed in this dashboarditem","name":"URI","optional":1,"type":"String"}],"name":"DashboardItemPropertyValue"},{"description":"","identifier":"base_dashboarditem_simulationincrement","members":[{"description":"Value of type 'String'","documentation":"This value is the name of the font that is used. It can either refer to an internal name registered previously, or it can refer to a path that is used","name":"FontName","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value determines the size of the font that is used to render the distance","name":"FontSize","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The format string used to format the text if the target delta time is the same as the current delta time. This format gets three parameters in this order:  The target delta value, the target delta unit, and the string 'Paused' if the delta time is paused or the empty string otherwise","name":"RegularFormat","optional":1,"type":"String"},{"description":"In list { nanosecond, microsecond, millisecond, second, minute, hour, day, month, year }","documentation":"If the simplification is disabled, this time unit is used as a destination to convert the seconds into","name":"RequestedUnit","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If this value is enabled, the time is displayed in nuanced units, such as minutes, hours, days, years, etc. If this value is disabled, it is always displayed in seconds","name":"Simplification","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"Format string used to format the text used while in a delta time transition, that is if the current delta time is being interpolated to reach a target delta time. This format gets five parameters in this order:  The target delta time value, the target delta time unit, the string 'Paused' if the delta time is paused or the empty string otherwise, the current delta time value, and the current delta time unit","name":"TransitionFormat","optional":1,"type":"String"}],"name":"DashboardItemSimulationIncrement"},{"description":"","identifier":"base_dashboarditem_spacing","members":[{"description":"Value of type 'Double'","documentation":"This value determines the spacing (in pixels) that this item represents. The default value is 15","name":"Spacing","optional":1,"type":"Double"}],"name":"DashboardItemSpacing"},{"description":"","identifier":"base_dashboarditem_text","members":[{"description":"Value of type 'String'","documentation":"This value is the name of the font that is used. It can either refer to an internal name registered previously, or it can refer to a path that is used","name":"FontName","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value determines the size of the font that is used to render the distance","name":"FontSize","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The text to be displayed","name":"Text","optional":1,"type":"String"}],"name":"DashboardItemText"},{"description":"","identifier":"base_dashboarditem_velocity","members":[{"description":"Value of type 'String'","documentation":"This value is the name of the font that is used. It can either refer to an internal name registered previously, or it can refer to a path that is used","name":"FontName","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value determines the size of the font that is used to render the distance","name":"FontSize","optional":1,"type":"Double"},{"description":"In list { nanometer, micrometer, millimeter, centimeter, decimeter, meter, km, AU, lighthour, lightday, lightmonth, lightyear, parsec, kiloparsec, megaparsec, gigaparsec, gigalightyear, thou, inch, foot, yard, chain, furlong, mile, league }","documentation":"If the simplification is disabled, this distance unit is used for the velocity display","name":"RequestedUnit","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If this value is enabled, the velocity is displayed in nuanced units, such as m/s, AU/s, light years / s etc. If this value is disabled, the unit can be explicitly requested","name":"Simplification","optional":1,"type":"Boolean"}],"name":"DashboardItemVelocity"}],"identifier":"categoryDashboardItem","name":"DashboardItem"},{"classes":[{"identifier":"Decoder","members":[],"name":"Decoder"},{"identifier":"Instrument","members":[],"name":"Instrument"},{"identifier":"Target","members":[],"name":"Target"}],"identifier":"categoryDecoder","name":"Decoder"},{"classes":[{"description":"","identifier":"base_camera_light_source","members":[{"description":"Value of type 'Double'","documentation":"The intensity of this light source","name":"Intensity","optional":1,"type":"Double"}],"name":"CameraLightSource"},{"description":"","identifier":"core_light_source","members":[{"description":"Value of type 'Boolean'","documentation":"Whether the light source is enabled or not","name":"Enabled","optional":1,"type":"Boolean"},{"description":"An identifier string. May not contain '.', spaces, newlines, or tabs","documentation":"The identifier of the light source","name":"Identifier","optional":0,"type":"Identifier"},{"description":"Must name a valid LightSource type","documentation":"The type of the light source that is described in this element. The available types of light sources depend on the configuration of the application and can be written to disk on application startup into the FactoryDocumentation","name":"Type","optional":0,"type":"String"}],"name":"LightSource"},{"description":"","identifier":"base_scene_graph_light_source","members":[{"description":"Value of type 'Double'","documentation":"The intensity of this light source","name":"Intensity","optional":1,"type":"Double"},{"description":"An identifier string. May not contain '.', spaces, newlines, or tabs","documentation":"The identifier of the scene graph node to follow","name":"Node","optional":0,"type":"Identifier"}],"name":"SceneGraphLightSource"}],"identifier":"categoryLightSource","name":"LightSource"},{"classes":[{"description":"","identifier":"colormappingcomponent","members":[{"description":"Value of type 'Color4'","documentation":"The color to use for items with values larger than the one in the provided data range, if enabled. This color can also be read from the color map, but setting this value overrides any value in the color map. If a color value for the above range values is provided, the UseAboveRangeColor property will automatically be set to true","name":"AboveRangeColor","optional":1,"type":"Color4"},{"description":"Value of type 'Color4'","documentation":"The color to use for items with values smaller than the one in the provided data range, if enabled. This color can also be read from the color map, but setting this value overrides any value in the color map. If a color value for the below range values is provided, the UseBelowRangeColor property will automatically be set to true","name":"BelowRangeColor","optional":1,"type":"Color4"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', the provided color map is used (if one was provided in the configuration). If no color map was provided, changing this setting does not do anything","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'File'","documentation":"The path to the color map file to use for coloring the points","name":"File","optional":1,"type":"File"},{"description":"Value of type 'Boolean'","documentation":"If true, points with values outside the provided range for the coloring will be hidden, i.e. not rendered at all","name":"HideValuesOutsideRange","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If true, the colors of the color map will be read in the inverse order","name":"Invert","optional":1,"type":"Boolean"},{"description":"Value of type 'Color4'","documentation":"The color to use for items with values corresponding to missing data values, if enabled. This color can also be read from the color map, but setting this value overrides any value in the color map. If a color value for the below range values is provided, the ShowMissingData property will automatically be set to true","name":"NoDataColor","optional":1,"type":"Color4"},{"description":"Value of type 'String'","documentation":"This value determines which paramenter is used for coloring the points based on the color map. The property is set based on predefined options specified in the asset file. When changing the parameter, the value range to used for themapping will also be changed. Per default, it is set to the last parameter in the list of options","name":"Parameter","optional":1,"type":"String"},{"documentation":"A list of options for color parameters to use for color mapping, that will appear as options in the drop-down menu in the user interface. Per default, the first option in the list is selected. Each option is a table in the form { Key = \"theKey\", Range = {min, max} }, where the value range is optional. If added, this range will automatically be set when the option is selected","members":[{"documentation":"","members":[{"description":"Value of type 'String'","documentation":"The key for the data variable to use for color","name":"Key","optional":0,"type":"String"},{"description":"Value of type 'Vector2<double>'","documentation":"An optional value range to use for coloring when this option is selected. If not included, the range will be set from the min and max value in the dataset","name":"Range","optional":1,"type":"Vector2<double>"}],"name":"*","optional":1,"type":"Table"}],"name":"ParameterOptions","optional":1,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If true, use a separate color (see NoDataColor) for items with values corresponding to missing data values","name":"ShowMissingData","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If true, use a separate color (see AboveRangeColor) for items with values larger than the one in the provided data range. Otherwise, the values will be clamped to use the color at the upper limit of the color map. If a color is provided in the color map, this value will automatically be set to true","name":"UseAboveRangeColor","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If true, use a separate color (see BelowRangeColor) for items with values smaller than the one in the provided data range. Otherwise, the values will be clamped to use the color at the lower limit of the color map. If a color is provided in the color map, this value will automatically be set to true","name":"UseBelowRangeColor","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector2<double>'","documentation":"This value changes the range of values to be mapped with the current color map","name":"ValueRange","optional":1,"type":"Vector2<double>"}],"name":"ColorMappingComponent"},{"description":"","identifier":"core_configuration","members":[{"description":"Value of type 'String'","documentation":"The scene description that is used to populate the application after startup. The scene determines which objects are loaded, the startup time and other scene-specific settings. More information is provided in the Scene documentation. If the 'Asset' and the 'Profile' values are specified, the asset is silently ignored","name":"Asset","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', the launcher will not be shown and OpenSpace will start with the provided configuration options directly. Useful in multiprojector setups where a launcher window would be undesired","name":"BypassLauncher","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Determines whether the OpenGL state is checked after each OpenGL function call. This will dramatically slow down the rendering, but will make finding OpenGL errors easier. This defaults to 'false'","name":"CheckOpenGLState","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"/ Determines which key opens the in-game console. The value passed in must be a / valid key (see keys.h for a list)","name":"ConsoleKey","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true' the ingame console is disabled, locking the system down against random access","name":"DisableInGameConsole","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Toggles whether the master in a multi-application setup should be rendering or just managing the state of the network. This is desired in cases where the master computer does not have the resources to render a scene","name":"DisableRenderingOnMaster","optional":1,"type":"Boolean"},{"documentation":"Right now only contains the path where the documentation is written to","members":[{"description":"Value of type 'String'","documentation":"The path where the documentation files will be stored","name":"Path","optional":1,"type":"String"}],"name":"Documentation","optional":1,"type":"Table"},{"documentation":"A list of all fonts that will automatically be loaded on startup. Each key-value pair contained in the table will become the name and the file for a font","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":0,"type":"String"}],"name":"Fonts","optional":1,"type":"Table"},{"documentation":"Information about the hardcoded fontsizes used by the rendering engine itself","members":[{"description":"Value of type 'Double'","documentation":"The font size (in pt) used for printing the camera friction state","name":"CameraInfo","optional":0,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The font size (in pt) used for printing optional information about the currently rendered frame","name":"FrameInfo","optional":0,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The font size (in pt) used for rendering the screen log","name":"Log","optional":0,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The font size (in pt) used for rendering the shutdown text","name":"Shutdown","optional":0,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The font size (in pt) used for printing the version information","name":"VersionInfo","optional":0,"type":"Double"}],"name":"FontSize","optional":0,"type":"Table"},{"documentation":"This value names a list of scripts that get executed after initialization of any scene. These scripts can be used for user-specific customization, such as a global rebinding of keys from the default","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"GlobalCustomizationScripts","optional":1,"type":"Table"},{"description":"Value of type 'Vector3<double>'","documentation":"Applies a global view rotation. Use this to rotate the position of the focus node away from the default location on the screen. This setting persists even when a new focus node is selected. Defined using roll, pitch, yaw in radians","name":"GlobalRotation","optional":1,"type":"Vector3<double>"},{"documentation":"This defines the use for a proxy when fetching data over http. No proxy will be used if this is left out","members":[{"description":"Value of type 'Boolean'","documentation":"Determines whether the proxy is being used","name":"Activate","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"The address of the http proxy","name":"Address","optional":0,"type":"String"},{"description":"In list { basic, ntlm, digest, any }","documentation":"The authentication method of the http proxy","name":"Authentication","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The password of the http proxy","name":"Password","optional":1,"type":"String"},{"description":"In range: ( 0,65536 )","documentation":"The port of the http proxy","name":"Port","optional":0,"type":"Integer"},{"description":"Value of type 'String'","documentation":"The user of the http proxy","name":"User","optional":1,"type":"String"}],"name":"HttpProxy","optional":1,"type":"Table"},{"description":"In list { All, NewYork, Sweden, Utah, None }","documentation":"Set which layer server should be preferd to be used, the options are \"All\", \"NewYork\", \"Sweden\", \"Utah\" and \"None\".","name":"LayerServer","optional":1,"type":"String"},{"documentation":"Values in this table describe the behavior of the loading screen that is displayed while the scene graph is created and initialized","members":[{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', the loading screen will display a list of warning and error messages","name":"ShowLogMessages","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', the loading screen will display a message information about the current phase the loading is in","name":"ShowMessage","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', the loading screen will display a list of all of the nodes with their respective status (created, loaded, initialized)","name":"ShowNodeNames","optional":1,"type":"Boolean"}],"name":"LoadingScreen","optional":1,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"Determines whether each OpenGL call that happens should be logged using the 'TRACE' loglevel. This will bring the rendering to a crawl but provides useful debugging features for the order in which OpenGL calls occur. This defaults to 'false'","name":"LogEachOpenGLCall","optional":1,"type":"Boolean"},{"documentation":"Configurations for the logging of messages that are generated throughout the code and are useful for debugging potential errors or other information","members":[{"description":"In list { None, Minimal, Default, Full }","documentation":"At startup, a list of system capabilities is created and logged. This value determines how verbose this listing should be","name":"CapabilitiesVerbosity","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Determines whether error messages will be displayed immediately or if it is acceptable to have a short delay, but being more performant. If the delay is allowed ('true'), messages might get lost if the application crashes shortly after a message was logged","name":"ImmediateFlush","optional":1,"type":"Boolean"},{"description":"In list { Trace, Debug, Info, Warning, Error, Fatal, None }","documentation":"The severity of log messages that will be displayed. Only messages of the selected level or higher will be displayed. All levels below will be silently discarded. The order of severities is: Debug < Info < Warning < Error < Fatal < None.","name":"LogLevel","optional":1,"type":"String"},{"documentation":"Per default, log messages are written to the console, the onscreen text, and (if available) the Visual Studio output window. This table can define other logging methods that will be used additionally","members":[{"documentation":"","name":"*","optional":1,"reference":{"found":true,"identifier":"core_logfactory","name":"LogFactory"},"type":"Table"}],"name":"Logs","optional":1,"type":"Table"}],"name":"Logging","optional":1,"type":"Table"},{"description":"Value of type 'Vector3<double>'","documentation":"Applies a view rotation for only the master node, defined using roll, pitch yaw in radians. This can be used to compensate the master view direction for tilted display systems in clustered immersive environments","name":"MasterRotation","optional":1,"type":"Vector3<double>"},{"documentation":"Configurations for each module","members":[{"documentation":"","members":[],"name":"*","optional":0,"type":"Table"}],"name":"ModuleConfigurations","optional":1,"type":"Table"},{"description":"In list { window, framebuffer }","documentation":"The method for scaling the onscreen text in the window. As the resolution of the rendering can be different from the size of the window, the onscreen text can either be scaled according to the window size ('window'), or the rendering resolution ('framebuffer'). This value defaults to 'window'","name":"OnScreenTextScaling","optional":1,"type":"String"},{"documentation":"Determines the settings for the creation of an OpenGL debug context","members":[{"description":"Value of type 'Boolean'","documentation":"Determines whether the OpenGL context should be a debug context","name":"Activate","optional":0,"type":"Boolean"},{"documentation":"A list of OpenGL debug messages identifiers that are filtered","members":[{"documentation":"Individual OpenGL debug message identifiers","members":[{"description":"Value of type 'Integer'","documentation":"The identifier that is to be filtered","name":"Identifier","optional":0,"type":"Integer"},{"description":"In list { API, Window System, Shader Compiler, Third Party, Application, Other, Don't care }","documentation":"The source of the identifier to be filtered","name":"Source","optional":0,"type":"String"},{"description":"In list { Error, Deprecated, Undefined, Portability, Performance, Marker, Push group, Pop group, Other, Don't care }","documentation":"The type of the identifier to be filtered","name":"Type","optional":0,"type":"String"}],"name":"*","optional":1,"type":"Table"}],"name":"FilterIdentifier","optional":1,"type":"Table"},{"documentation":"Determines the settings for the creation of an OpenGL debug context","members":[{"description":"In list { High, Medium, Low, Notification }","documentation":"","name":"*","optional":1,"type":"String"}],"name":"FilterSeverity","optional":1,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If this is set to 'true', everytime an OpenGL error is logged, the full stacktrace leading to the error is printed as well, making debugging under production situations much easier","name":"PrintStacktrace","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Determines whether the OpenGL debug callbacks are performed synchronously. If set to 'true' the callbacks are in the same thread as the context and in the scope of the OpenGL function that triggered the message. The default value is 'true'","name":"Synchronous","optional":1,"type":"Boolean"}],"name":"OpenGLDebugContext","optional":1,"type":"Table"},{"documentation":"A list of paths that are automatically registered with the file system. If a key X is used in the table, it is then useable by referencing ${X} in all other configuration files or scripts","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":0,"type":"String"}],"name":"Paths","optional":0,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If this is set to 'true', the name of the profile will be appended to the cache directory, thus not reusing the same directory. This is useful in cases where the same instance of OpenSpace is run with multiple profiles, but the caches should be retained. This value defaults to 'false'","name":"PerProfileCache","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Determines whether events are printed as debug messages to the console each frame. If this value is set it determines the default value of the property of the OpenSpaceEngine with the same name","name":"PrintEvents","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"The profile that should be loaded at the startup. The profile determines which assets are loaded, the startup time, keyboard shortcuts, and other settings.","name":"Profile","optional":1,"type":"String"},{"description":"In list { NoviceUser, User, AdvancedUser, Developer }","documentation":"Determines the property visibility level that is selected when starting up OpenSpace. If it is not provided, it defaults to 'User'","name":"PropertyVisibility","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Toggles whether screenshots generated by OpenSpace contain the date when the concrete OpenSpace instance was started. This value is enabled by default, but it is advised to disable this value if rendering sessions of individual frames pass beyond local midnight","name":"ScreenshotUseDate","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector3<double>'","documentation":"Applies a global rotation for all screenspace renderables. Defined using roll, pitch, yaw in radians","name":"ScreenSpaceRotation","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'String'","documentation":"The file that will be created on startup containing the log of all Lua scripts that are executed in the last session. Any existing file (including the results from previous runs) will be silently overwritten","name":"ScriptLog","optional":1,"type":"String"},{"description":"Value of type 'Integer'","documentation":"If this value is specified, this many number of script log files are being retained before overwriting any","name":"ScriptLogRotation","optional":1,"type":"Integer"},{"description":"Value of type 'String'","documentation":"The SGCT configuration file that determines the window and view frustum settings that are being used when OpenSpace is started","name":"SGCTConfig","optional":1,"type":"String"},{"description":"Greater than: 0","documentation":"The countdown that the application will wait between pressing ESC and actually shutting down. If ESC is pressed again in this time, the shutdown is aborted","name":"ShutdownCountdown","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"This value determines whether the initialization of the scene graph should occur multithreaded, that is, whether multiple scene graph nodes should initialize in parallel. The only use for this value is to disable it for debugging support","name":"UseMultithreadedInitialization","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"The URL that is pinged to check which version of OpenSpace is the most current if you don't want this request to happen, this value should not be set at all","name":"VersionCheckUrl","optional":1,"type":"String"}],"name":"Configuration"},{"description":"This is a data mapping structure that can be used when creating point cloud datasets, e.g. from a CSV or Speck file.\n\nIt allows specifying things like column names, whether the reading of those column names should be case sensitive, data value that represents missing values in the dataset, and more. See details for each field / class member.\n\nNote that things related to reading the point position will not be handled for SPECK files, as for those we always expect the first three values per row to specify the XYZ position","identifier":"dataloader_datamapping","members":[{"description":"Value of type 'Boolean'","documentation":"Specifies whether to do case sensitive checks when reading column names. Default is not to, so that 'X' and 'x' are both valid column names for the x position column, for example","name":"CaseSensitive","optional":1,"type":"Boolean"},{"documentation":"A list of column names, of columns that will not be loaded into the dataset. Note that not all data formats support this. E.g. SPECK files do not","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"ExcludeColumns","optional":1,"type":"Table"},{"description":"Value of type 'Double'","documentation":"Specifies a value that, when read from the file, should be interpreted as 'no value', i.e. a missing data value. Note that the same value is used across all data columns","name":"MissingDataValue","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"Specifies the column name for the optional name column. Not valid for SPECK files, where the name is given by the comment at the end of each line","name":"Name","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"Specifies a column name for a column that has the data for which texture to use for each point (given as an integer index). If included, a texture map file need to be included as well","name":"TextureColumn","optional":1,"type":"String"},{"description":"Value of type 'File'","documentation":"A file where each line contains an integer index and an image file name. Not valid for SPECK files, which includes this information as part of its data format. This map will be used to map the data in the TextureColumn to an image file to use for rendering the points. Note that only the files with indices that are used in the dataset will actually be loaded","name":"TextureMapFile","optional":1,"type":"File"},{"description":"Value of type 'String'","documentation":"Specifies the column name for the x coordinate","name":"X","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"Specifies the column name for the y coordinate","name":"Y","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"Specifies the column name for the z coordinate","name":"Z","optional":1,"type":"String"}],"name":"DataMapping"},{"description":"","identifier":"globebrowsing_geojsoncomponent","members":[{"description":"Value of type 'Vector2<double>'","documentation":"A latitude and longitude offset value, in decimal degrees. Can be used to move the object on the surface and correct potential mismatches with other renderings. Note that changing it during runtime leads to all positions being recomputed","name":"CoordinateOffset","optional":1,"type":"Vector2<double>"},{"documentation":"These properties will be used as default values for the geoJson rendering, meaning that they will be used when there is no value given for the individual geoJson features","name":"DefaultProperties","optional":1,"reference":{"found":true,"identifier":"globebrowsing_geojsonproperties","name":"GeoJsonProperties"},"type":"Table"},{"description":"Value of type 'String'","documentation":"A human-readable description of the layer to be used in informational texts presented to the user","name":"Description","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If true, draw the wire frame of the polygons. Used for testing and to investigate tessellation results","name":"DrawWireframe","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"This setting determines whether this object will be visible or not","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'File'","documentation":"Path to the GeoJSON file to base the rendering on","name":"File","optional":0,"type":"File"},{"description":"Value of type 'Double'","documentation":"A height offset value, in meters. Useful for moving a feature closer to or farther away from the surface","name":"HeightOffset","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The unique identifier for this layer. May not contain '.' or spaces","name":"Identifier","optional":0,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If true, ignore any height values that are given in the file. Coordinates with three values will then be treated as coordinates with only two values","name":"IgnoreHeights","optional":1,"type":"Boolean"},{"documentation":"A list of light sources that this object should accept light from","members":[{"documentation":"","name":"*","optional":1,"reference":{"found":true,"identifier":"core_light_source","name":"LightSource"},"type":"Table"}],"name":"LightSources","optional":1,"type":"Table"},{"description":"Value of type 'Double'","documentation":"An extra scale value that can be used to increase or decrease the width of any rendered lines in the component, even if a value is set from the GeoJson file. Note that there is a max limit for how wide lines can be.","name":"LineWidthScale","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"A human-readable name for the user interface. If this is omitted, the identifier is used instead","name":"Name","optional":1,"type":"String"},{"description":"In range: ( 0,1 )","documentation":"The opacity of the component","name":"Opacity","optional":1,"type":"Double"},{"description":"In list { Camera Direction, Camera Position, Globe Normal, Globe Surface }","documentation":"Decides how the billboards for the points should be rendered in terms of up direction and whether the plane should face the camera. See details on the different options in the wiki","name":"PointRenderMode","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"An extra scale value that can be used to increase or decrease the scale of any rendered points in the component, even if a value is set from the GeoJson file","name":"PointSizeScale","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If true, the polygon mesh will not be automatically updated based on the heightmap, even if the 'RelativeToGround' altitude option is set and the heightmap updates. The data can still be force updated","name":"PreventHeightUpdate","optional":1,"type":"Boolean"}],"name":"GeoJsonComponent"},{"description":"","identifier":"globebrowsing_geojsonmanager","members":[],"name":"GeoJsonManager"},{"description":"","identifier":"globebrowsing_geojsonproperties","members":[{"description":"In list { Absolute, RelativeToGround }","documentation":"The altitude mode decides how any height values of the geo coordinates should be interpreted. Absolute means that the height is interpreted as the height above the reference ellipsoid, while RelativeToGround takes the height map into account. For coordinates with only two values (latitude and longitude), the height is considered to be equal to zero","name":"AltitudeMode","optional":1,"type":"String"},{"description":"Value of type 'Color3'","documentation":"The color of the rendered geometry. For points it will be used as a multiplycolor for any provided texture","name":"Color","optional":1,"type":"Color3"},{"description":"Value of type 'Boolean'","documentation":"If true, extrude the geometry to intersect the globe.Lines/polygons will beextruded with polygons,and points with lines ","name":"Extrude","optional":1,"type":"Boolean"},{"description":"Value of type 'Color3'","documentation":"The color of the filled portion of a rendered polygon. Will also be used for extruded features","name":"FillColor","optional":1,"type":"Color3"},{"description":"In range: ( 0,1 )","documentation":"This value determines the opacity of the filled portion of a polygon. Will also be used for extruded features","name":"FillOpacity","optional":1,"type":"Double"},{"description":"Greater than: 0","documentation":"The width of any rendered lines","name":"LineWidth","optional":1,"type":"Double"},{"description":"In range: ( 0,1 )","documentation":"This value determines the opacity of this object. A value of 0 means completely transparent","name":"Opacity","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If true, perform shading on any create meshes, either from polygons or extruded lines. The shading will be computed based on any light sources of the GeoJson component","name":"PerformShading","optional":1,"type":"Boolean"},{"description":"Greater than: 0","documentation":"The size of any rendered points. The size will be scaled based on the bounding sphere of the globe","name":"PointSize","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"A texture to be used for rendering points. No value means to use the default texture provided by the GlobeBrowsing module. If no texture is provided there either, the point will be rendered as a plane and colored by the color value.","name":"PointTexture","optional":1,"type":"String"},{"description":"In list { Bottom, Center }","documentation":"Decides the placement of the point texture in relation to the position. Default is a the bottom of the texture, but it can also be put at the center","name":"PointTextureAnchor","optional":1,"type":"String"},{"documentation":"","members":[{"description":"Value of type 'Boolean'","documentation":"If false, no tessellation to bend the geometry based on the curvature of the planet is performed. This leads to increased performance, but tessellation is neccessary for large geometry that spans a big portion of the globe. Otherwise it may intersect the surface","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"Defult distance to use for tessellation of line and polygon geometry. Anything larger than this distance will be automatically subdivided into smaller pieces matching this distance, while anything smaller will not be subdivided. Per default this will be set to a distance corresponding to about 1 degree longitude on the globe","name":"TessellationDistance","optional":1,"type":"Double"},{"description":"Value of type 'Integer'","documentation":"When manual tessellation is enabled, this value will be used to determine how much tessellation to apply. The resulting distance used for subdividing the geometry will be the 'Tessellation Distance' divided by this value. Zero means to use the 'Tessellation Distance' as is.","name":"TessellationLevel","optional":1,"type":"Integer"},{"description":"Value of type 'Boolean'","documentation":"If true, use the 'Tessellation Level' to control the level of detail for the tessellation. The distance used will be the 'Tessellation Distance' divided by the 'Tessellation Level', so the higher the level value, the smaller each segment in the geomoetry will be","name":"UseTessellationLevel","optional":1,"type":"Boolean"}],"name":"Tessellation","optional":1,"type":"Table"}],"name":"GeoJsonProperties"},{"description":"","identifier":"globebrowsing_globelabelscomponent","members":[{"description":"In list { Horizontally, Circularly }","documentation":"Labels are aligned horizontally or circularly related to the planet","name":"AlignmentOption","optional":1,"type":"String"},{"description":"Value of type 'Color3'","documentation":"The text color of the labels","name":"Color","optional":1,"type":"Color3"},{"description":"Value of type 'Boolean'","documentation":"Labels culling disabled","name":"DisableCulling","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"Labels culling distance from globe's center","name":"DistanceEPS","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"Enables and disables labels' rendering","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector2<double>'","documentation":"The distances above the globe's surface at which the labels start fading in or out, given in meters. The final distances are also adjusted by the specified height offset","name":"FadeDistances","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Boolean'","documentation":"Sets whether the labels fade in when approaching the globe from a distance. If false, no fading happens and the labels immediately has full opacity","name":"FadeInEnabled","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Sets whether the labels fade out when approaching the surface of the globe. If false, no fading happens and the labels stays in full opacity","name":"FadeOutEnabled","optional":1,"type":"Boolean"},{"description":"Value of type 'File'","documentation":"The path to the labels file","name":"FileName","optional":1,"type":"File"},{"description":"Value of type 'Double'","documentation":"Font size for the rendering labels. This is different fromt text size","name":"FontSize","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value moves the label away from the globe surface by the specified distance (in meters)","name":"HeightOffset","optional":1,"type":"Double"},{"description":"Value of type 'Vector2<int>'","documentation":"Minimum and maximum label size, in pixels","name":"MinMaxSize","optional":1,"type":"Vector2<int>"},{"description":"In range: ( 0,1 )","documentation":"This value determines the opacity of the labels","name":"Opacity","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value affects the size scale of the labels","name":"Size","optional":1,"type":"Double"}],"name":"GlobeLabelsComponent"},{"description":"","identifier":"labelscomponent","members":[{"description":"Value of type 'Color3'","documentation":"The color of the labels","name":"Color","optional":1,"type":"Color3"},{"description":"Value of type 'Boolean'","documentation":"This setting determines whether the labels will be visible or not. They are disabled per default","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If enabled, the labels will be rotated to face the camera. For non-linear display rendering (for example fisheye) this should be set to false.","name":"FaceCamera","optional":1,"type":"Boolean"},{"description":"Value of type 'File'","documentation":"The speck label file with the data for the labels","name":"File","optional":1,"type":"File"},{"description":"Value of type 'Double'","documentation":"Font size for the labels. This is different from the text size","name":"FontSize","optional":1,"type":"Double"},{"description":"Value of type 'Vector2<int>'","documentation":"The minimum and maximum size (in pixels) of the labels","name":"MinMaxSize","optional":1,"type":"Vector2<int>"},{"description":"In range: ( 0,1 )","documentation":"The opacity of the labels","name":"Opacity","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The size of the labels in pixels","name":"Size","optional":1,"type":"Double"},{"description":"Value of type 'Matrix4x4<double>'","documentation":"Transformation matrix to be applied to the labels","name":"TransformationMatrix","optional":1,"type":"Matrix4x4<double>"},{"description":"In list { m, Km, pc, Kpc, Mpc, Gpc, Gly }","documentation":"","name":"Unit","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If true (default), the loaded labels file will be cached so that it can be loaded faster at a later time. Note that this also means that changes in the file will not be registered until the cached file is deleted. Set to false to disable chaching and always do a fresh load of the label file","name":"UseCaching","optional":1,"type":"Boolean"}],"name":"LabelsComponent"},{"description":"","identifier":"globebrowsing_layer","members":[{"documentation":"Parameters that set individual adjustment parameters for this layer","members":[{"description":"Value of type 'Vector3<double>'","documentation":"Specifies the chroma key used when selecting 'ChromaKey' for the 'Type'","name":"ChromaKeyColor","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Double'","documentation":"Specifies the tolerance to match the color to the chroma key when the 'ChromaKey' type is selected for the 'Type'","name":"ChromaKeyTolerance","optional":1,"type":"Double"},{"description":"In list { None, ChromaKey, TransferFunction }","documentation":"Specifies the type of the adjustment that is applied","name":"Type","optional":1,"type":"String"}],"name":"Adjustment","optional":1,"type":"Table"},{"description":"In list { Normal, Multiply, Add, Subtract, Color }","documentation":"Sets the blend mode of this layer to determine how it interacts with other layers on top of this","name":"BlendMode","optional":1,"type":"String"},{"description":"Value of type 'Color3'","documentation":"If the 'Type' of this layer is a solid color, this value determines what this solid color is","name":"Color","optional":1,"type":"Color3"},{"description":"Value of type 'String'","documentation":"A human-readable description of the layer to be used in informational texts presented to the user","name":"Description","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Determine whether the layer is enabled or not. If this value is not specified, the layer is disabled","name":"Enabled","optional":1,"type":"Boolean"},{"documentation":"If the primary layer creation fails, this layer is used as a fallback","name":"Fallback","optional":1,"reference":{"found":true,"identifier":"globebrowsing_layer","name":"Layer"},"type":"Table"},{"description":"An identifier string. May not contain '.', spaces, newlines, or tabs","documentation":"The unique identifier for this layer.","name":"Identifier","optional":0,"type":"Identifier"},{"description":"Value of type 'String'","documentation":"A human-readable name for the user interface. If this is omitted, the identifier is used instead","name":"Name","optional":1,"type":"String"},{"description":"In range: ( 0,1 )","documentation":"The opacity value of the layer","name":"Opacity","optional":1,"type":"Double"},{"documentation":"Specifies the render settings that should be applied to this layer","members":[{"description":"Value of type 'Double'","documentation":"The gamma value that is applied to each pixel of the layer","name":"Gamma","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The multiplicative factor that is applied to each pixel of the layer","name":"Multiplier","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"An additive offset that is applied to each pixel of the layer","name":"Offset","optional":1,"type":"Double"}],"name":"Settings","optional":1,"type":"Table"},{"description":"In list { DefaultTileProvider, SingleImageProvider, ImageSequenceTileProvider, SizeReferenceTileProvider, TemporalTileProvider, TileIndexTileProvider, TileProviderByIndex, TileProviderByLevel, SolidColor, SpoutImageProvider, VideoTileProvider }","documentation":"Specifies the type of layer that is to be added. If this value is not specified, the layer is a DefaultTileProvider","name":"Type","optional":1,"type":"String"}],"name":"Layer"},{"description":"","identifier":"globebrowsing_layeradjustment","members":[{"description":"Value of type 'Color3'","documentation":"Specifies the chroma key used when selecting 'ChromaKey' for the 'Type'","name":"ChromaKeyColor","optional":1,"type":"Color3"},{"description":"Value of type 'Double'","documentation":"Specifies the tolerance to match the color to the chroma key when the 'ChromaKey' type is selected for the 'Type'","name":"ChromaKeyTolerance","optional":1,"type":"Double"},{"description":"In list { None, ChromaKey, TransferFunction }","documentation":"Specifies the type of the adjustment that is applied","name":"Type","optional":1,"type":"String"}],"name":"LayerAdjustment"},{"description":"","identifier":"globebrowsing_layermanager","members":[{"documentation":"Specifies an individual layer","name":"*","optional":1,"reference":{"found":true,"identifier":"globebrowsing_layer","name":"Layer"},"type":"Table"}],"name":"LayerManager"},{"description":"","identifier":"core_logfactory","members":[{"description":"Value of type 'Boolean'","documentation":"Determines whether the file will be cleared at startup or if the contents will be appended to previous runs","name":"Append","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Determines whether the log entries should be stamped with the category that creates the log message","name":"CategoryStamping","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Determines whether the log entries should be stamped with the date at which the message was logged","name":"DateStamping","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"The filename to which the log will be written","name":"File","optional":0,"type":"String"},{"description":"In list { AllLogging, Trace, Debug, Info, Warning, Error, Fatal, NoLogging }","documentation":"The log level for this specific text-based log","name":"LogLevel","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Determines whether the log entries should be stamped with the log level that was used to create the log message","name":"LogLevelStamping","optional":1,"type":"Boolean"},{"description":"Greater than: 0","documentation":"The number of files that should be kept around for this Log","name":"LogRotation","optional":1,"type":"Integer"},{"description":"Value of type 'Boolean'","documentation":"Determines whether the log entires should be stamped with the time at which the message was logged","name":"TimeStamping","optional":1,"type":"Boolean"},{"description":"In list { html, Text }","documentation":"The type of the new log to be generated","name":"Type","optional":0,"type":"String"}],"name":"LogFactory"},{"description":"","identifier":"core_mission_mission","members":[{"documentation":"Actions associated with this phase","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"Actions","optional":1,"type":"Table"},{"description":"Value of type 'String'","documentation":"A description of this mission or mission phase","name":"Description","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"An image that can be presented to the user during this phase of a mission","name":"Image","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"","name":"Link","optional":1,"type":"String"},{"documentation":"","members":[{"documentation":"Important dates","members":[{"documentation":"","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"Actions","optional":1,"type":"Table"},{"description":"Value of type 'String'","documentation":"An image that can be presented to the user during this phase of a mission","name":"Date","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"","name":"Description","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"","name":"Image","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"","name":"Link","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"","name":"Name","optional":0,"type":"String"}],"name":"*","optional":1,"type":"Table"}],"name":"Milestones","optional":1,"type":"Table"},{"description":"Value of type 'String'","documentation":"The human readable name of this mission or mission phase that is displayed to the user","name":"Name","optional":0,"type":"String"},{"documentation":"The phases into which this mission or mission phase is separated","members":[{"documentation":"","name":"*","optional":1,"reference":{"found":true,"identifier":"core_mission_mission","name":"MissionPhase"},"type":"Table"}],"name":"Phases","optional":1,"type":"Table"},{"documentation":"The time range for which this mission or mission phase is valid. If no time range is specified, the ranges of sub mission phases are used instead","members":[{"description":"A string representing a valid date","documentation":"","name":"End","optional":1,"type":"String"},{"description":"A string representing a valid date","documentation":"","name":"Start","optional":0,"type":"String"}],"name":"TimeRange","optional":1,"type":"Table"}],"name":"MissionPhase"},{"description":"A NavigationState is an object describing an exact camera position and rotation, in a certain reference frame (per default, the one of the specified Anchor node). It can be used to set the same camera position at a later point in time, or navigating to a specific camera position using the pathnavigation system.\n\nThe camera rotation is specified using Euler angles, in radians. It is also possible to specify a node to be used as Aim, but note that this will not affect the actual camera position or view direction.\n\nTo get the current navigation state of the camera, use the `openspace.navigation.getNavigationState()` function in the Scripting API.\n\nNote that when loading a NavigationState, the visuals may be different depending on what the simulation timestamp is, as the relative positions of objects in the scene may have changed. The get the exact same visuals as when the NavigationState was saved you need to also set the simulation time to correpsond to the timestamp.","identifier":"core_navigation_state","members":[{"description":"Value of type 'String'","documentation":"The identifier of the aim node, if used","name":"Aim","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The identifier of the anchor node","name":"Anchor","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"The pitch angle in radians. Positive angle means pitching camera upwards","name":"Pitch","optional":1,"type":"Double"},{"description":"Value of type 'Vector3<double>'","documentation":"The position of the camera relative to the anchor node, expressed in meters in the specified reference frame","name":"Position","optional":0,"type":"Vector3<double>"},{"description":"Value of type 'String'","documentation":"The identifier of the scene graph node to use as reference frame. If not specified, this will be the same as the anchor","name":"ReferenceFrame","optional":1,"type":"String"},{"description":"Value of type 'Double', or Value of type 'String'","documentation":"The timestamp for when the navigation state was captured or is valid. Specified either as seconds past the J2000 epoch, or as a date string in ISO 8601 format: 'YYYY MM DD HH:mm:ss.xxx'","name":"Timestamp","optional":1,"type":"Double, or String"},{"description":"Value of type 'Vector3<double>'","documentation":"The up vector expressed in the coordinate system of the reference frame","name":"Up","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Double'","documentation":"The yaw angle in radians. Positive angle means yawing camera to the right","name":"Yaw","optional":1,"type":"Double"}],"name":"NavigationState"},{"description":"A PathInstruction is a table describing the specification for a camera path. It is used as an input to the `openspace.pathnavigation.createPath` function.\n\nThere are two types of paths that can be created, as specified by the required TargetType parameter: 'Node' or 'NavigationState'. The difference is what kind of target the path is created for, a scene graph node or a specific navigation state for the camera.\n\nDepending on the type, the parameters that can be specified are a bit different. A 'NavigationState' already contains all details for the camera position, so no other details may be specified. For a 'Node' instruction, only a 'Target' node is required, but a 'Height' or 'Position' may also be specified. If both a position and height is specified, the height value will be ignored.\n\nFor 'Node' paths it is also possible to specify whether the target camera state at the end of the flight should take the up direction of the target node into account. Note that for this to give an effect on the path, rolling motions have to be enabled.","identifier":"core_path_instruction","members":[{"description":"Value of type 'Double'","documentation":"The desired duration traversing the specified path segment should take","name":"Duration","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"(Node): An optional height in relation to the target node, in meters","name":"Height","optional":1,"type":"Double"},{"documentation":"(NavigationState): A navigation state that will be the target of the resulting path","name":"NavigationState","optional":1,"reference":{"found":true,"identifier":"core_navigation_state","name":"NavigationState"},"type":"Table"},{"description":"In list { AvoidCollision, ZoomOutOverview, Linear, AvoidCollisionWithLookAt }","documentation":"The type of the created path. Affects the shape of the resulting path","name":"PathType","optional":1,"type":"String"},{"description":"Value of type 'Vector3<double>'","documentation":"(Node): An optional position in relation to the target node, in model coordinates (meters)","name":"Position","optional":1,"type":"Vector3<double>"},{"documentation":"A navigation state that determines the start state for the camera path","name":"StartState","optional":1,"reference":{"found":true,"identifier":"core_navigation_state","name":"NavigationState"},"type":"Table"},{"description":"Value of type 'String'","documentation":"(Node): The target node of the camera path. Not optional for 'Node' type instructions","name":"Target","optional":1,"type":"String"},{"description":"In list { Node, NavigationState }","documentation":"","name":"TargetType","optional":0,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"(Node): If true, the up direction of the node is taken into account when computing the wayopoint for this instruction","name":"UseTargetUpDirection","optional":1,"type":"Boolean"}],"name":"PathInstruction"},{"description":"","identifier":"spacecraftinstruments_projectioncomponent","members":[{"description":"In list { NONE, LT, LT+S, CN, CN+S, XLT, XLT+S, XCN, XCN+S }","documentation":"The aberration correction that is supposed to be used for the projection. The values for the correction correspond to the SPICE definition as described in ftp://naif.jpl.nasa.gov/pub/naif/toolkit_docs/IDL/cspice/spkezr_c.html","name":"Aberration","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"Sets the desired aspect ratio of the projected texture. This might be necessary as planets usually have 2x1 aspect ratios, whereas this does not hold for non-planet objects (comets, asteroids, etc). The default value is '1.0'","name":"AspectRatio","optional":1,"type":"Double"},{"documentation":"","members":[],"name":"DataInputTranslation","optional":1,"type":"Table"},{"description":"Value of type 'File'","documentation":"","name":"EventFile","optional":1,"type":"File"},{"documentation":"","members":[{"description":"Value of type 'Double'","documentation":"The aspect ratio of the instrument in relation between x and y axis","name":"Aspect","optional":0,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The field of view in degrees along the y axis","name":"Fovy","optional":0,"type":"Double"},{"description":"A SPICE name of an instrument","documentation":"The instrument that is used to perform the projections","name":"Name","optional":0,"type":"String"}],"name":"Instrument","optional":0,"type":"Table"},{"description":"A SPICE name of the observing object","documentation":"The observer that is doing the projection. This has to be a valid SPICE name or SPICE integer","name":"Observer","optional":0,"type":"String"},{"documentation":"The list of potential targets that are involved with the image projection","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"PotentialTargets","optional":1,"type":"Table"},{"description":"Value of type 'Directory', or Value of type 'Table'","documentation":"This value specifies one or more directories from which images are being used for image projections. If the sequence type is set to 'playbook', this value is ignored","name":"Sequence","optional":1,"type":"Directory, or Table"},{"description":"In list { image-sequence, playbook, hybrid, instrument-times, image-and-instrument-times }","documentation":"This value determines which type of sequencer is used for generating image schedules. The 'playbook' is using a custom format designed by the New Horizons team, the 'image-sequence' uses lbl files from a directory, and the 'hybrid' uses both methods","name":"SequenceType","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Determines whether the object requires a self-shadowing algorithm. This is necessary if the object is concave and might cast a shadow on itself during presentation. The default value is 'false'","name":"ShadowMap","optional":1,"type":"Boolean"},{"description":"A SPICE name of the observed object","documentation":"The observed object that is projected on. This has to be a valid SPICE name or SPICE integer","name":"Target","optional":0,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Determines whether the object requires a self-shadowing algorithm. This is necessary if the object is concave and might cast a shadow on itself during presentation. The default value is 'false'","name":"TextureMap","optional":1,"type":"Boolean"},{"documentation":"","members":[],"name":"TimesDataInputTranslation","optional":1,"type":"Table"},{"description":"Value of type 'String'","documentation":"","name":"TimesSequence","optional":1,"type":"String"}],"name":"ProjectionComponent"},{"description":"","identifier":"globebrowsing_rings_component","members":[{"description":"Value of type 'Double'","documentation":"This value affects the filtering out of part of the rings depending on the color values of the texture. The higher value, the more rings are filtered out","name":"ColorFilter","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"Enable/Disable Rings","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"This value is a multiplicative factor that is applied to the side of the rings that is facing away from the Sun. If this value is equal to '1', no darkening of the night side occurs","name":"NightFactor","optional":1,"type":"Double"},{"description":"Value of type 'Integer'","documentation":"The number of samples used during shadow mapping calculation (Percentage Closer Filtering)","name":"NumberShadowSamples","optional":1,"type":"Integer"},{"description":"Value of type 'Vector2<double>'","documentation":"This value is used to limit the width of the rings. Each of the two values is a value between 0 and 1, where 0 is the center of the ring and 1 is the maximum extent at the radius. For example, if the value is {0.5, 1.0}, the ring is only shown between radius/2 and radius. It defaults to {0.0, 1.0}","name":"Offset","optional":1,"type":"Vector2<double>"},{"description":"In range: ( 0,1 )","documentation":"This value determines the overall opacity of the rings","name":"Opacity","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value specifies the radius of the rings in meter","name":"Size","optional":1,"type":"Double"},{"description":"Value of type 'File'","documentation":"This value is the path to a texture on disk that contains a one-dimensional texture which is used for these rings","name":"Texture","optional":1,"type":"File"},{"description":"Value of type 'File'","documentation":"This value is the path to a texture on disk that contains a one-dimensional texture which is used for backward scattering light in these rings","name":"TextureBckwrd","optional":1,"type":"File"},{"description":"Value of type 'File'","documentation":"This value is the path to a texture on disk that contains a one-dimensional texture color which is used for unlit part in these rings","name":"TextureColor","optional":1,"type":"File"},{"description":"Value of type 'File'","documentation":"This value is the path to a texture on disk that contains a one-dimensional texture which is used for forward scattering light in these rings","name":"TextureFwrd","optional":1,"type":"File"},{"description":"Value of type 'File'","documentation":"This value is the path to a texture on disk that contains a one-dimensional texture transparency which is used for unlit part in these rings","name":"TextureTransparency","optional":1,"type":"File"},{"description":"Value of type 'File'","documentation":"This value is the path to a texture on disk that contains a one-dimensional texture which is used for unlit part in these rings","name":"TextureUnlit","optional":1,"type":"File"},{"description":"Value of type 'Double'","documentation":"The percentage of the correct distance to the surface being shadowed. Possible values: [0.0, 1.0]","name":"ZFightingPercentage","optional":1,"type":"Double"}],"name":"RingsComponent"},{"description":"","identifier":"core_scene_node","members":[{"description":"Greater or equal to: 0","documentation":"This value is a multiplication factor for the interaction sphere that determines when the camera is 'approaching' the scene graph node. If this value is not specified, a default value of 5 is used instead. This value must be larger than the reachFactor or unexpected things might happen","name":"ApproachFactor","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The bounding sphere of the scene graph node meaning that everything that this scene graph node renders must be contained within this sphere. This value is only used as an override to the bounding sphere calculated by the Renderable, if present. If this value is -1, the Renderable's computed bounding sphere is used","name":"BoundingSphere","optional":1,"type":"Double"},{"documentation":"Additional information that is passed to GUI applications. These are all hints and do not have any impact on the actual function of the scene graph node","members":[{"description":"Value of type 'String'","documentation":"A user-facing description about this scene graph node","name":"Description","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If this value is specified, GUI applications are incouraged to ignore this scene graph node. This is most useful to trim collective lists of nodes and not display, for example, barycenters","name":"Hidden","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"An optional user-facing name for this SceneGraphNode, which does not have to be unique, though it is recommended, and can contain any characters","name":"Name","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"If this value is specified, this '/' separated URI specifies the location of this scene graph node in a GUI representation, for instance '/SolarSystem/Earth/Moon'","name":"Path","optional":1,"type":"String"}],"name":"GUI","optional":1,"type":"Table"},{"description":"An identifier string. May not contain '.', spaces, newlines, or tabs","documentation":"The identifier of this scene graph node. This name must be unique among all scene graph nodes that are loaded in a specific scene. If a duplicate is detected the loading of the node will fail, as will all childing that depend on the node.","name":"Identifier","optional":0,"type":"Identifier"},{"description":"Value of type 'Double'","documentation":"The minimum radius that the camera is allowed to get close to this scene graph node. This value is only used as an override to the bounding sphere calculated by the Renderable, if present. If this value is -1, the Renderable's computed interaction sphere is used","name":"InteractionSphere","optional":1,"type":"Double"},{"description":"Value of type 'String', or Value of type 'Table'","documentation":"One or multiple actions that are executed whenever the camera is focused on this scene graph node and if it enters the interaction sphere of the node","name":"OnApproach","optional":1,"type":"String, or Table"},{"description":"Value of type 'String', or Value of type 'Table'","documentation":"One or multiple actions that are executed whenever the camera is focused on this scene graph node and if it exits the interaction sphere of the node","name":"OnExit","optional":1,"type":"String, or Table"},{"description":"Value of type 'String', or Value of type 'Table'","documentation":"One or multiple actions that are executed whenever the camera is focused on this scene graph node and if it transitions from the approach distance to the reach distance of the node","name":"OnReach","optional":1,"type":"String, or Table"},{"description":"Value of type 'String', or Value of type 'Table'","documentation":"One or multiple actions that are executed whenever the camera is focused on this scene graph node and if it transitions from the reach distance to the approach distance of the node","name":"OnRecede","optional":1,"type":"String, or Table"},{"description":"An identifier string. May not contain '.', spaces, newlines, or tabs","documentation":"This names the parent of the currently specified scene graph node. The parent must already exist in the scene graph. If not specified, the node will be attached to the root of the scene graph","name":"Parent","optional":1,"type":"Identifier"},{"description":"Greater or equal to: 0","documentation":"This value is a multiplication factor for the interaction sphere that determines when the camera has 'reached' the scene graph node. If this value is not specified, a default value of 1.25 is used instead. This value must be smaller than the approachFactor or unexpected things might happen","name":"ReachFactor","optional":1,"type":"Double"},{"documentation":"The renderable that is to be created for this scene graph node. A renderable is a component of a scene graph node that will lead to some visual result on the screen. The specifics heavily depend on the 'Type' of the renderable. If no Renderable is specified, this scene graph node is an internal node and can be used for either group children, or apply common transformations to a group of children","name":"Renderable","optional":1,"reference":{"found":true,"identifier":"renderable","name":"Renderable"},"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"Only relevant when using touch interaction. If true, the 'direct manipulation' scheme will be used when interacting with this scene graph node, meaning that the positions on the interaction sphere that intersects with the touch points will directly follow the motion of the touch points. Works best for objects that have an interaction sphere of about the same size as the bounding sphere, and that are somewhat spherical. Note that using this feature might significalty reduce the performance.","name":"SupportsDirectInteraction","optional":1,"type":"Boolean"},{"description":"Value of type 'String', or Value of type 'Table'","documentation":"A tag or list of tags that can be used to reference to a group of scene graph nodes.","name":"Tag","optional":1,"type":"String, or Table"},{"documentation":"Specifies the time frame for when this node should be active","name":"TimeFrame","optional":1,"reference":{"found":true,"identifier":"core_time_frame","name":"TimeFrame"},"type":"Table"},{"documentation":"This describes a set of transformations that are applied to this scene graph node and all of its children. There are only three possible values corresponding to a 'Translation', a 'Rotation', and a 'Scale'","members":[{"documentation":"This nodes describes a rotation that is applied to the scene graph node and all its children. Depending on the 'Type' of the rotation, this can either be a static rotation or a time-varying one","name":"Rotation","optional":1,"reference":{"found":true,"identifier":"core_transform_rotation","name":"Rotation"},"type":"Table"},{"documentation":"This node describes a scaling that is applied to the scene graph node and all its children. Depending on the 'Type' of the scaling, this can either be a static scaling or a time-varying one","name":"Scale","optional":1,"reference":{"found":true,"identifier":"core_transform_scaling","name":"Scale"},"type":"Table"},{"documentation":"This node describes a translation that is applied to the scene graph node and all its children. Depending on the 'Type' of the translation, this can either be a static translation or a time-varying one","name":"Translation","optional":1,"reference":{"found":true,"identifier":"core_transform_translation","name":"Translation"},"type":"Table"}],"name":"Transform","optional":1,"type":"Table"}],"name":"SceneGraphNode"},{"description":"","identifier":"globebrowsing_shadows_component","members":[{"description":"Greater than: {1280,720}","documentation":"The depth map size in pixels. You must entry the width and height values","name":"DepthMapSize","optional":1,"type":"Vector2<int>"},{"description":"Value of type 'Integer'","documentation":"Distance fraction of original distance from light source to the globe to be considered as the new light source distance","name":"DistanceFraction","optional":1,"type":"Integer"}],"name":"ShadowComponent"},{"description":"","identifier":"base_sizemappingcomponent","members":[{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true' and at least one column was loaded as an option for size mapping, the chosen data column will be used to scale the size of the points. The first option in the list is selected per default.","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"This value determines which parameter is used for scaling of the point. The parameter value will be used as a multiplicative factor to scale the size of the points. Note that they may however still be scaled by max size adjustment effects.","name":"Parameter","optional":1,"type":"String"},{"documentation":"A list specifying all parameters that may be used for size mapping, i.e. scaling the points based on the provided data columns","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"ParameterOptions","optional":1,"type":"Table"},{"description":"Value of type 'Double'","documentation":"This value is a multiplicative factor that is applied to the data values that are used to scale the points, when size mapping is applied.","name":"ScaleFactor","optional":1,"type":"Double"}],"name":"SizeMappingComponent"},{"description":"","identifier":"statemachine_state","members":[{"description":"Value of type 'String'","documentation":"A string containing a Lua script that will be executed when the state is entered, i.e on a transition from another state","name":"Enter","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"A string containing a Lua script that will be executed when the state is exited, i.e on a transition to another state","name":"Exit","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"A string that will be used to identify the state. Cannot be the same as any other state in the machine","name":"Identifier","optional":0,"type":"String"}],"name":"State"},{"description":"","identifier":"statemachine_statemachine","members":[{"description":"Value of type 'String'","documentation":"The initial state of the state machine. Defaults to the first in the list","name":"StartState","optional":1,"type":"String"},{"documentation":"A list of states","members":[{"documentation":"","name":"*","optional":1,"reference":{"found":true,"identifier":"statemachine_state","name":"State"},"type":"Table"}],"name":"States","optional":0,"type":"Table"},{"documentation":"A list of transitions between the different states","members":[{"documentation":"","name":"*","optional":1,"reference":{"found":true,"identifier":"statemachine_transition","name":"Transition"},"type":"Table"}],"name":"Transitions","optional":0,"type":"Table"}],"name":"StateMachine"},{"description":"","identifier":"core_util_timerange","members":[{"description":"A string representing a valid date","documentation":"The end date of the time range","name":"End","optional":0,"type":"String"},{"description":"A string representing a valid date","documentation":"The start date of the time range","name":"Start","optional":0,"type":"String"}],"name":"TimeRange"},{"description":"","identifier":"statemachine_transition","members":[{"description":"Value of type 'String'","documentation":"A string containing a Lua script that will be executed when the transition is triggered","name":"Action","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The identifier of the state that can trigger the transition","name":"From","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The identifier of the state that the state machine will move to after the transition","name":"To","optional":0,"type":"String"}],"name":"Transition"}],"identifier":"other","name":"Other"},{"classes":[{"description":"","identifier":"renderable","members":[{"description":"Value of type 'Boolean'","documentation":"Enables/Disables if the object should be dimmed when the camera is in the sunny part of an atmosphere","name":"DimInAtmosphere","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"This setting determines whether this object will be visible or not","name":"Enabled","optional":1,"type":"Boolean"},{"description":"In range: ( 0,1 )","documentation":"This value determines the opacity of this renderable. A value of 0 means completely transparent","name":"Opacity","optional":1,"type":"Double"},{"description":"In list { Background, Opaque, PreDeferredTransparent, PostDeferredTransparent, Overlay }","documentation":"This value specifies if the renderable should be rendered in the Background,Opaque, Pre/PostDeferredTransparency, or Overlay rendering step","name":"RenderBinMode","optional":1,"type":"String"},{"description":"Value of type 'Table', or Value of type 'String'","documentation":"A single tag or a list of tags that this renderable will respond to when setting properties","name":"Tag","optional":1,"type":"Table, or String"},{"description":"Value of type 'String'","documentation":"This tells the type of the renderable","name":"Type","optional":1,"type":"String"}],"name":"Renderable"},{"description":"","identifier":"atmosphere_renderable_atmosphere","members":[{"description":"Value of type 'Double'","documentation":"Percentage of the atmosphere where other objects, such as the stars, are faded","name":"AtmosphereDimmingHeight","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The thickness of the atmosphere in km","name":"AtmosphereHeight","optional":0,"type":"Double"},{"documentation":"","members":[{"description":"In range: ( 0,1 )","documentation":"","name":"PreCalculatedTextureScale","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"","name":"SaveCalculatedTextures","optional":1,"type":"Boolean"}],"name":"Debug","optional":1,"type":"Table"},{"description":"Value of type 'Double'","documentation":"Multiplier of the ground radiance color during the rendering phase","name":"GroundRadianceEmission","optional":0,"type":"Double"},{"description":"Value of type 'String'","documentation":"This value is the name of a scene graph node that should be used as the source of illumination for the atmosphere. If this value is not specified, the solar system's Sun is used instead","name":"LightSourceNode","optional":1,"type":"String"},{"documentation":"","members":[{"documentation":"","members":[{"description":"Value of type 'Vector3<double>'","documentation":"","name":"Extinction","optional":0,"type":"Vector3<double>"},{"description":"Value of type 'Vector3<double>'","documentation":"","name":"Scattering","optional":0,"type":"Vector3<double>"}],"name":"Coefficients","optional":0,"type":"Table"},{"description":"In range: ( -1,1 )","documentation":"","name":"G","optional":0,"type":"Double"},{"description":"Value of type 'Double'","documentation":"","name":"H_M","optional":0,"type":"Double"}],"name":"Mie","optional":0,"type":"Table"},{"description":"Value of type 'Double'","documentation":"Mie Scattering/Extinction Proportion Coefficient (%)","name":"MieScatteringExtinctionPropCoefficient","optional":1,"type":"Double"},{"documentation":"","members":[{"documentation":"","members":[{"description":"Value of type 'Vector3<double>'","documentation":"","name":"Extinction","optional":1,"type":"Vector3<double>"}],"name":"Coefficients","optional":1,"type":"Table"},{"description":"Value of type 'Double'","documentation":"","name":"H_O","optional":1,"type":"Double"}],"name":"Ozone","optional":1,"type":"Table"},{"description":"Value of type 'Double'","documentation":"","name":"PlanetAverageGroundReflectance","optional":0,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The radius of the planet in meters","name":"PlanetRadius","optional":0,"type":"Double"},{"documentation":"","members":[{"documentation":"","members":[{"description":"Value of type 'Vector3<double>'","documentation":"","name":"Scattering","optional":0,"type":"Vector3<double>"},{"description":"Value of type 'Vector3<double>'","documentation":"","name":"Wavelengths","optional":0,"type":"Vector3<double>"}],"name":"Coefficients","optional":0,"type":"Table"},{"description":"Value of type 'Double'","documentation":"","name":"H_R","optional":0,"type":"Double"}],"name":"Rayleigh","optional":0,"type":"Table"},{"documentation":"Declares shadow groups, meaning which nodes are considered in shadow calculations","members":[{"documentation":"A list of objects that cast light on this atmosphere","members":[{"documentation":"Individual shadow casters","members":[{"description":"Value of type 'String'","documentation":"The scene graph node name of the source","name":"Name","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"The radius of the object in meters","name":"Radius","optional":0,"type":"Double"}],"name":"*","optional":1,"type":"Table"}],"name":"Casters","optional":0,"type":"Table"},{"documentation":"A list of light sources","members":[{"documentation":"Individual light sources","members":[{"description":"Value of type 'String'","documentation":"The scene graph node name of the source","name":"Name","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"The radius of the object in meters","name":"Radius","optional":0,"type":"Double"}],"name":"*","optional":1,"type":"Table"}],"name":"Sources","optional":0,"type":"Table"}],"name":"ShadowGroup","optional":1,"type":"Table"},{"description":"In range: ( 0,180 )","documentation":"Specifies the angular size of the Sun in degrees","name":"SunAngularSize","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"Unitless for now","name":"SunIntensity","optional":1,"type":"Double"},{"description":"Value of type 'Vector2<double>'","documentation":"The angle (degrees) between the Camera and the Sun where the sunset starts, and the atmosphere starts to fade in objects such as the stars","name":"SunsetAngle","optional":1,"type":"Vector2<double>"}],"name":"RenderableAtmosphere"},{"description":"","identifier":"base_renderable_boxgrid","members":[{"description":"Value of type 'Color3'","documentation":"This value determines the color of the grid lines that are rendered","name":"Color","optional":1,"type":"Color3"},{"documentation":"The labels for the grid","name":"Labels","optional":1,"reference":{"found":true,"identifier":"labelscomponent","name":"LabelsComponent"},"type":"Table"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width of the spherical grid","name":"LineWidth","optional":1,"type":"Double"},{"description":"Value of type 'Vector3<double>'","documentation":"This value species the size of each dimensions of the box","name":"Size","optional":1,"type":"Vector3<double>"}],"name":"RenderableBoxGrid"},{"description":"The RenderableCartesianAxes can be used to render the local Cartesian coordinate system, or reference frame, of another scene graph node. The colors of the axes can be customized but are per default set to Red, Green and Blue, for the X-, Y- and Z-axis, respectively.\n\nTo add the axes, create a scene graph node with the RenderableCartesianAxes renderable and add it as a child to the other scene graph node, i.e. specify the other node as the Parent of the node with this renderable. Also, the axes have to be scaled to match the parent object for the axes to be visible in the scene, for example using a StaticScale.","identifier":"base_renderable_cartesianaxes","members":[{"description":"Value of type 'Color3'","documentation":"This value determines the color of the x axis","name":"XColor","optional":1,"type":"Color3"},{"description":"Value of type 'Color3'","documentation":"This value determines the color of the y axis","name":"YColor","optional":1,"type":"Color3"},{"description":"Value of type 'Color3'","documentation":"This value determines the color of the z axis","name":"ZColor","optional":1,"type":"Color3"}],"name":"RenderableCartesianAxes"},{"description":"","identifier":"space_renderable_constellationbounds","members":[{"description":"Value of type 'Color3'","documentation":"Specifies the color of the constellation lines. The lines are always drawn at full opacity","name":"Color","optional":1,"type":"Color3"},{"description":"Value of type 'File'","documentation":"The file pointed to with this value contains the vertex locations of the constellations","name":"File","optional":0,"type":"File"}],"name":"RenderableConstellationBounds"},{"description":"","identifier":"space_renderable_constellationlines","members":[{"documentation":"The defined colors for the constellations to be rendered. There can be several groups of constellaitons that can have distinct colors.","members":[{"description":"Value of type 'Vector3<double>'","documentation":"","name":"*","optional":1,"type":"Vector3<double>"}],"name":"Colors","optional":1,"type":"Table"},{"description":"Value of type 'File'","documentation":"The path to the SPECK file that contains constellation lines data","name":"File","optional":0,"type":"File"},{"description":"In list { m, Km, pc, Kpc, Mpc, Gpc, Gly }","documentation":"The distance unit used for the constellation lines data","name":"Unit","optional":1,"type":"String"}],"name":"RenderableConstellationLines"},{"description":"","identifier":"spacecraftinstruments_renderablecrawlingline","members":[{"documentation":"Specifies the colors that are used for the crawling line. One value determines the starting color of the line, the second value is the color at the end","members":[{"description":"Value of type 'Color4'","documentation":"The color at the end of the line","name":"End","optional":0,"type":"Color4"},{"description":"Value of type 'Color4'","documentation":"The color at the start of the line","name":"Start","optional":0,"type":"Color4"}],"name":"Color","optional":0,"type":"Table"},{"description":"Value of type 'String'","documentation":"Denotes the SPICE name of the instrument that is used to render the crawling line","name":"Instrument","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"Denotes the SPICE name of the source of the renderable crawling line, for example, the spacecraft","name":"Source","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"Denotes the SPICE name of the target of the crawling line","name":"Target","optional":0,"type":"String"}],"name":"RenderableCrawlingLine"},{"description":"","identifier":"debugging_renderable_debugplane","members":[{"description":"Value of type 'Boolean'","documentation":"This value specifies whether the plane is a billboard, which means that it is always facing the camera. If this is false, it can be oriented using other transformations","name":"Billboard","optional":1,"type":"Boolean"},{"description":"In list { LowerLeft, LowerRight, UpperLeft, UpperRight, Center }","documentation":"The origin of the texture coorinate system","name":"Origin","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value specifies the size of the plane in meters","name":"Size","optional":1,"type":"Double"},{"description":"Value of type 'Integer'","documentation":"The OpenGL name of the texture that is displayed on this plane","name":"Texture","optional":1,"type":"Integer"}],"name":"RenderableDebugPlane"},{"description":"","identifier":"base_renderable_disc","members":[{"description":"Value of type 'Double'","documentation":"This value specifies the outer radius of the disc in meter","name":"Size","optional":1,"type":"Double"},{"description":"Value of type 'File'","documentation":"This value is the path to a texture on disk that contains a one-dimensional texture to be used for the color","name":"Texture","optional":0,"type":"File"},{"description":"Value of type 'Double'","documentation":"This value is used to set the width of the disc. The actual width is set based on the given size and this value should be set between 0 and 1. A value of 1 results in a full circle and 0.5 a disc with an inner radius of 0.5*size","name":"Width","optional":1,"type":"Double"}],"name":"RenderableDisc"},{"description":"","identifier":"vislab_renderable_distance_label","members":[{"description":"Value of type 'String'","documentation":"Property to define a custom unit descriptor to use to describe the distance value. Defaults to the units SI descriptor if not specified","name":"CustomUnitDescriptor","optional":1,"type":"String"},{"description":"Value of type 'Integer'","documentation":"Property to define the unit in which the distance should be displayed. Defaults to 'km' if not specified","name":"DistanceUnit","optional":1,"type":"Integer"},{"description":"Value of type 'String'","documentation":"Property to track a nodeline. When tracking the label text will be updating the distance from the nodeline start and end","name":"NodeLine","optional":0,"type":"String"}],"name":"RenderableDistanceLabel"},{"description":"","identifier":"digitaluniverse_renderabledumeshes","members":[{"description":"Value of type 'Boolean'","documentation":"Determines whether labels should be drawn or hidden","name":"DrawLabels","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"The path to the SPECK file that contains information about the astronomical object being rendered","name":"File","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The path to the label file that contains information about the astronomical objects being rendered","name":"LabelFile","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"If the DU mesh is of wire type, this value determines the width of the lines","name":"LineWidth","optional":1,"type":"Double"},{"documentation":"The defined colors for the meshes to be rendered","members":[{"description":"Value of type 'Vector3<double>'","documentation":"","name":"*","optional":1,"type":"Vector3<double>"}],"name":"MeshColor","optional":1,"type":"Table"},{"description":"Value of type 'Color3'","documentation":"The text color for the astronomical object","name":"TextColor","optional":1,"type":"Color3"},{"description":"Value of type 'Vector2<int>'","documentation":"The minimum and maximum size (in pixels) of the text for the labels for the astronomical objects being rendered","name":"TextMinMaxSize","optional":1,"type":"Vector2<int>"},{"description":"Value of type 'Double'","documentation":"Determines the transparency of the text label, where 1 is completely opaque and 0 fully transparent","name":"TextOpacity","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The text size for the astronomical object labels","name":"TextSize","optional":1,"type":"Double"},{"description":"In list { m, Km, pc, Kpc, Mpc, Gpc, Gly }","documentation":"","name":"Unit","optional":1,"type":"String"}],"name":"RenderableDUMeshes"},{"description":"","identifier":"space_renderableeclipsecone","members":[{"description":"Value of type 'String'","documentation":"This value determines the SPICE name of the object that is used as the illuminator for computing the shadow cylinder","name":"LightSource","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"This value is the SPICE name of the body-fixed reference frame for the light source","name":"LightSourceFrame","optional":0,"type":"String"},{"description":"Value of type 'Integer'","documentation":"This value determines the number of control points that is used to construct the shadow geometry. The higher this number, the more detailed the shadow is, but it will have a negative impact on the performance. Also note that rendering errors will occur if this value is even","name":"NumberOfPoints","optional":1,"type":"Integer"},{"description":"Value of type 'Color4'","documentation":"This value determines the color that is used for the shadow cylinder of the penumbral shadow","name":"PenumbralShadowColor","optional":1,"type":"Color4"},{"description":"Value of type 'String'","documentation":"This value is the SPICE name of object that is receiving the shadow from the shadower","name":"Shadowee","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"This value specifies the SPICE name of the object that is casting the shadow on the shadowee","name":"Shadower","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"This value is the SPICE name of the body-fixed reference frame for the shadower","name":"ShadowerFrame","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value determines the length of the shadow that is cast by the target object. The total distance of the shadow is equal to the distance from the target to the Sun multiplied with this value","name":"ShadowLength","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If this is enabled, the penumbral portioon of the shadow is shown","name":"ShowPenumbralShadow","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If this is enabled, the umbral portioon of the shadow is shown","name":"ShowUmbralShadow","optional":1,"type":"Boolean"},{"description":"Value of type 'Color4'","documentation":"This value determines the color that is used for the shadow cylinder of the umbral shadow","name":"UmbralShadowColor","optional":1,"type":"Color4"}],"name":"RenderableEclipseCone"},{"description":"","identifier":"space_renderable_flux_nodes","members":[{"description":"Value of type 'String'","documentation":"Color Table/Transfer Function to use for 'By Flux Value' coloring","name":"ColorTablePath","optional":0,"type":"String"},{"description":"Value of type 'Vector2<double>'","documentation":"Valid range for the color table as the exponent, with base 10, of flux values. [Min, Max]","name":"ColorTableRange","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Integer'","documentation":"Select which energy bin you want to show. GOES = Geostationary Operational Environmental Satellites. Emin01 is values > 10 MeV, Default is Emin03 where values > 100 MeV","name":"EnergyBin","optional":1,"type":"Integer"},{"description":"Value of type 'Directory'","documentation":"path to source folder with the 3 binary files in it","name":"SourceFolder","optional":0,"type":"Directory"}],"name":"RenderableFluxNodes"},{"description":"Needs support for std::map first for the frameConversions","identifier":"spacecraftinstruments_renderablefieldofview","members":[{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', the field of view specified here will always be rendered, regardless of whether image information is currently available or not","name":"AlwaysDrawFov","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"The SPICE name of the source body for which the field of view should be rendered","name":"Body","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The SPICE name of the source body's frame in which the field of view should be rendered","name":"Frame","optional":0,"type":"String"},{"documentation":"A list of frame conversions that should be registered with the SpiceManager","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":0,"type":"String"}],"name":"FrameConversions","optional":1,"type":"Table"},{"documentation":"A table describing the instrument whose field of view should be rendered","members":[{"description":"In list { NONE, LT, LT+S, CN, CN+S, XLT, XLT+S, XCN, XCN+S }","documentation":"The aberration correction that is used for this field of view. The default is 'NONE'","name":"Aberration","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The SPICE name of the instrument that is rendered","name":"Name","optional":0,"type":"String"}],"name":"Instrument","optional":0,"type":"Table"},{"description":"Value of type 'Double'","documentation":"This value determines width of the lines connecting the instrument to the corners of the field of view","name":"LineWidth","optional":1,"type":"Double"},{"documentation":"A list of potential targets (specified as SPICE names) that the field of view should be tested against","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"PotentialTargets","optional":0,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true' the field-of-views bounds values will be simplified on load. Bound vectors will be removed if they are the strict linear interpolation between the two neighboring vectors. This value is disabled on default","name":"SimplifyBounds","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"This value determines the standoff distance factor which influences the distance of the plane to the focus object. If this value is '1', the field of view will be rendered exactly on the surface of, for example, a planet. With a value of smaller than 1, the field of view will hover of ther surface, thus making it more visible","name":"StandOffDistance","optional":1,"type":"Double"}],"name":"RenderableFov"},{"description":"","identifier":"gaiamission_renderablegaiastars","members":[{"description":"Value of type 'Vector2<int>'","documentation":"Determines how many additional nodes around the camera that will be fetched from disk. The first value determines how many additional layers of parents that will be fetched. The second value determines how many layers of descendant that will be fetched from the found parents","name":"AdditionalNodes","optional":1,"type":"Vector2<int>"},{"description":"Value of type 'Double'","documentation":"Set the billboard size of all stars. [Works only with billboards]","name":"BillboardSize","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"Set the distance where stars starts to increase in size. Unit is Parsec [Works only with billboards]","name":"CloseUpBoostDist","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The path to the texture that is used to convert from the magnitude of the star to its color. The texture is used as a one dimensional lookup function","name":"ColorMap","optional":0,"type":"String"},{"documentation":"A list of strings with the names of all the columns that are to be read from the specified FITS file. No need to define if data already has been processed. [Works only with FileReaderOption::Fits]","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"ColumnNames","optional":1,"type":"Table"},{"description":"Value of type 'Double'","documentation":"Set threshold for when to cut off star rendering. Stars closer than this threshold are given full opacity. Farther away, stars dim proportionally to the 4-logarithm of their distance","name":"CutOffThreshold","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The path to the file with data for the stars to be rendered","name":"File","optional":0,"type":"String"},{"description":"In list { Fits, Speck, BinaryRaw, BinaryOctree, StreamOctree }","documentation":"This value tells the renderable what format the input data file has. 'Fits' will read a FITS file, construct an Octree from it and render full data. 'Speck' will read a SPECK file, construct an Octree from it and render full data. 'BinaryRaw' will read a preprocessed binary file with ordered star data, construct an Octree and render it. 'BinaryOctree' will read a constructed Octree from binary file and render full data. 'StreamOctree' will read an index file with full Octree structure and then stream nodes during runtime. (This option is suited for bigger datasets)","name":"FileReaderOption","optional":0,"type":"String"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Bp-Rp color values between [min, max] will be rendered (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterBpRp","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Distances values between [min, max] will be rendered (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). Measured in kParsec","name":"FilterDist","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with G mean magnitude values between [min, max] will be rendered (if min is set to 20.0 it is read as -Inf, if max is set to 20.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterGMag","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Position X values between [min, max] will be rendered (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). Measured in kiloParsec","name":"FilterPosX","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Position Y values between [min, max] will be rendered (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). Measured in kiloParsec","name":"FilterPosY","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Position Z values between [min, max] will be rendered (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). Measured in kiloParsec","name":"FilterPosZ","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Integer'","documentation":"Set the filter size in pixels used in tonemapping for point splatting rendering[Works only with points]","name":"FilterSize","optional":1,"type":"Integer"},{"description":"Value of type 'Integer'","documentation":"Defines the first row that will be read from the specified FITS file No need to define if data already has been processed. [Works only with FileReaderOption::Fits]","name":"FirstRow","optional":1,"type":"Integer"},{"description":"Value of type 'Integer'","documentation":"Defines the last row that will be read from the specified FITS file; has to be equal to or greater than FirstRow. No need to define if data already has been processed. [Works only with FileReaderOption::Fits]","name":"LastRow","optional":1,"type":"Integer"},{"description":"Value of type 'Double'","documentation":"The number of total pixels a nodes AABB can have in clipping space before its parent is fetched as LOD cache","name":"LodPixelThreshold","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"Factor by which to multiply the luminosity with. [Works in Color and Motion modes]","name":"LuminosityMultiplier","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"Sets what percent of the star magnitude that will be used as boost to star size. [Works only with billboards in Color and Motion modes]","name":"MagnitudeBoost","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"Sets the max percent of existing CPU memory budget that the streaming of files will use","name":"MaxCpuMemoryPercent","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"Sets the max percent of existing GPU memory budget that the streaming will use","name":"MaxGpuMemoryPercent","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"Set the threshold for how big the elliptic weight of a pixel has to be to contribute to the final elliptic shape. A smaller value gives a more visually pleasing result while a bigger value will speed up the rendering on skewed frustums (aka Domes)","name":"PixelWeightThreshold","optional":1,"type":"Double"},{"description":"In list { Static, Color, Motion }","documentation":"This value determines which predefined columns to use in rendering. If 'Static' only the position of the stars is used. 'Color' uses position + color parameters and 'Motion' uses pos, color as well as velocity for the stars","name":"RenderMode","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If set to true, any OpenGL errors will be reported if encountered","name":"ReportGlErrors","optional":1,"type":"Boolean"},{"description":"In list { Point_SSBO, Point_VBO, Billboard_SSBO, Billboard_VBO, Billboard_SSBO_noFBO }","documentation":"This value determines which shaders to use while rendering. If 'Point_*' is chosen then gl_Points will be rendered and then spread out with a bloom filter. If 'Billboard_*' is chosen then the geometry shaders will generate screen-faced billboards for all stars. For '*_SSBO' the data will be stored in Shader Storage Buffer Objects while '*_VBO' uses Vertex Buffer Objects for the streaming. OBS! SSBO won't work on Apple","name":"ShaderOption","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"Adjust star sharpness. [Works only with billboards]","name":"Sharpness","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"Set the normal distribution sigma used in tonemapping for point splatting rendering. [Works only with points]","name":"Sigma","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The path to the texture that should be used as a point spread function for the stars","name":"Texture","optional":0,"type":"String"}],"name":"RenderableGaiaStars"},{"description":"","identifier":"galaxy_renderablegalaxy","members":[{"description":"Value of type 'Double'","documentation":"A unit-less scale factor for the probability of dust absorbing a light particle. The amount of absorption determines the spectrum of the light that is emitted from the galaxy","name":"AbsorptionMultiply","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"A unit-less scale factor for the amount of light being emitted by dust in the galaxy","name":"EmissionMultiply","optional":1,"type":"Double"},{"documentation":"","members":[{"description":"Value of type 'Double'","documentation":"The ratio of point-like stars that are rendered to produce the overall galaxy image. At a value of 0, no stars are rendered, at a value of 1 all points contained in the dataset are rendered. The specific value chosen is a compromise between image fidelity and rendering performance","name":"EnabledPointsRatio","optional":1,"type":"Double"},{"description":"Value of type 'File'","documentation":"","name":"Filename","optional":0,"type":"File"},{"description":"Value of type 'File'","documentation":"","name":"Texture","optional":0,"type":"File"}],"name":"Points","optional":0,"type":"Table"},{"description":"Value of type 'File'","documentation":"If this value is specified, the default raycasting shader is overwritten and the shader found at the provided location is used instead","name":"RaycastingShader","optional":1,"type":"File"},{"description":"Value of type 'Vector3<double>'","documentation":"The internal rotation of the volume rendering in Euler angles","name":"Rotation","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Boolean'","documentation":"If this value is enabled, the point-based star rendering component of the galaxy rendering is turned on. Otherwise, the volume rendering is skipped","name":"StarRenderingEnabled","optional":1,"type":"Boolean"},{"description":"In list { Points, Billboards }","documentation":"This value determines which rendering method is used for visualization of the stars","name":"StarRenderingMethod","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"Determines the distance between steps taken in the volume rendering. The lower the number is, the better the rendering looks, but also takes more computational resources to render","name":"StepSizeInfo","optional":1,"type":"Double"},{"documentation":"","members":[{"description":"Value of type 'Vector3<int>'","documentation":"","name":"Dimensions","optional":0,"type":"Vector3<int>"},{"description":"Value of type 'Double'","documentation":"This value sets the downscaling factor when rendering the current volume","name":"Downscale","optional":1,"type":"Double"},{"description":"Value of type 'File'","documentation":"","name":"Filename","optional":0,"type":"File"},{"description":"Value of type 'Vector3<double>'","documentation":"","name":"Size","optional":0,"type":"Vector3<double>"},{"description":"Value of type 'Double'","documentation":"This value set the number of integration steps during the raycasting procedure","name":"Steps","optional":1,"type":"Double"}],"name":"Volume","optional":0,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If this value is enabled, the volume rendering component of the galaxy rendering is turned on. Otherwise, the volume rendering is skipped","name":"VolumeRenderingEnabled","optional":1,"type":"Boolean"}],"name":"RenderableGalaxy"},{"description":"","identifier":"globebrowsing_renderableglobe","members":[{"documentation":"Specifies information about planetary labels that can be rendered on the object's surface","name":"Labels","optional":1,"reference":{"found":true,"identifier":"globebrowsing_globelabelscomponent","name":"GlobeLabelsComponent"},"type":"Table"},{"documentation":"A list of all the layers that should be added","members":[{"documentation":"","name":"*","optional":0,"reference":{"found":true,"identifier":"globebrowsing_layermanager","name":"LayerManager"},"type":"Table"}],"name":"Layers","optional":0,"type":"Table"},{"description":"Value of type 'String'","documentation":"This value is the name of a scene graph node that should be used as the source of illumination for the globe. If this value is not specified, the solar system's Sun is used instead","name":"LightSourceNode","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Specifies whether the planet should be shaded by the primary light source or not. If it is disabled, all parts of the planet are illuminated","name":"PerformShading","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector3<double>', or Value of type 'Double'","documentation":"Specifies the radii for this planet. If the Double version of this is used, all three radii are assumed to be equal","name":"Radii","optional":1,"type":"Vector3<double>, or Double"},{"description":"Value of type 'Boolean'","documentation":"Specifies if distance culling should be disabled.","name":"RenderAtDistance","optional":1,"type":"Boolean"},{"documentation":"","name":"Rings","optional":1,"reference":{"found":true,"identifier":"globebrowsing_rings_component","name":"RingsComponent"},"type":"Table"},{"documentation":"","members":[{"documentation":"","members":[{"documentation":"","members":[{"description":"Value of type 'String'","documentation":"","name":"Name","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"","name":"Radius","optional":0,"type":"Double"}],"name":"*","optional":1,"type":"Table"}],"name":"Casters","optional":0,"type":"Table"},{"documentation":"","members":[{"documentation":"","members":[{"description":"Value of type 'String'","documentation":"","name":"Name","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"","name":"Radius","optional":0,"type":"Double"}],"name":"*","optional":1,"type":"Table"}],"name":"Sources","optional":0,"type":"Table"}],"name":"ShadowGroup","optional":1,"type":"Table"},{"documentation":"","name":"Shadows","optional":1,"reference":{"found":true,"identifier":"globebrowsing_shadows_component","name":"ShadowComponent"},"type":"Table"}],"name":"RenderableGlobe"},{"description":"","identifier":"base_renderable_grid","members":[{"description":"Value of type 'Color3'","documentation":"This value determines the color of the grid lines that are rendered","name":"Color","optional":1,"type":"Color3"},{"description":"Value of type 'Color3'","documentation":"This value determines the color of the highlighted lines in the grid","name":"HighlightColor","optional":1,"type":"Color3"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width of the highlighted lines in the grid","name":"HighlightLineWidth","optional":1,"type":"Double"},{"description":"Value of type 'Vector2<int>'","documentation":"The rate that the columns and rows are highlighted, counted with respect to the center of the grid. If the number of segments in the grid is odd, the highlighting might be offset from the center.","name":"HighlightRate","optional":1,"type":"Vector2<int>"},{"documentation":"The labels for the grid","name":"Labels","optional":1,"reference":{"found":true,"identifier":"labelscomponent","name":"LabelsComponent"},"type":"Table"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width of the grid","name":"LineWidth","optional":1,"type":"Double"},{"description":"Value of type 'Vector2<int>'","documentation":"This value specifies the number of segments that are used to render the grid in each direction","name":"Segments","optional":1,"type":"Vector2<int>"},{"description":"Value of type 'Vector2<double>'","documentation":"This value species the size of each dimensions of the grid","name":"Size","optional":1,"type":"Vector2<double>"}],"name":"RenderableGrid"},{"description":"","identifier":"space_renderablehabitablezone","members":[{"description":"Value of type 'Double'","documentation":"The effective temperature of the corresponding star, in Kelvin. Used to compute the width and size of the disc","name":"EffectiveTemperature","optional":0,"type":"Double"},{"description":"Value of type 'Vector2<double>'","documentation":"The effective temperature interval for which Kopparapu's formula is used for the habitable zone computation. For stars with temperatures outside the range, a simpler method by Tom E. Harris is used. This method only uses the star luminosity and does not include computation of the optimistic boundaries","name":"KopparapuTeffInterval","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Double'","documentation":"The luminosity of the corresponding star, in units of solar luminosities. Used to compute the width and size of the disc","name":"Luminosity","optional":0,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If true, the habitable zone disc is rendered with the optimistic boundaries rather than the conservative ones","name":"Optimistic","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"This value specifies the outer radius of the disc in meter","name":"Size","optional":1,"type":"Double"},{"description":"Value of type 'File'","documentation":"This value is the path to a texture on disk that contains a one-dimensional texture to be used for the color","name":"Texture","optional":0,"type":"File"},{"description":"Value of type 'Double'","documentation":"This value is used to set the width of the disc. The actual width is set based on the given size and this value should be set between 0 and 1. A value of 1 results in a full circle and 0.5 a disc with an inner radius of 0.5*size","name":"Width","optional":1,"type":"Double"}],"name":"RenderableHabitableZone"},{"description":"RenderableInterpolatedPoints is a version of the RenderablePointCloud class, where the dataset may contain multiple time steps that can be interpolated between. It supports interpolation of both of positions and data values used for color mapping or size.\n\nThe dataset should be structured in a way so that the first N rows correspond to the first set of positions for the objects, the next N rows to the second set of positions, and so on. The number of objects in the dataset must be specified in the asset.\n\nMultiTexture: Note that if using multiple textures for the points based on values in the dataset, the used texture will be decided based on the first N set of points.","identifier":"base_renderableinterpolatedpoints","members":[{"documentation":"Settings related to the coloring of the points, such as a fixed color, color map, etc.","members":[{"documentation":"Settings related to the choice of color map, parameters, etc.","name":"ColorMapping","optional":1,"reference":{"found":true,"identifier":"colormappingcomponent","name":"ColorMappingComponent"},"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"This setting determines if each point should have an outline or not. An outline is only applied when rendering as colored points (not when using textures).","name":"EnableOutline","optional":1,"type":"Boolean"},{"description":"Value of type 'Color3'","documentation":"This value is used to define the color of the points when no color map isused","name":"FixedColor","optional":1,"type":"Color3"},{"description":"Value of type 'Vector3<double>'","documentation":"This value defines the color of the outline. Darker colors will be less visible if Additive Blending is enabled.","name":"OutlineColor","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Double'","documentation":"This value defines the color of the outline. Darker colors will be less visible if Additive Blending is enabled.","name":"OutlineWeight","optional":1,"type":"Double"}],"name":"Coloring","optional":1,"type":"Table"},{"documentation":"A dictionary specifying details on how to load the dataset. Updating the data mapping will lead to a new cached version of the dataset","name":"DataMapping","optional":1,"reference":{"found":true,"identifier":"dataloader_datamapping","name":"DataMapping"},"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"Enables/Disables the drawing of the points","name":"DrawElements","optional":1,"type":"Boolean"},{"documentation":"Settings related to fading based on camera distance. Can be used to either fade away or fade in the points when reaching a certain distance from the origin of the dataset","members":[{"description":"Value of type 'Boolean'","documentation":"Enables/disables the Fade-in effect based on camera distance. Automatically set to true if FadeInDistances are specified in the asset.","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector2<double>'","documentation":"These values determine the initial and final distances from the origin of the dataset at which the points will start and end fading-in. The distances are specified in the same unit as the points, that is, the one provodied as the Unit, or meters. With normal fading the points are fully visible once the camera is outside this range and fully invisible when inside the range. With inverted fading the situation is the opposite: the points are visible inside hen closer than the min value of the range and invisible when further away.","name":"FadeInDistances","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Boolean'","documentation":"This property can be used the invert the fading so that the points are invisible when the camera is further away than the max fade distance and fully visible when it is closer than the min distance.","name":"Invert","optional":1,"type":"Boolean"}],"name":"Fading","optional":1,"type":"Table"},{"description":"Value of type 'File'","documentation":"The path to the data file that contains information about the point to be rendered. Can be either a CSV or SPECK file","name":"File","optional":1,"type":"File"},{"documentation":"Initial settings for the interpolation","members":[{"description":"Value of type 'Double'","documentation":"Affects how long the interpolation takes when triggered using one of the trigger properties. A value of 1 means that a step takes 1 second.","name":"Speed","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If true, the points will be interpolated using a Catmull-Rom spline instead of linearly. This leads to a smoother transition at the breakpoints, i.e. between each step.","name":"UseSplineInterpolation","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"The value to use for interpolation. The max value is set from the number of steps in the dataset, so a step of one corresponds to one step in the dataset and values in-between will be determined using interpolation.","name":"Value","optional":1,"type":"Double"}],"name":"Interpolation","optional":1,"type":"Table"},{"documentation":"The labels for the points. If no label file is provided, the labels will be created to match the points in the data file. For a CSV file, you should then specify which column is the 'Name' column in the data mapping. For SPECK files the labels are created from the comment at the end of each line","name":"Labels","optional":1,"reference":{"found":true,"identifier":"labelscomponent","name":"LabelsComponent"},"type":"Table"},{"description":"Greater or equal to: 1","documentation":"The number of objects to read from the dataset. Every N:th datapoint will be interpreted as the same point, but at a different step in the interpolation","name":"NumberOfObjects","optional":0,"type":"Integer"},{"description":"In list { Camera View Direction, Camera Position Normal }","documentation":"Option wether the point billboards should face the camera or not. Used for non-linear display environments such as fisheye.","name":"RenderOption","optional":1,"type":"String"},{"documentation":"Settings related to the scale of the points, whether they should limit to a certain max size, etc.","members":[{"description":"Value of type 'Boolean'","documentation":"If true, the Max Size property will be used as an upper limit for the size of the point. This reduces the size of the points when approaching them, so that they stick to a maximum visual size depending on the Max Size value.","name":"EnableMaxSizeControl","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"This value controls the maximum allowed size for the points, when the max size control feature is enabled. This limits the visual size of the points based on the distance to the camera. The larger the value, the larger the points are allowed to become. In the background, the computations are made by limiting the size to a certain angle based on the field of view of the camera. So a value of 1 limits the point size to take up a maximum of one degree of the view space.","name":"MaxSize","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value is used as in exponential scaling to set the absolute size of the point. In general, the larger distance the dataset covers, the larger this value should be. If not included, it is computed based on the maximum positional component of the data points. This is useful for showing the dataset at all, but you will likely want to change it to something that looks good.","name":"ScaleExponent","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value is used as a multiplicative factor to adjust the size of the points, after the exponential scaling and any max size control effects. Simply just increases or decreases the visual size of the points.","name":"ScaleFactor","optional":1,"type":"Double"},{"documentation":"Settings related to scaling the points based on data","name":"SizeMapping","optional":1,"reference":{"found":true,"identifier":"base_sizemappingcomponent","name":"SizeMappingComponent"},"type":"Table"}],"name":"SizeSettings","optional":1,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If true, skip the first data point in the loaded dataset","name":"SkipFirstDataPoint","optional":1,"type":"Boolean"},{"documentation":"Settings related to the texturing of the points","members":[{"description":"Value of type 'Boolean'","documentation":"If true, the textures will be compressed to preserve graphics card memory. This is enabled per default, but may lead to visible artefacts for certain images, especially up close. Set this to false to disable any hardware compression of the textures, and represent each color channel with 8 bits.","name":"AllowCompression","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If true, use a provided sprite texture to render the point. If false, draw the points using the default point shape.","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'File'","documentation":"The path to the texture that should be used as the point sprite. Note that if multiple textures option is set in the asset, by providing a texture folder, this value will be ignored.","name":"File","optional":1,"type":"File"},{"description":"Value of type 'Directory'","documentation":"The folder where the textures are located when using multiple different textures to render the points. Setting this value means that multiple textures shall be used and any single sprite texture file is ignored.  Note that the textures can be any format, but rendering efficiency will be best if using textures with the exact same resolution.","name":"Folder","optional":1,"type":"Directory"},{"description":"Value of type 'Boolean'","documentation":"If true, include transparency information in the loaded textures, if there is any. If false, all loaded textures will be converted to RGB format. \nThis setting can be used if you have textures with transparency, but do not need the transparency information. This may be the case when using additive blending, for example. Converting the files to RGB on load may then reduce the memory footprint and/or lead to some optimization in terms of rendering speed.","name":"UseAlphaChannel","optional":1,"type":"Boolean"}],"name":"Texture","optional":1,"type":"Table"},{"description":"Value of type 'Matrix4x4<double>'","documentation":"Transformation matrix to be applied to the position of each object","name":"TransformationMatrix","optional":1,"type":"Matrix4x4<double>"},{"description":"In list { m, Km, pc, Kpc, Mpc, Gpc, Gly }","documentation":"The unit used for all distances. Should match the unit of any distances/positions in the data files","name":"Unit","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If true (default), the color of points rendered on top of each other is blended additively, resulting in a brighter color where points overlap. If false, no such blending will take place and the color of the point will not be modified by blending. Note that this may lead to weird behaviors when the points are rendered with transparency.","name":"UseAdditiveBlending","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If true (default), the loaded dataset will be cached so that it can be loaded faster at a later time. This does however mean that any updates to the values in the dataset will not lead to changes in the rendering without first removing the cached file. Set it to false to disable caching. This can be useful for example when working on importing a new dataset","name":"UseCaching","optional":1,"type":"Boolean"}],"name":"RenderableInterpolatedPoints"},{"description":"","identifier":"base_renderable_labels","members":[{"description":"In list { Normal, Additive }","documentation":"This determines the blending mode that is applied to the renderable","name":"BlendMode","optional":1,"type":"String"},{"description":"Value of type 'Color3'","documentation":"The label text color","name":"Color","optional":1,"type":"Color3"},{"description":"Value of type 'Boolean'","documentation":"Enable/Disable the Fade-in effect","name":"EnableFading","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector2<double>'","documentation":"The distance range in which the labels should be fully opaque, specified in the chosen unit. The distance from the position of the label to the camera","name":"FadeDistances","optional":1,"type":"Vector2<double>"},{"description":"In list { m, Km, Mm, Gm, Tm, Pm, au, pc, Kpc, Mpc, Gpc, Gly }","documentation":"Distance unit for fade-in/-out distance calculations. Defaults to \"au\"","name":"FadeUnit","optional":1,"type":"String"},{"description":"Value of type 'Vector2<double>'","documentation":"The distances over which the fading takes place, given in the specified unit. The first value is the distance before the closest distance and the second the one after the furthest distance. For example, with the unit Parsec (pc), a value of {1, 2} will make the label being fully faded out 1 Parsec before the closest distance and 2 Parsec away from the furthest distance","name":"FadeWidths","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Double'","documentation":"The font size (in points) for the label","name":"FontSize","optional":1,"type":"Double"},{"description":"Value of type 'Vector2<int>'","documentation":"The minimum and maximum size (in pixels) of the label","name":"MinMaxSize","optional":1,"type":"Vector2<int>"},{"description":"In list { Camera View Direction, Camera Position Normal }","documentation":"Label orientation rendering mode","name":"OrientationOption","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value affects the size scale of the label","name":"Size","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The text that will be displayed on screen","name":"Text","optional":1,"type":"String"},{"description":"Value of type 'Matrix4x4<double>'","documentation":"Transformation matrix to be applied to the label","name":"TransformationMatrix","optional":1,"type":"Matrix4x4<double>"}],"name":"RenderableLabel"},{"description":"","identifier":"base_renderable_model","members":[{"description":"Value of type 'Double'","documentation":"A multiplier for ambient lighting","name":"AmbientIntensity","optional":1,"type":"Double"},{"description":"In list { Once, LoopFromStart, LoopInfinitely, BounceFromStart, BounceInfinitely }","documentation":"The mode of how the animation should be played back. Default is animation is played back once at the start time. For a more detailed description see: http://wiki.openspaceproject.com/docs/builders/model-animation","name":"AnimationMode","optional":1,"type":"String"},{"description":"Value of type 'Date and time'","documentation":"The date and time that the model animation should start. In format 'YYYY MM DD hh:mm:ss'.","name":"AnimationStartTime","optional":1,"type":"Date and time"},{"description":"In list { Nanosecond, Microsecond, Millisecond, Second, Minute }, or Value of type 'Double'","documentation":"The time scale for the animation relative to seconds. Ex, if animation is in milliseconds then AnimationTimeScale = 0.001 or AnimationTimeScale = Millisecond, default is Second","name":"AnimationTimeScale","optional":1,"type":"String, or Double"},{"description":"Value of type 'String'","documentation":"Changes the blending function used to calculate the colors of the model with respect to the opacity","name":"BlendingOption","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"A multiplier for diffuse lighting","name":"DiffuseIntensity","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"Enable or disable the animation for the model if it has any","name":"EnableAnimation","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Enable Depth Testing for the Model","name":"EnableDepthTest","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Enable OpenGL automatic face culling optimization","name":"EnableFaceCulling","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Set if invisible parts (parts with no textures or materials) of the model should be forced to render or not.","name":"ForceRenderInvisible","optional":1,"type":"Boolean"},{"description":"Value of type 'File'","documentation":"The path to the fragment shader program that is used instead of the default shader.","name":"FragmentShader","optional":1,"type":"File"},{"description":"Value of type 'File'","documentation":"The file or files that should be loaded in this RenderableModel. The file can contain filesystem tokens. This specifies the model that is rendered by the Renderable.","name":"GeometryFile","optional":0,"type":"File"},{"description":"Value of type 'Boolean'","documentation":"By default the given ModelScale is used to scale the model down, by setting this setting to true the model is instead scaled up with the given ModelScale","name":"InvertModelScale","optional":1,"type":"Boolean"},{"documentation":"A list of light sources that this model should accept light from","members":[{"documentation":"","name":"*","optional":1,"reference":{"found":true,"identifier":"core_light_source","name":"LightSource"},"type":"Table"}],"name":"LightSources","optional":1,"type":"Table"},{"description":"In list { Nanometer, Micrometer, Millimeter, Centimeter, Decimeter, Meter, Kilometer, Thou, Inch, Foot, Yard, Chain, Furlong, Mile }, or Value of type 'Double'","documentation":"The scale of the model. For example, if the model is in centimeters then <code>ModelScale = 'Centimeter'</code> or <code>ModelScale = 0.01</code>. The value that this needs to be in order for the model to be in the correct scale relative to the rest of OpenSpace can be tricky to find. Essentially it depends on the model software that the model was created with and the original intention of the modeler. For more information see our wiki page for this parameter: http://wiki.openspaceproject.com/docs/builders/models/model-scale.html","name":"ModelScale","optional":1,"type":"String, or Double"},{"description":"Value of type 'Matrix4x4<double>'","documentation":"This value specifies the model transform that is applied to the model before all other transformations are applied","name":"ModelTransform","optional":1,"type":"Matrix4x4<double>"},{"description":"Value of type 'Boolean'","documentation":"This value determines whether this model should be shaded by using the position of the Sun","name":"PerformShading","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector3<double>'","documentation":"A vector that moves the place of origin for the model","name":"Pivot","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Vector3<double>'","documentation":"Rotation Vector using degrees","name":"RotationVector","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Double'","documentation":"A multiplier for specular lighting","name":"SpecularIntensity","optional":1,"type":"Double"},{"description":"Value of type 'File'","documentation":"The path to the vertex shader program that is used instead of the default shader.","name":"VertexShader","optional":1,"type":"File"}],"name":"RenderableModel"},{"description":"","identifier":"spacecraftinstruments_renderablemodelprojection","members":[{"description":"Value of type 'File'","documentation":"The file or files that should be loaded in this RenderableModel. The file can contain filesystem tokens or can be specified relatively to the location of the .asset file. This specifies the model that is rendered by the Renderable.","name":"GeometryFile","optional":0,"type":"File"},{"description":"Value of type 'Boolean'","documentation":"By default the given ModelScale is used to scale the model down, by setting this setting to true the model is instead scaled up with the given ModelScale","name":"InvertModelScale","optional":1,"type":"Boolean"},{"description":"In list { Nanometer, Micrometer, Millimeter, Centimeter, Decimeter, Meter, Kilometer, Thou, Inch, Foot, Yard, Chain, Furlong, Mile }, or Value of type 'Double'","documentation":"The scale of the model. For example if the model is in centimeters then ModelScale = Centimeter or ModelScale = 0.01","name":"ModelScale","optional":1,"type":"String, or Double"},{"description":"Value of type 'Boolean'","documentation":"If this value is enabled, the model will be shaded based on the relative location to the Sun. If this value is disabled, shading is disabled and the entire model is rendered brightly","name":"PerformShading","optional":1,"type":"Boolean"},{"documentation":"Contains information about projecting onto this planet.","name":"Projection","optional":0,"reference":{"found":true,"identifier":"spacecraftinstruments_projectioncomponent","name":"ProjectionComponent"},"type":"Table"}],"name":"RenderableModelProjection"},{"description":"","identifier":"base_renderable_renderablenodearrow","members":[{"description":"Greater or equal to: 0","documentation":"A multiplier for ambient lighting for the shading of the arrow","name":"AmbientIntensity","optional":1,"type":"Double"},{"description":"Greater or equal to: 0","documentation":"This size of the arrow head, given in relative value of the entire length of the arrow. For example, 0.1 makes the arrow head length be 10% of the full arrow length","name":"ArrowHeadSize","optional":1,"type":"Double"},{"description":"Greater or equal to: 0","documentation":"A factor that is multiplied with the width, or the arrow itself, to determine the width of the base of the arrow head","name":"ArrowHeadWidthFactor","optional":1,"type":"Double"},{"description":"Value of type 'Color3'","documentation":"This value determines the RGB color for the arrow","name":"Color","optional":1,"type":"Color3"},{"description":"Greater or equal to: 0","documentation":"A multiplier for diffuse lighting for the shading of the arrow","name":"DiffuseIntensity","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The identifier of the node the arrow should point towards","name":"EndNode","optional":0,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If set to true, the arrow direction is inverted so that it points to the start node instead of the end node","name":"Invert","optional":1,"type":"Boolean"},{"description":"Greater or equal to: 0","documentation":"The length of the arrow, given either in meters or as a factor to be multiplied with the bounding sphere of the start node (if 'UseRelativeLength' is true)","name":"Length","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The distance from the center of the start node where the arrow starts. If 'UseRelativeOffset' is true, the value should be given as a factor to multiply with the bounding sphere of the node. Otherwise, the value is specified in meters","name":"Offset","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value determines whether shading should be applied to the arrow model","name":"PerformShading","optional":1,"type":"Double"},{"description":"Greater or equal to: 3","documentation":"This value specifies the number of segments that the shapes for the arrow are separated in. A higher number leads to a higher resolution","name":"Segments","optional":1,"type":"Integer"},{"description":"Greater or equal to: 0","documentation":"A multiplier for specular lighting for the shading of the arrow","name":"SpecularIntensity","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The identifier of the node the arrow starts from","name":"StartNode","optional":0,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Decide whether to use relative size (in units of start node bounding sphere) for the length of the arrow. If false, meters is used","name":"UseRelativeLength","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Decide whether to use relative distances (in units of start node bounding sphere) for the offset distance. If false, meters is used","name":"UseRelativeOffset","optional":1,"type":"Boolean"},{"description":"Greater or equal to: 0","documentation":"This value specifies the width of the arrow shape","name":"Width","optional":1,"type":"Double"}],"name":"RenderableNodeArrow"},{"description":"","identifier":"base_renderable_renderablenodeline","members":[{"description":"Value of type 'Color3'","documentation":"This value determines the RGB color for the line","name":"Color","optional":1,"type":"Color3"},{"description":"An identifier string. May not contain '.', spaces, newlines, or tabs","documentation":"The identifier of the node the line ends at. Defaults to 'Root' if not specified.","name":"EndNode","optional":1,"type":"Identifier"},{"description":"Value of type 'Double'","documentation":"A distance to the end node at which the rendered line should end. By default it takes a value in meters, but if 'UseRelativeOffsets' is set to true it is read as a multiplier times the bounding sphere of the node.","name":"EndOffset","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width","name":"LineWidth","optional":1,"type":"Double"},{"description":"An identifier string. May not contain '.', spaces, newlines, or tabs","documentation":"The identifier of the node the line starts from. Defaults to 'Root' if not specified.","name":"StartNode","optional":1,"type":"Identifier"},{"description":"Value of type 'Double'","documentation":"A distance from the start node at which the rendered line should begin. By default it takes a value in meters, but if 'UseRelativeOffsets' is set to true it is read as a multiplier times the bounding sphere of the node.","name":"StartOffset","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If true, the offset values are interpreted as relative values to be multiplied with the bounding sphere of the start/end node. If false, the value is interpreted as a distance in meters.","name":"UseRelativeOffsets","optional":1,"type":"Boolean"}],"name":"RenderableNodeLine"},{"description":"","identifier":"space_renderableorbitalkepler","members":[{"description":"Value of type 'Color3'","documentation":"This value determines the RGB main color for the lines and points of the trail","name":"Color","optional":0,"type":"Color3"},{"description":"Value of type 'Boolean'","documentation":"If enabled, then the contiguous set of objects starting from StartRenderIdx of size RenderSize will be rendered. If disabled, then the number of objects defined by UpperLimit will rendered from an evenly dispersed sample of the full length of the data file.","name":"ContiguousMode","optional":1,"type":"Boolean"},{"description":"In list { TLE, OMM, SBDB }","documentation":"A NORAD-style Two-Line element Orbit Mean-Elements Message in the KVN notation JPL's Small Bodies Database The file format that is contained in the file","name":"Format","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width of the trail if the selected rendering method includes lines. If the rendering mode is set to Points, this value is ignored","name":"LineWidth","optional":1,"type":"Double"},{"description":"Value of type 'File'","documentation":"The file path to the data file to read","name":"Path","optional":0,"type":"File"},{"description":"Value of type 'Integer'","documentation":"Number of objects to render sequentially from StartRenderIdx","name":"RenderSize","optional":1,"type":"Integer"},{"description":"Value of type 'Integer'","documentation":"A segment quality value for the orbital trail. A value from 1 (lowest) to 10 (highest) that controls the number of line segments in the rendering of the orbital trail. This does not control the direct number of segments because these automatically increase according to the eccentricity of the orbit","name":"SegmentQuality","optional":0,"type":"Integer"},{"description":"Value of type 'Integer'","documentation":"Index of object in renderable group to start rendering (all prior objects will be ignored)","name":"StartRenderIdx","optional":1,"type":"Integer"},{"description":"Value of type 'Double'","documentation":"This value determines how fast the trail fades and is an appearance property.","name":"TrailFade","optional":1,"type":"Double"}],"name":"RenderableOrbitalKepler"},{"description":"","identifier":"exoplanets_renderableorbitdisc","members":[{"description":"Value of type 'Double'","documentation":"This value determines the eccentricity, that is the deviation from a perfect sphere, for this orbit","name":"Eccentricity","optional":0,"type":"Double"},{"description":"Value of type 'Color3'","documentation":"If set, the disc's texture is multiplied with this color. Useful for applying a color grayscale images","name":"MultiplyColor","optional":1,"type":"Color3"},{"description":"Value of type 'Vector2<double>'","documentation":"This property determines the width of the disc. The values specify the lower and upper deviation from the semi major axis, respectively. The values are relative to the size of the semi-major axis. That is, 0 means no deviation from the semi-major axis and 1 is a whole semi-major axis's worth of deviation","name":"Offset","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Double'","documentation":"This value specifies the semi-major axis of the orbit, in meter","name":"Size","optional":0,"type":"Double"},{"description":"Value of type 'File'","documentation":"This value is the path to a texture on disk that contains a one-dimensional texture which is used for the color","name":"Texture","optional":0,"type":"File"}],"name":"RenderableOrbitDisc"},{"description":"","identifier":"base_renderable_plane_image_local","members":[{"description":"Value of type 'Boolean'","documentation":"This value specifies whether the plane is a billboard, which means that it is always facing the camera. If this is false, it can be oriented using other transformations","name":"Billboard","optional":1,"type":"Boolean"},{"description":"In list { Normal, Additive }","documentation":"This determines the blending mode that is applied to this plane","name":"BlendMode","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', the image for this plane will not be loaded at startup but rather when image is shown for the first time. Additionally, if the plane is hidden, the image will automatically be unloaded","name":"LazyLoading","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to false, the image plane will not be mirrored when looking from the backside. This is usually desirable when the image shows data at a specific location, but not if it is displaying text for example","name":"MirrorBackside","optional":1,"type":"Boolean"},{"description":"Value of type 'Color3'","documentation":"If set, the plane's texture is multiplied with this color. Useful for applying a color grayscale images","name":"MultiplyColor","optional":1,"type":"Color3"},{"description":"Value of type 'Double', or Value of type 'Vector2<double>'","documentation":"This value specifies the size of the plane in meters","name":"Size","optional":0,"type":"Double, or Vector2<double>"},{"description":"Value of type 'String'","documentation":"This value specifies an image that is loaded from disk and is used as a texture that is applied to this plane. This image has to be square","name":"Texture","optional":0,"type":"String"}],"name":"RenderablePlaneImageLocal"},{"description":"","identifier":"base_renderable_plane_image_online","members":[{"description":"Value of type 'Boolean'","documentation":"This value specifies whether the plane is a billboard, which means that it is always facing the camera. If this is false, it can be oriented using other transformations","name":"Billboard","optional":1,"type":"Boolean"},{"description":"In list { Normal, Additive }","documentation":"This determines the blending mode that is applied to this plane","name":"BlendMode","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to false, the image plane will not be mirrored when looking from the backside. This is usually desirable when the image shows data at a specific location, but not if it is displaying text for example","name":"MirrorBackside","optional":1,"type":"Boolean"},{"description":"Value of type 'Color3'","documentation":"If set, the plane's texture is multiplied with this color. Useful for applying a color grayscale images","name":"MultiplyColor","optional":1,"type":"Color3"},{"description":"Value of type 'Double', or Value of type 'Vector2<double>'","documentation":"This value specifies the size of the plane in meters","name":"Size","optional":0,"type":"Double, or Vector2<double>"},{"description":"Value of type 'String'","documentation":"Sets the URL of the texture that is displayed on this screen space plane. If this value is changed, the image at the new path will automatically be loaded and displayed","name":"URL","optional":0,"type":"String"}],"name":"RenderablePlaneImageOnline"},{"description":"","identifier":"spacecraftinstruments_renderableplaneprojection","members":[{"description":"Value of type 'String'","documentation":"The SPICE name of the default target that is imaged by this planet","name":"DefaultTarget","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The SPICE name of the instrument that is used to project the image onto this RenderablePlaneProjection","name":"Instrument","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The SPICE name of the spacecraft from which the projection is performed","name":"Spacecraft","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The image that is used on this plane before any image is loaded from the ImageSequencerr","name":"Texture","optional":1,"type":"String"}],"name":"RenderablePlaneProjection"},{"description":"","identifier":"digitaluniverse_RenderablePlanesCloud","members":[{"description":"In list { Normal, Additive }","documentation":"This determines the blending mode that is applied to this plane","name":"BlendMode","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Enables/Disables the Fade-in effect","name":"DisableFadeIn","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector2<double>'","documentation":"These values determine the initial and final distances from the center of our galaxy from which the astronomical object will start and end fading-in","name":"FadeInDistances","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'String'","documentation":"The path to the SPECK file that contains information about the astronomical object being rendered","name":"File","optional":1,"type":"String"},{"documentation":"The labels for the astronomical objects","name":"Labels","optional":1,"reference":{"found":true,"identifier":"labelscomponent","name":"LabelsComponent"},"type":"Table"},{"description":"Value of type 'String'","documentation":"Datavar variable to control the luminosity/size of the astronomical objects","name":"Luminosity","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"The min size (in pixels) for the plane representing the astronomical object","name":"PlaneMinSize","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value is used as a multiplicative factor that is applied to the apparent size of each point","name":"ScaleFactor","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"Scaling control for the luminosity/size of the astronomical objects","name":"ScaleLuminosity","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"This value specifies the path for the textures in disk","name":"TexturePath","optional":0,"type":"String"},{"description":"Value of type 'Matrix4x4<double>'","documentation":"Transformation matrix to be applied to each astronomical object","name":"TransformationMatrix","optional":1,"type":"Matrix4x4<double>"},{"description":"In list { m, Km, pc, Kpc, Mpc, Gpc, Gly }","documentation":"","name":"Unit","optional":1,"type":"String"}],"name":"RenderablePlanesCloud"},{"identifier":"RenderablePlaneSpout","members":[],"name":"RenderablePlaneSpout"},{"description":"","identifier":"base_renderable_plane_time_varying_image","members":[{"description":"Value of type 'Boolean'","documentation":"This value specifies whether the plane is a billboard, which means that it is always facing the camera. If this is false, it can be oriented using other transformations","name":"Billboard","optional":1,"type":"Boolean"},{"description":"In list { Normal, Additive }","documentation":"This determines the blending mode that is applied to this plane","name":"BlendMode","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to false, the image plane will not be mirrored when looking from the backside. This is usually desirable when the image shows data at a specific location, but not if it is displaying text for example","name":"MirrorBackside","optional":1,"type":"Boolean"},{"description":"Value of type 'Color3'","documentation":"If set, the plane's texture is multiplied with this color. Useful for applying a color grayscale images","name":"MultiplyColor","optional":1,"type":"Color3"},{"description":"In list { Background, Opaque, PreDeferredTransparency, PostDeferredTransparency, Overlay }","documentation":"This value specifies if the plane should be rendered in the Background, Opaque, Transparent, or Overlay rendering step","name":"RenderType","optional":1,"type":"String"},{"description":"Value of type 'Double', or Value of type 'Vector2<double>'","documentation":"This value specifies the size of the plane in meters","name":"Size","optional":0,"type":"Double, or Vector2<double>"},{"description":"Value of type 'String'","documentation":"This value specifies the image directory that is loaded from disk and is used as a texture that is applied to this plane","name":"SourceFolder","optional":0,"type":"String"}],"name":"RenderablePlaneTimeVaryingImage"},{"description":"","identifier":"spacecraftinstruments_renderableplanetprojection","members":[{"description":"Value of type 'Double'","documentation":"This value determines the ambient brightness of the dark side of the planet","name":"AmbientBrightness","optional":1,"type":"Double"},{"documentation":"The texture path selected in this property is used as the base texture that is applied to the planet prior to any image projections. This menu always contains an empty option for not using a color map. If this value is specified in an asset, the last texture is used","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"ColorTexturePaths","optional":0,"type":"Table"},{"description":"Value of type 'Double'","documentation":"This value determines the level of height exaggeration that is applied to a potential height field. A value of '0' inhibits the height field, whereas a value of '1' uses the measured height field","name":"HeightExaggeration","optional":1,"type":"Double"},{"documentation":"The texture path selected in this property is used as the height map on the planet. This menu always contains an empty option for not using a heightmap. If this value is specified in an asset, the last texture is used","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"HeightTexturePaths","optional":0,"type":"Table"},{"description":"Value of type 'Integer'","documentation":"The maximum number of image projections to perform per frame. Useful to avoid freezing the system for large delta times","name":"MaxProjectionsPerFrame","optional":1,"type":"Integer"},{"description":"Value of type 'Boolean'","documentation":"If this value is enabled, a shift of the meridian by 180 degrees is performed. This is a fix especially for Pluto height maps, where the definition of the meridian has changed through the New Horizons mission and this requires this shift","name":"MeridianShift","optional":1,"type":"Boolean"},{"documentation":"Contains information about projecting onto this planet","name":"Projection","optional":0,"reference":{"found":true,"identifier":"spacecraftinstruments_projectioncomponent","name":"ProjectionComponent"},"type":"Table"},{"description":"Value of type 'Double', or Value of type 'Vector3<double>'","documentation":"This value specifies the radius of this sphere in meters","name":"Radius","optional":0,"type":"Double, or Vector3<double>"},{"description":"Value of type 'Integer'","documentation":"This value specifies the number of segments that this sphere is split into","name":"Segments","optional":0,"type":"Integer"}],"name":"RenderablePlanetProjection"},{"description":"A RenderablePointCloud can be used to render point-based datasets in 3D space, optionally including color mapping, a sprite texture and labels. There are several properties that affect the visuals of the points, such as settings for scaling, fading, sprite texture, color mapping and whether the colors of overlapping points should be blended additively or not.\n\nThe point size depends on a few different things:\n\n- At the core, scaling is done based on an exponential value, the 'ScaleExponent'. A relatively small change to this value will lead to a large change in size. When no exponent is set, one will be created based on the coordinates in the dataset. The points will be visible, but may be appeared as too large or small. One option is to not specify the exponent when loading the dataset for the the, first time, to make sure the points are visual, and then adapt the value interactively when OpenSpace is running until you find a value that you find suitable.\n\n- There is also an option to limit the size of the points based on a given max size value.\n\n- To easily change the visual size of the points, the multiplicative 'ScaleFactor' may be used. A value of 2 makes the points twice as large, visually, compared to 1.\n\nSee example files in data/assets/examples/pointcloud for some concrete examples of point clouds with different settings.","identifier":"base_renderablepointcloud","members":[{"documentation":"Settings related to the coloring of the points, such as a fixed color, color map, etc.","members":[{"documentation":"Settings related to the choice of color map, parameters, etc.","name":"ColorMapping","optional":1,"reference":{"found":true,"identifier":"colormappingcomponent","name":"ColorMappingComponent"},"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"This setting determines if each point should have an outline or not. An outline is only applied when rendering as colored points (not when using textures).","name":"EnableOutline","optional":1,"type":"Boolean"},{"description":"Value of type 'Color3'","documentation":"This value is used to define the color of the points when no color map isused","name":"FixedColor","optional":1,"type":"Color3"},{"description":"Value of type 'Vector3<double>'","documentation":"This value defines the color of the outline. Darker colors will be less visible if Additive Blending is enabled.","name":"OutlineColor","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Double'","documentation":"This value defines the color of the outline. Darker colors will be less visible if Additive Blending is enabled.","name":"OutlineWeight","optional":1,"type":"Double"}],"name":"Coloring","optional":1,"type":"Table"},{"documentation":"A dictionary specifying details on how to load the dataset. Updating the data mapping will lead to a new cached version of the dataset","name":"DataMapping","optional":1,"reference":{"found":true,"identifier":"dataloader_datamapping","name":"DataMapping"},"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"Enables/Disables the drawing of the points","name":"DrawElements","optional":1,"type":"Boolean"},{"documentation":"Settings related to fading based on camera distance. Can be used to either fade away or fade in the points when reaching a certain distance from the origin of the dataset","members":[{"description":"Value of type 'Boolean'","documentation":"Enables/disables the Fade-in effect based on camera distance. Automatically set to true if FadeInDistances are specified in the asset.","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector2<double>'","documentation":"These values determine the initial and final distances from the origin of the dataset at which the points will start and end fading-in. The distances are specified in the same unit as the points, that is, the one provodied as the Unit, or meters. With normal fading the points are fully visible once the camera is outside this range and fully invisible when inside the range. With inverted fading the situation is the opposite: the points are visible inside hen closer than the min value of the range and invisible when further away.","name":"FadeInDistances","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Boolean'","documentation":"This property can be used the invert the fading so that the points are invisible when the camera is further away than the max fade distance and fully visible when it is closer than the min distance.","name":"Invert","optional":1,"type":"Boolean"}],"name":"Fading","optional":1,"type":"Table"},{"description":"Value of type 'File'","documentation":"The path to the data file that contains information about the point to be rendered. Can be either a CSV or SPECK file","name":"File","optional":1,"type":"File"},{"documentation":"The labels for the points. If no label file is provided, the labels will be created to match the points in the data file. For a CSV file, you should then specify which column is the 'Name' column in the data mapping. For SPECK files the labels are created from the comment at the end of each line","name":"Labels","optional":1,"reference":{"found":true,"identifier":"labelscomponent","name":"LabelsComponent"},"type":"Table"},{"description":"In list { Camera View Direction, Camera Position Normal }","documentation":"Option wether the point billboards should face the camera or not. Used for non-linear display environments such as fisheye.","name":"RenderOption","optional":1,"type":"String"},{"documentation":"Settings related to the scale of the points, whether they should limit to a certain max size, etc.","members":[{"description":"Value of type 'Boolean'","documentation":"If true, the Max Size property will be used as an upper limit for the size of the point. This reduces the size of the points when approaching them, so that they stick to a maximum visual size depending on the Max Size value.","name":"EnableMaxSizeControl","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"This value controls the maximum allowed size for the points, when the max size control feature is enabled. This limits the visual size of the points based on the distance to the camera. The larger the value, the larger the points are allowed to become. In the background, the computations are made by limiting the size to a certain angle based on the field of view of the camera. So a value of 1 limits the point size to take up a maximum of one degree of the view space.","name":"MaxSize","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value is used as in exponential scaling to set the absolute size of the point. In general, the larger distance the dataset covers, the larger this value should be. If not included, it is computed based on the maximum positional component of the data points. This is useful for showing the dataset at all, but you will likely want to change it to something that looks good.","name":"ScaleExponent","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value is used as a multiplicative factor to adjust the size of the points, after the exponential scaling and any max size control effects. Simply just increases or decreases the visual size of the points.","name":"ScaleFactor","optional":1,"type":"Double"},{"documentation":"Settings related to scaling the points based on data","name":"SizeMapping","optional":1,"reference":{"found":true,"identifier":"base_sizemappingcomponent","name":"SizeMappingComponent"},"type":"Table"}],"name":"SizeSettings","optional":1,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If true, skip the first data point in the loaded dataset","name":"SkipFirstDataPoint","optional":1,"type":"Boolean"},{"documentation":"Settings related to the texturing of the points","members":[{"description":"Value of type 'Boolean'","documentation":"If true, the textures will be compressed to preserve graphics card memory. This is enabled per default, but may lead to visible artefacts for certain images, especially up close. Set this to false to disable any hardware compression of the textures, and represent each color channel with 8 bits.","name":"AllowCompression","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If true, use a provided sprite texture to render the point. If false, draw the points using the default point shape.","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'File'","documentation":"The path to the texture that should be used as the point sprite. Note that if multiple textures option is set in the asset, by providing a texture folder, this value will be ignored.","name":"File","optional":1,"type":"File"},{"description":"Value of type 'Directory'","documentation":"The folder where the textures are located when using multiple different textures to render the points. Setting this value means that multiple textures shall be used and any single sprite texture file is ignored.  Note that the textures can be any format, but rendering efficiency will be best if using textures with the exact same resolution.","name":"Folder","optional":1,"type":"Directory"},{"description":"Value of type 'Boolean'","documentation":"If true, include transparency information in the loaded textures, if there is any. If false, all loaded textures will be converted to RGB format. \nThis setting can be used if you have textures with transparency, but do not need the transparency information. This may be the case when using additive blending, for example. Converting the files to RGB on load may then reduce the memory footprint and/or lead to some optimization in terms of rendering speed.","name":"UseAlphaChannel","optional":1,"type":"Boolean"}],"name":"Texture","optional":1,"type":"Table"},{"description":"Value of type 'Matrix4x4<double>'","documentation":"Transformation matrix to be applied to the position of each object","name":"TransformationMatrix","optional":1,"type":"Matrix4x4<double>"},{"description":"In list { m, Km, pc, Kpc, Mpc, Gpc, Gly }","documentation":"The unit used for all distances. Should match the unit of any distances/positions in the data files","name":"Unit","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If true (default), the color of points rendered on top of each other is blended additively, resulting in a brighter color where points overlap. If false, no such blending will take place and the color of the point will not be modified by blending. Note that this may lead to weird behaviors when the points are rendered with transparency.","name":"UseAdditiveBlending","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If true (default), the loaded dataset will be cached so that it can be loaded faster at a later time. This does however mean that any updates to the values in the dataset will not lead to changes in the rendering without first removing the cached file. Set it to false to disable caching. This can be useful for example when working on importing a new dataset","name":"UseCaching","optional":1,"type":"Boolean"}],"name":"RenderablePointCloud"},{"description":"A RenderablePolygonCloud is a RenderablePointCloud where the shape of the points is a uniform polygon with a given number of sides instead of a texture. For instance, PolygonSides = 5 results in the points being rendered as pentagons.\n\nNote that while this renderable inherits the texture component from RenderablePointCloud, any added texture information will be ignored in favor of the polygon shape.\n\nSee documentation of RenderablePointCloud for details on the other parts of the point cloud rendering.","identifier":"base_renderablepolygoncloud","members":[{"documentation":"Settings related to the coloring of the points, such as a fixed color, color map, etc.","members":[{"documentation":"Settings related to the choice of color map, parameters, etc.","name":"ColorMapping","optional":1,"reference":{"found":true,"identifier":"colormappingcomponent","name":"ColorMappingComponent"},"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"This setting determines if each point should have an outline or not. An outline is only applied when rendering as colored points (not when using textures).","name":"EnableOutline","optional":1,"type":"Boolean"},{"description":"Value of type 'Color3'","documentation":"This value is used to define the color of the points when no color map isused","name":"FixedColor","optional":1,"type":"Color3"},{"description":"Value of type 'Vector3<double>'","documentation":"This value defines the color of the outline. Darker colors will be less visible if Additive Blending is enabled.","name":"OutlineColor","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Double'","documentation":"This value defines the color of the outline. Darker colors will be less visible if Additive Blending is enabled.","name":"OutlineWeight","optional":1,"type":"Double"}],"name":"Coloring","optional":1,"type":"Table"},{"documentation":"A dictionary specifying details on how to load the dataset. Updating the data mapping will lead to a new cached version of the dataset","name":"DataMapping","optional":1,"reference":{"found":true,"identifier":"dataloader_datamapping","name":"DataMapping"},"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"Enables/Disables the drawing of the points","name":"DrawElements","optional":1,"type":"Boolean"},{"documentation":"Settings related to fading based on camera distance. Can be used to either fade away or fade in the points when reaching a certain distance from the origin of the dataset","members":[{"description":"Value of type 'Boolean'","documentation":"Enables/disables the Fade-in effect based on camera distance. Automatically set to true if FadeInDistances are specified in the asset.","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector2<double>'","documentation":"These values determine the initial and final distances from the origin of the dataset at which the points will start and end fading-in. The distances are specified in the same unit as the points, that is, the one provodied as the Unit, or meters. With normal fading the points are fully visible once the camera is outside this range and fully invisible when inside the range. With inverted fading the situation is the opposite: the points are visible inside hen closer than the min value of the range and invisible when further away.","name":"FadeInDistances","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Boolean'","documentation":"This property can be used the invert the fading so that the points are invisible when the camera is further away than the max fade distance and fully visible when it is closer than the min distance.","name":"Invert","optional":1,"type":"Boolean"}],"name":"Fading","optional":1,"type":"Table"},{"description":"Value of type 'File'","documentation":"The path to the data file that contains information about the point to be rendered. Can be either a CSV or SPECK file","name":"File","optional":1,"type":"File"},{"documentation":"The labels for the points. If no label file is provided, the labels will be created to match the points in the data file. For a CSV file, you should then specify which column is the 'Name' column in the data mapping. For SPECK files the labels are created from the comment at the end of each line","name":"Labels","optional":1,"reference":{"found":true,"identifier":"labelscomponent","name":"LabelsComponent"},"type":"Table"},{"description":"Greater or equal to: 3","documentation":"The number of sides for the polygon used to represent each point. Default is 3, i.e. to use triangles","name":"PolygonSides","optional":1,"type":"Integer"},{"description":"In list { Camera View Direction, Camera Position Normal }","documentation":"Option wether the point billboards should face the camera or not. Used for non-linear display environments such as fisheye.","name":"RenderOption","optional":1,"type":"String"},{"documentation":"Settings related to the scale of the points, whether they should limit to a certain max size, etc.","members":[{"description":"Value of type 'Boolean'","documentation":"If true, the Max Size property will be used as an upper limit for the size of the point. This reduces the size of the points when approaching them, so that they stick to a maximum visual size depending on the Max Size value.","name":"EnableMaxSizeControl","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"This value controls the maximum allowed size for the points, when the max size control feature is enabled. This limits the visual size of the points based on the distance to the camera. The larger the value, the larger the points are allowed to become. In the background, the computations are made by limiting the size to a certain angle based on the field of view of the camera. So a value of 1 limits the point size to take up a maximum of one degree of the view space.","name":"MaxSize","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value is used as in exponential scaling to set the absolute size of the point. In general, the larger distance the dataset covers, the larger this value should be. If not included, it is computed based on the maximum positional component of the data points. This is useful for showing the dataset at all, but you will likely want to change it to something that looks good.","name":"ScaleExponent","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value is used as a multiplicative factor to adjust the size of the points, after the exponential scaling and any max size control effects. Simply just increases or decreases the visual size of the points.","name":"ScaleFactor","optional":1,"type":"Double"},{"documentation":"Settings related to scaling the points based on data","name":"SizeMapping","optional":1,"reference":{"found":true,"identifier":"base_sizemappingcomponent","name":"SizeMappingComponent"},"type":"Table"}],"name":"SizeSettings","optional":1,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If true, skip the first data point in the loaded dataset","name":"SkipFirstDataPoint","optional":1,"type":"Boolean"},{"documentation":"Settings related to the texturing of the points","members":[{"description":"Value of type 'Boolean'","documentation":"If true, the textures will be compressed to preserve graphics card memory. This is enabled per default, but may lead to visible artefacts for certain images, especially up close. Set this to false to disable any hardware compression of the textures, and represent each color channel with 8 bits.","name":"AllowCompression","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If true, use a provided sprite texture to render the point. If false, draw the points using the default point shape.","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'File'","documentation":"The path to the texture that should be used as the point sprite. Note that if multiple textures option is set in the asset, by providing a texture folder, this value will be ignored.","name":"File","optional":1,"type":"File"},{"description":"Value of type 'Directory'","documentation":"The folder where the textures are located when using multiple different textures to render the points. Setting this value means that multiple textures shall be used and any single sprite texture file is ignored.  Note that the textures can be any format, but rendering efficiency will be best if using textures with the exact same resolution.","name":"Folder","optional":1,"type":"Directory"},{"description":"Value of type 'Boolean'","documentation":"If true, include transparency information in the loaded textures, if there is any. If false, all loaded textures will be converted to RGB format. \nThis setting can be used if you have textures with transparency, but do not need the transparency information. This may be the case when using additive blending, for example. Converting the files to RGB on load may then reduce the memory footprint and/or lead to some optimization in terms of rendering speed.","name":"UseAlphaChannel","optional":1,"type":"Boolean"}],"name":"Texture","optional":1,"type":"Table"},{"description":"Value of type 'Matrix4x4<double>'","documentation":"Transformation matrix to be applied to the position of each object","name":"TransformationMatrix","optional":1,"type":"Matrix4x4<double>"},{"description":"In list { m, Km, pc, Kpc, Mpc, Gpc, Gly }","documentation":"The unit used for all distances. Should match the unit of any distances/positions in the data files","name":"Unit","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If true (default), the color of points rendered on top of each other is blended additively, resulting in a brighter color where points overlap. If false, no such blending will take place and the color of the point will not be modified by blending. Note that this may lead to weird behaviors when the points are rendered with transparency.","name":"UseAdditiveBlending","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If true (default), the loaded dataset will be cached so that it can be loaded faster at a later time. This does however mean that any updates to the values in the dataset will not lead to changes in the rendering without first removing the cached file. Set it to false to disable caching. This can be useful for example when working on importing a new dataset","name":"UseCaching","optional":1,"type":"Boolean"}],"name":"RenderablePolygonCloud"},{"description":"","identifier":"base_renderable_prism","members":[{"description":"Value of type 'Double'","documentation":"The radius of the base of the prism's shape, in meters. By default it is given the same radius as the outer shape","name":"BaseRadius","optional":1,"type":"Double"},{"description":"Value of type 'Color3'","documentation":"This value determines the RGB color for the line","name":"Color","optional":1,"type":"Color3"},{"description":"Value of type 'Double'","documentation":"The length of the prism in meters","name":"Length","optional":1,"type":"Double"},{"description":"Value of type 'Integer'","documentation":"The number of lines connecting the two shapes of the prism. They will be evenly distributed around the bounding circle that makes up the shape of the prism","name":"Lines","optional":1,"type":"Integer"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width","name":"LineWidth","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The radius of the prism's shape in meters","name":"Radius","optional":1,"type":"Double"},{"description":"Value of type 'Integer'","documentation":"The number of segments the shape of the prism should have","name":"Segments","optional":0,"type":"Integer"}],"name":"RenderablePrism"},{"description":"","identifier":"base_renderable_radialgrid","members":[{"description":"Value of type 'Integer'","documentation":"This value specifies the number of segments that is used to render each circle in the grid","name":"CircleSegments","optional":1,"type":"Integer"},{"description":"Value of type 'Color3'","documentation":"This value determines the color of the grid lines that are rendered","name":"Color","optional":1,"type":"Color3"},{"description":"Value of type 'Vector2<int>'","documentation":"Specifies the number of segments for the grid, in the radial and angular direction respectively","name":"GridSegments","optional":1,"type":"Vector2<int>"},{"documentation":"The labels for the grid","name":"Labels","optional":1,"reference":{"found":true,"identifier":"labelscomponent","name":"LabelsComponent"},"type":"Table"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width of the spherical grid","name":"LineWidth","optional":1,"type":"Double"},{"description":"Value of type 'Vector2<double>'","documentation":"The radii values that determine the size of the circular grid. The first value is the radius of the inmost ring and the second is the radius of the outmost ring","name":"Radii","optional":1,"type":"Vector2<double>"}],"name":"RenderableRadialGrid"},{"description":"","identifier":"space_renderable_rings","members":[{"description":"Value of type 'Double'","documentation":"This value affects the filtering out of part of the rings depending on the color values of the texture. The higher value, the more rings are filtered out","name":"ColorFilter","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value is a multiplicative factor that is applied to the side of the rings that is facing away from the Sun. If this value is equal to '1', no darkening of the night side occurs","name":"NightFactor","optional":1,"type":"Double"},{"description":"Value of type 'Vector2<double>'","documentation":"This value is used to limit the width of the rings. Each of the two values is a value between 0 and 1, where 0 is the center of the ring and 1 is the maximum extent at the radius. For example, if the value is {0.5, 1.0}, the ring is only shown between radius/2 and radius. It defaults to {0.0, 1.0}","name":"Offset","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Double'","documentation":"This value specifies the radius of the rings in meter","name":"Size","optional":0,"type":"Double"},{"description":"Value of type 'File'","documentation":"This value is the path to a texture on disk that contains a one-dimensional texture which is used for these rings","name":"Texture","optional":0,"type":"File"}],"name":"RenderableRings"},{"description":"","identifier":"spacecraftinstruments_renderableshadowcylinder","members":[{"description":"In list { NONE, LT, LT+S, CN, CN+S }","documentation":"This value determines the aberration method that is used to compute the shadow cylinder","name":"Aberration","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"This value is the SPICE name of target body that is used as the shadow caster for the shadow cylinder","name":"Body","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"This value is the SPICE name of the reference frame in which the shadow cylinder is expressed","name":"BodyFrame","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"This value determines the SPICE name of the object that is used as the illuminator for computing the shadow cylinder","name":"LightSource","optional":0,"type":"String"},{"description":"Value of type 'Integer'","documentation":"This value determines the number of control points that is used to construct the shadow geometry. The higher this number, the more detailed the shadow is, but it will have a negative impact on the performance","name":"NumberOfPoints","optional":1,"type":"Integer"},{"description":"Value of type 'String'","documentation":"This value specifies the SPICE name of the object that is the observer of the shadow cylinder","name":"Observer","optional":0,"type":"String"},{"description":"Value of type 'Color3'","documentation":"This value determines the color that is used for the shadow cylinder","name":"ShadowColor","optional":1,"type":"Color3"},{"description":"Value of type 'Double'","documentation":"This value determines the length of the shadow that is cast by the target object. The total distance of the shadow is equal to the distance from the target to the Sun multiplied with this value","name":"ShadowLength","optional":1,"type":"Double"},{"description":"In list { UMBRAL, PENUMBRAL }","documentation":"This value determines the type of the terminator that is used to calculate the shadow eclipse","name":"TerminatorType","optional":0,"type":"String"}],"name":"RenderableShadowCylinder"},{"description":"","identifier":"skybrowser_renderableskytarget","members":[{"description":"Value of type 'Boolean'","documentation":"Always rotate the target to have it's up direction aligned with the up direction of the camera","name":"ApplyRoll","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"Determines the size of the crosshair. The size is determined in fov (degrees)","name":"CrossHairSize","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The thickness of the line of the target. The larger number, the thicker line","name":"LineWidth","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"When the field of view is larger than the rectangle threshold, a rectangle will be rendered in the target","name":"RectangleThreshold","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The vertical field of view of the target.","name":"VerticalFov","optional":1,"type":"Double"}],"name":"RenderableSkyTarget"},{"description":"","identifier":"base_renderable_sphere_image_local","members":[{"description":"Value of type 'Boolean'","documentation":"Enables/Disables the fade in and out effects","name":"DisableFadeInOut","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"This value determines the distance from center of MilkyWay from where the astronomical object starts to fade in, given as a percentage of the size of the object. A negative or zero value means no fading in will happen. This is also the default","name":"FadeInThreshold","optional":1,"type":"Double"},{"description":"In range: ( 0,1 )","documentation":"This value determines percentage of the sphere that is visible before starting to fade it out. A negative or zero value means no fading out will happen. This is also the default","name":"FadeOutThreshold","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', the image for this sphere will not be loaded at startup but rather when the image is shown for the first time. Additionally, if the sphere is disabled, the image will automatically be unloaded","name":"LazyLoading","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Mirror the texture along the x-axis","name":"MirrorTexture","optional":1,"type":"Boolean"},{"description":"In list { Outside, Inside, Both }","documentation":"Specifies whether the texture is applied to the inside of the sphere, the outside of the sphere, or both","name":"Orientation","optional":1,"type":"String"},{"description":"Value of type 'Integer'","documentation":"This value specifies the number of segments that the sphere is separated in","name":"Segments","optional":0,"type":"Integer"},{"description":"Value of type 'Double'","documentation":"This value specifies the radius of the sphere in meters","name":"Size","optional":0,"type":"Double"},{"description":"Value of type 'String'","documentation":"This value specifies an image that is loaded from disk and is used as a texture that is applied to this sphere. This image is expected to be an equirectangular projection","name":"Texture","optional":0,"type":"String"}],"name":"RenderableSphereImageLocal"},{"description":"","identifier":"base_renderable_sphere_image_online","members":[{"description":"Value of type 'Boolean'","documentation":"Enables/Disables the fade in and out effects","name":"DisableFadeInOut","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"This value determines the distance from center of MilkyWay from where the astronomical object starts to fade in, given as a percentage of the size of the object. A negative or zero value means no fading in will happen. This is also the default","name":"FadeInThreshold","optional":1,"type":"Double"},{"description":"In range: ( 0,1 )","documentation":"This value determines percentage of the sphere that is visible before starting to fade it out. A negative or zero value means no fading out will happen. This is also the default","name":"FadeOutThreshold","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"Mirror the texture along the x-axis","name":"MirrorTexture","optional":1,"type":"Boolean"},{"description":"In list { Outside, Inside, Both }","documentation":"Specifies whether the texture is applied to the inside of the sphere, the outside of the sphere, or both","name":"Orientation","optional":1,"type":"String"},{"description":"Value of type 'Integer'","documentation":"This value specifies the number of segments that the sphere is separated in","name":"Segments","optional":0,"type":"Integer"},{"description":"Value of type 'Double'","documentation":"This value specifies the radius of the sphere in meters","name":"Size","optional":0,"type":"Double"},{"description":"Value of type 'String'","documentation":"Sets the URL of the texture that is displayed on this sphere. If this value is changed, the image at the new path will automatically be loaded and displayed. This image is expected to be an equirectangular projection","name":"URL","optional":0,"type":"String"}],"name":"RenderableSphereImageOnline"},{"identifier":"RenderableSphereSpout","members":[],"name":"RenderableSphereSpout"},{"description":"","identifier":"base_renderable_sphericalgrid","members":[{"description":"Value of type 'Color3'","documentation":"This value determines the color of the grid lines that are rendered","name":"Color","optional":1,"type":"Color3"},{"documentation":"The labels for the grid","name":"Labels","optional":1,"reference":{"found":true,"identifier":"labelscomponent","name":"LabelsComponent"},"type":"Table"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width of the spherical grid","name":"LineWidth","optional":1,"type":"Double"},{"description":"Value of type 'Integer'","documentation":"This value specifies the number of segments that are used to render the surrounding sphere","name":"Segments","optional":1,"type":"Integer"}],"name":"RenderableSphericalGrid"},{"description":"","identifier":"space_renderablestars","members":[{"description":"Value of type 'File'","documentation":"The path to the texture that is used to convert from the B-V value of the star to its color. The texture is used as a one dimensional lookup function","name":"ColorMap","optional":0,"type":"File"},{"description":"In list { Color, Velocity, Speed, Other Data, Fixed Color }","documentation":"This value determines which quantity is used for determining the color of the stars","name":"ColorOption","optional":1,"type":"String"},{"documentation":"The mappings between data values and the variable names specified in the speck file","members":[{"description":"Value of type 'String'","documentation":"The name of the variable in the speck file that is used as the absolute magnitude variable","name":"AbsoluteMagnitude","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The name of the variable in the speck file that is used as the apparent magnitude variable","name":"ApparentMagnitude","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The name of the variable in the speck file that is used as the b-v color variable","name":"Bv","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The name of the variable in the speck file that is used as the luminance variable","name":"Luminance","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The name of the variable in the speck file that is used as the speed","name":"Speed","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The name of the variable in the speck file that is used as the star velocity along the x-axis","name":"Vx","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The name of the variable in the speck file that is used as the star velocity along the y-axis","name":"Vy","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The name of the variable in the speck file that is used as the star velocity along the z-axis","name":"Vz","optional":1,"type":"String"}],"name":"DataMapping","optional":0,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"Enables/Disables the Fade-in effect","name":"DisableFadeIn","optional":1,"type":"Boolean"},{"description":"Value of type 'Vector2<double>'","documentation":"These values determine the initial and final distances from the center of our galaxy from which the astronomical object will start and end fading-in","name":"FadeInDistances","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'File'","documentation":"The path to the SPECK file containing information about the stars being rendered","name":"File","optional":0,"type":"File"},{"description":"Value of type 'Boolean'","documentation":"Determines whether other data values outside the value range should be visible or filtered away","name":"FilterOutOfRange","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"Adjust star magnitude by 10^MagnitudeExponent. Stars closer than this distance are given full opacity. Farther away, stars dim proportionally to the logarithm of their distance","name":"MagnitudeExponent","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"The index of the speck file data column that is used as the color input","name":"OtherData","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"The color map that is used if the 'Other Data' rendering method is selected","name":"OtherDataColorMap","optional":1,"type":"String"},{"description":"In list { PSF, Texture Based }","documentation":"Render method for the stars","name":"RenderMethod","optional":0,"type":"String"},{"description":"In list { App Brightness, Lum and Size, Lum, Size and App Brightness, Abs Magnitude, App Magnitude, Distance Modulus }","documentation":"Base multiplyer for the final stars' sizes","name":"SizeComposition","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"This value specifies a value that is always filtered out of the value ranges on loading. This can be used to trim the dataset's automatic value range","name":"StaticFilter","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This is the value that is used to replace statically filtered values. Setting this value only makes sense if 'StaticFilter' is 'true', as well","name":"StaticFilterReplacement","optional":1,"type":"Double"},{"description":"Value of type 'File'","documentation":"The path to the texture that should be used as a point spread function for the stars","name":"Texture","optional":0,"type":"File"}],"name":"RenderableStars"},{"description":"","identifier":"base_renderable_time_varying_sphere","members":[{"description":"Value of type 'String'","documentation":"This value specifies a directory of images that are loaded from disk and is used as a texture that is applied to this sphere. The images are expected to be an equirectangular projection","name":"TextureSource","optional":0,"type":"String"}],"name":"RenderableTimeVaryingSphere"},{"description":"","identifier":"volume_renderable_timevaryingvolume","members":[{"description":"Value of type 'Double'","documentation":"The volume renderer's general brightness","name":"Brightness","optional":1,"type":"Double"},{"documentation":"@TODO Missing documentation","members":[],"name":"ClipPlanes","optional":1,"type":"Table"},{"description":"Value of type 'String'","documentation":"Spherical or Cartesian grid","name":"GridType","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Specifies if you want to invert the volume data at it z-axis.","name":"InvertDataAtZ","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"Specifies the number of seconds to show the the last timestep after its actual time","name":"SecondsAfter","optional":0,"type":"Double"},{"description":"Value of type 'Double'","documentation":"Specifies the number of seconds to show the first timestep before its actual time. The default value is 0","name":"SecondsBefore","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"Specifies the path to load timesteps from","name":"SourceDirectory","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"Specifies how often to sample on the raycaster. Lower step -> higher resolution","name":"StepSize","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"Specifies the transfer function file path","name":"TransferFunction","optional":0,"type":"String"}],"name":"RenderableTimeVaryingVolume"},{"identifier":"RenderableToyVolume","members":[],"name":"RenderableToyVolume"},{"description":"","identifier":"base_renderable_renderabletrailorbit","members":[{"description":"Value of type 'Color3'","documentation":"This value determines the RGB main color for the lines and points of the trail","name":"Color","optional":0,"type":"Color3"},{"description":"Value of type 'Boolean'","documentation":"Toggles whether the trail should fade older points out. If this value is 'true', the 'Fade' parameter determines the speed of fading. If this value is 'false', the entire trail is rendered at full opacity and color","name":"EnableFade","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"The fading factor that is applied to the trail if the 'EnableFade' value is 'true'. If it is 'false', this setting has no effect. The higher the number, the less fading is applied","name":"LineFade","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width of the trail if the selected rendering method includes lines. If the rendering mode is set to Points, this value is ignored","name":"LineWidth","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The objects period, i.e. the length of its orbit around the parent object given in (Earth) days. In the case of Earth, this would be a sidereal year (=365.242 days). If this values is specified as multiples of the period, it is possible to show the effects of precession","name":"Period","optional":0,"type":"Double"},{"description":"Value of type 'Integer'","documentation":"This value specifies the base size of the points along the line if the selected rendering method includes points. If the rendering mode is set the Lines, this value is ignored. If a subsampling of the values is performed, the subsampled values are half this size","name":"PointSize","optional":1,"type":"Integer"},{"description":"In list { Background, Opaque, PreDeferredTransparent, PostDeferredTransparent, Overlay }","documentation":"This value specifies if the orbit should be rendered in the Background,Opaque, Transparent, or Overlay rendering step. Default is Transparent","name":"RenderableType","optional":1,"type":"String"},{"description":"In list { Lines, Points, Lines+Points, Lines+Points }","documentation":"Determines how the trail should be rendered to the screen. If 'Lines' is selected, only the line part is visible, if 'Points' is selected, only the corresponding points (and subpoints) are shown. 'Lines+Points' shows both parts","name":"Rendering","optional":1,"type":"String"},{"description":"Value of type 'Integer'","documentation":"The number of samples along the orbit. This determines the resolution of the trail; the tradeoff being that a higher resolution is able to resolve more detail, but will take more resources while rendering, too. The higher, the smoother the trail, but also more memory will be used","name":"Resolution","optional":0,"type":"Integer"},{"documentation":"This object is used to compute locations along the path. Any Translation object can be used here","name":"Translation","optional":0,"reference":{"found":true,"identifier":"core_transform_translation","name":"Translation"},"type":"Table"}],"name":"RenderableTrailOrbit"},{"description":"","identifier":"base_renderable_renderabletrailtrajectory","members":[{"description":"Value of type 'Color3'","documentation":"This value determines the RGB main color for the lines and points of the trail","name":"Color","optional":0,"type":"Color3"},{"description":"Value of type 'Boolean'","documentation":"Toggles whether the trail should fade older points out. If this value is 'true', the 'Fade' parameter determines the speed of fading. If this value is 'false', the entire trail is rendered at full opacity and color","name":"EnableFade","optional":1,"type":"Boolean"},{"description":"A valid date in ISO 8601 format","documentation":"The end time for the range of this trajectory. The date must be in ISO 8601 format: YYYY MM DD HH:mm:ss.xxx","name":"EndTime","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"The fading factor that is applied to the trail if the 'EnableFade' value is 'true'. If it is 'false', this setting has no effect. The higher the number, the less fading is applied","name":"LineFade","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width of the trail if the selected rendering method includes lines. If the rendering mode is set to Points, this value is ignored","name":"LineWidth","optional":1,"type":"Double"},{"description":"Value of type 'Integer'","documentation":"This value specifies the base size of the points along the line if the selected rendering method includes points. If the rendering mode is set the Lines, this value is ignored. If a subsampling of the values is performed, the subsampled values are half this size","name":"PointSize","optional":1,"type":"Integer"},{"description":"In list { Lines, Points, Lines+Points, Lines+Points }","documentation":"Determines how the trail should be rendered to the screen. If 'Lines' is selected, only the line part is visible, if 'Points' is selected, only the corresponding points (and subpoints) are shown. 'Lines+Points' shows both parts","name":"Rendering","optional":1,"type":"String"},{"description":"Value of type 'Double'","documentation":"The interval between samples of the trajectory. This value (together with 'TimeStampSubsampleFactor') determines how far apart (in time) the samples are spaced along the trajectory. The time interval between 'StartTime' and 'EndTime' is split into 'SampleInterval' * 'TimeStampSubsampleFactor' segments","name":"SampleInterval","optional":0,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', the entire trail will be rendered; if it is 'false', only the trail until the current time in the application will be shown","name":"ShowFullTrail","optional":1,"type":"Boolean"},{"description":"A valid date in ISO 8601 format","documentation":"The start time for the range of this trajectory. The date must be in ISO 8601 format: YYYY MM DD HH:mm:ss.xxx","name":"StartTime","optional":0,"type":"String"},{"description":"Value of type 'Integer'","documentation":"The number of vertices that will be calculated each frame whenever the trail needs to be recalculated. A greater value will result in more calculations per frame.","name":"SweepChunkSize","optional":1,"type":"Integer"},{"description":"Value of type 'Integer'","documentation":"The factor that is used to create subsamples along the trajectory. This value (together with 'SampleInterval') determines how far apart (in time) the samples are spaced along the trajectory. The time interval between 'StartTime' and 'EndTime' is split into 'SampleInterval' * 'TimeStampSubsampleFactor' segments","name":"TimeStampSubsampleFactor","optional":1,"type":"Integer"},{"documentation":"This object is used to compute locations along the path. Any Translation object can be used here","name":"Translation","optional":0,"reference":{"found":true,"identifier":"core_transform_translation","name":"Translation"},"type":"Table"}],"name":"RenderableTrailTrajectory"},{"description":"","identifier":"base_renderable_renderabletravelspeed","members":[{"description":"Value of type 'Vector3<double>'","documentation":"This value determines the RGB color for the line","name":"Color","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Double'","documentation":"This value specifies the length of the faded tail of the light indicator set in light seconds","name":"FadeLength","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value specifies the length of the light indicator set in light seconds","name":"IndicatorLength","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value specifies the line width","name":"LineWidth","optional":1,"type":"Double"},{"description":"Value of type 'String'","documentation":"This value sets which scene graph node to target with the light speed indicator","name":"Target","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"The speed of light is the default value","name":"TravelSpeed","optional":1,"type":"Double"}],"name":"RenderableTravelSpeed"},{"description":"","identifier":"video_renderablevideoplane","members":[{"description":"Value of type 'Boolean'","documentation":"This value specifies whether the plane is a billboard, which means that it is always facing the camera. If this is false, it can be oriented using other transformations","name":"Billboard","optional":1,"type":"Boolean"},{"description":"In list { Normal, Additive }","documentation":"This determines the blending mode that is applied to this plane","name":"BlendMode","optional":1,"type":"String"},{"description":"Value of type 'Date and time'","documentation":"The date and time that the video should end in the format 'YYYY MM DD hh:mm:ss'.","name":"EndTime","optional":1,"type":"Date and time"},{"description":"Value of type 'Boolean'","documentation":"If checked, the video is continues playing from the start when it reaches the end of the video.","name":"LoopVideo","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to false, the image plane will not be mirrored when looking from the backside. This is usually desirable when the image shows data at a specific location, but not if it is displaying text for example","name":"MirrorBackside","optional":1,"type":"Boolean"},{"description":"Value of type 'Color3'","documentation":"If set, the plane's texture is multiplied with this color. Useful for applying a color grayscale images","name":"MultiplyColor","optional":1,"type":"Color3"},{"description":"Value of type 'Boolean'","documentation":"Play audio","name":"PlayAudio","optional":1,"type":"Boolean"},{"description":"In list { MapToSimulationTime, RealTimeLoop }","documentation":"The mode of how the video should be played back. Default is video is played back according to the set start and end times.","name":"PlaybackMode","optional":1,"type":"String"},{"description":"Value of type 'Double', or Value of type 'Vector2<double>'","documentation":"This value specifies the size of the plane in meters","name":"Size","optional":0,"type":"Double, or Vector2<double>"},{"description":"Value of type 'Date and time'","documentation":"The date and time that the video should start in the format 'YYYY MM DD hh:mm:ss'.","name":"StartTime","optional":1,"type":"Date and time"},{"description":"Value of type 'String'","documentation":"This should point to the video file that should be played.","name":"Video","optional":0,"type":"String"}],"name":"RenderableVideoPlane"},{"description":"","identifier":"video_renderablevideosphere","members":[{"description":"Value of type 'Boolean'","documentation":"Enables/Disables the fade in and out effects","name":"DisableFadeInOut","optional":1,"type":"Boolean"},{"description":"Value of type 'Date and time'","documentation":"The date and time that the video should end in the format 'YYYY MM DD hh:mm:ss'.","name":"EndTime","optional":1,"type":"Date and time"},{"description":"Value of type 'Double'","documentation":"This value determines the distance from center of MilkyWay from where the astronomical object starts to fade in, given as a percentage of the size of the object. A negative or zero value means no fading in will happen. This is also the default","name":"FadeInThreshold","optional":1,"type":"Double"},{"description":"In range: ( 0,1 )","documentation":"This value determines percentage of the sphere that is visible before starting to fade it out. A negative or zero value means no fading out will happen. This is also the default","name":"FadeOutThreshold","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If checked, the video is continues playing from the start when it reaches the end of the video.","name":"LoopVideo","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Mirror the texture along the x-axis","name":"MirrorTexture","optional":1,"type":"Boolean"},{"description":"In list { Outside, Inside, Both }","documentation":"Specifies whether the texture is applied to the inside of the sphere, the outside of the sphere, or both","name":"Orientation","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Play audio","name":"PlayAudio","optional":1,"type":"Boolean"},{"description":"In list { MapToSimulationTime, RealTimeLoop }","documentation":"The mode of how the video should be played back. Default is video is played back according to the set start and end times.","name":"PlaybackMode","optional":1,"type":"String"},{"description":"Value of type 'Integer'","documentation":"This value specifies the number of segments that the sphere is separated in","name":"Segments","optional":0,"type":"Integer"},{"description":"Value of type 'Double'","documentation":"This value specifies the radius of the sphere in meters","name":"Size","optional":0,"type":"Double"},{"description":"Value of type 'Date and time'","documentation":"The date and time that the video should start in the format 'YYYY MM DD hh:mm:ss'.","name":"StartTime","optional":1,"type":"Date and time"},{"description":"Value of type 'String'","documentation":"This should point to the video file that should be played.","name":"Video","optional":0,"type":"String"}],"name":"RenderableVideoSphere"}],"identifier":"categoryRenderable","name":"Renderable"},{"classes":[{"description":"","identifier":"http_synchronization","members":[{"description":"An identifier string. May not contain '.', spaces, newlines, or tabs","documentation":"The unique identifier for this resource that is used to request a set of files from the synchronization servers","name":"Identifier","optional":0,"type":"Identifier"},{"description":"Value of type 'Boolean'","documentation":"Determines whether .zip files that are downloaded should automatically be unzipped. If this value is not specified, no unzipping is performed","name":"UnzipFiles","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"The destination for the unzipping. If this value is specified, all zip files contained in the synchronization will be unzipped into the same specified folder. If this value is specified, but 'unzipFiles' is false, no extaction will be performed","name":"UnzipFilesDestination","optional":1,"type":"String"},{"description":"Value of type 'Integer'","documentation":"The version of this resource that should be requested","name":"Version","optional":0,"type":"Integer"}],"name":"HttpSynchronization"},{"identifier":"ResourceSynchronization","members":[],"name":"ResourceSynchronization"},{"description":"","identifier":"sync_synchronization_url","members":[{"description":"Value of type 'String'","documentation":"Optional to provide filename to override the one which is otherwise automatically created from the url. If this value is specified, the url parameter only only contain exactly one URL","name":"Filename","optional":1,"type":"String"},{"description":"An identifier string. May not contain '.', spaces, newlines, or tabs","documentation":"This identifier will be part of the used folder structure and, can be used to manually find the downloaded folder in the synchronization folder","name":"Identifier","optional":0,"type":"Identifier"},{"description":"Value of type 'Boolean'","documentation":"Deprecated, use SecondsUntilResync instead","name":"Override","optional":1,"type":"Boolean"},{"description":"Greater or equal to: 0","documentation":"This variable determines the validity period of a file(s) in seconds before it needs to be re-downloaded. The default value keeps the file permanently cached, while a value of 0 forces the file to be downloaded on every startup.","name":"SecondsUntilResync","optional":1,"type":"Double"},{"description":"Value of type 'String', or Value of type 'Table'","documentation":"The URL or urls from where the files are downloaded. If multiple URLs are provided, all files will be downloaded to the same directory and the filename parameter must not be specified simultaneously","name":"Url","optional":0,"type":"String, or Table"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true' (the default), the hash of the URL is appended to the directory name to produce a unique directory under all circumstances. If this is not desired, the URLSynchronization use the bare directory name alone if this value is 'false'. If this value is 'false', the identifier has to be specified","name":"UseHash","optional":1,"type":"Boolean"}],"name":"UrlSynchronization"}],"identifier":"categoryResourceSynchronization","name":"ResourceSynchronization"},{"classes":[{"description":"","identifier":"base_transform_rotation_constant","members":[{"description":"Value of type 'Vector3<double>'","documentation":"This value is the rotation axis around which the object will rotate","name":"RotationAxis","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Double'","documentation":"This value determines the number of revolutions per in-game second","name":"RotationRate","optional":1,"type":"Double"}],"name":"ConstantRotation"},{"description":"","identifier":"base_transform_rotation_fixed","members":[{"description":"Value of type 'String'","documentation":"This is the name of the node that this rotation is attached to, this value is only needed if any of the three axis uses the Object type. In this case, the location of the attached node is required to compute the relative direction","name":"Attached","optional":1,"type":"String"},{"description":"Value of type 'String', or Value of type 'Vector3<double>'","documentation":"This value specifies the direction of the new X axis. If this value is not specified, it will be computed by completing a right handed coordinate system from the Y and Z axis, which must be specified instead. If this value is a string, it is interpreted as the identifier of another scenegraph node. If this value is a 3-vector, it is interpreted as a direction vector","name":"XAxis","optional":1,"type":"String, or Vector3<double>"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', and the type is set to 'Object', the inverse of the pointing direction is used, causing the object to point away from the referenced object","name":"XAxisInvert","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"This value determines whether the vector specified is used directly, or whether it is used together with another non-coordinate system completion vector to construct an orthogonal vector instead","name":"XAxisOrthogonal","optional":1,"type":"Boolean"},{"description":"Value of type 'String', or Value of type 'Vector3<double>'","documentation":"This value specifies the direction of the new Y axis. If this value is not specified, it will be computed by completing a right handed coordinate system from the X and Z axis, which must be specified instead. If this value is a string, it is interpreted as the identifier of another scenegraph node. If this value is a 3-vector, it is interpreted as a direction vector","name":"YAxis","optional":1,"type":"String, or Vector3<double>"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', and the type is set to 'Object', the inverse of the pointing direction is used, causing the object to point away from the referenced object","name":"YAxisInvert","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"This value determines whether the vector specified is used directly, or whether it is used together with another non-coordinate system completion vector to construct an orthogonal vector instead","name":"YAxisOrthogonal","optional":1,"type":"Boolean"},{"description":"Value of type 'String', or Value of type 'Vector3<double>'","documentation":"This value specifies the direction of the new Z axis. If this value is not specified, it will be computed by completing a right handed coordinate system from the X and Y axis, which must be specified instead. If this value is a string, it is interpreted as the identifier of another scenegraph node. If this value is a 3-vector, it is interpreted as a direction vector","name":"ZAxis","optional":1,"type":"String, or Vector3<double>"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', and the type is set to 'Object', the inverse of the pointing direction is used, causing the object to point away from the referenced object","name":"ZAxisInvert","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"This value determines whether the vector specified is used directly, or whether it is used together with another non-coordinate system completion vector to construct an orthogonal vector instead","name":"ZAxisOrthogonal","optional":1,"type":"Boolean"}],"name":"FixedRotation"},{"description":"","identifier":"globebrowsing_rotation_globerotation","members":[{"description":"Value of type 'Double'","documentation":"A rotation angle that can be used to rotate the object around its own y-axis, which will be pointing out of the globe's surface","name":"Angle","optional":1,"type":"Double"},{"description":"A valid scene graph node with a RenderableGlobe","documentation":"The globe on which the longitude/latitude is specified","name":"Globe","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"The latitude of the location on the globe's surface. The value can range from -90 to 90, with negative values representing the southern hemisphere of the globe. The default value is 0.0","name":"Latitude","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The longitude of the location on the globe's surface. The value can range from -180 to 180, with negative values representing the western hemisphere of the globe. The default value is 0.0","name":"Longitude","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If this value is 'true', the lat and lon are updated to match the camera","name":"UseCamera","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If set to true, the heightmap will be used when computing the surface normal. This means that the object will be rotated to lay flat on the surface at the given coordinate and follow the shape of the landscape","name":"UseHeightmap","optional":1,"type":"Boolean"}],"name":"GlobeRotation"},{"description":"","identifier":"base_transform_rotation_lua","members":[{"description":"Value of type 'String'","documentation":"This value is the path to the Lua script that will be executed to compute the rotation for this transformation. The script needs to define a function 'rotation' that takes the current simulation time in seconds past the J2000 epoch as the first argument, the current wall time as milliseconds past the J2000 epoch as the second argument and computes the rotation returned as 9 values","name":"Script","optional":0,"type":"String"}],"name":"LuaRotation"},{"description":"","identifier":"core_transform_rotation","members":[{"description":"Must name a valid Rotation type","documentation":"The type of the rotation that is described in this element. The available types of rotations depend on the configuration of the application and can be written to disk on application startup into the FactoryDocumentation","name":"Type","optional":0,"type":"String"}],"name":"Rotation"},{"description":"","identifier":"space_transform_rotation_spice","members":[{"description":"Value of type 'String'","documentation":"This value specifies the destination frame that is used for the coordinate transformation. This has to be a valid SPICE name. If this value is not specified, a reference frame of 'GALACTIC' is used instead","name":"DestinationFrame","optional":1,"type":"String"},{"description":"A time to lock the rotation to","documentation":"A time to lock the rotation to. Setting this to an empty string will unlock the time and return to rotation based on current simulation time","name":"FixedDate","optional":1,"type":"String"},{"description":"A valid SPICE NAIF name or integer","documentation":"This value specifies the source frame that is used as the basis for the coordinate transformation. This has to be a valid SPICE name","name":"SourceFrame","optional":0,"type":"String"},{"documentation":"The time frame in which the spice kernels are valid","name":"TimeFrame","optional":1,"reference":{"found":true,"identifier":"core_time_frame","name":"TimeFrame"},"type":"Table"}],"name":"SpiceRotation"},{"description":"","identifier":"base_transform_rotation_static","members":[{"description":"Value of type 'Vector3<double>', Value of type 'Vector4<double>', or Value of type 'Matrix3x3<double>'","documentation":"Stores the static rotation as a vector containing Euler angles, a quaternion or a rotation matrix","name":"Rotation","optional":0,"type":"Vector3<double>, Vector4<double>, or Matrix3x3<double>"}],"name":"StaticRotation"},{"description":"","identifier":"base_transform_rotation_keyframe","members":[{"documentation":"A table of keyframes, with keys formatted as YYYY-MM-DDTHH:MM:SS and values that are valid Rotation objects","members":[{"documentation":"","name":"*","optional":0,"reference":{"found":true,"identifier":"core_transform_rotation","name":"Rotation"},"type":"Table"}],"name":"Keyframes","optional":0,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', an interpolation is applied between the given keyframes. If this value is set to 'false', the interpolation is not applied","name":"ShouldInterpolate","optional":1,"type":"Boolean"}],"name":"TimelineRotation"}],"identifier":"categoryRotation","name":"Rotation"},{"classes":[{"description":"","identifier":"base_scale_lua","members":[{"description":"Value of type 'String'","documentation":"This value is the path to the Lua script that will be executed to compute the scaling factor for this transformation. The script needs to define a function 'scale' that takes the current simulation time in seconds past the J2000 epoch as the first argument, the current wall time as milliseconds past the J2000 epoch the second argument and computes the three scaling factors","name":"Script","optional":0,"type":"String"}],"name":"LuaScale"},{"description":"","identifier":"base_scale_nonuniformstatic","members":[{"description":"Value of type 'Vector3<double>'","documentation":"These values are used as scaling factors for the scene graph node that this transformation is attached to relative to its parent","name":"Scale","optional":0,"type":"Vector3<double>"}],"name":"NonUniformStaticScale"},{"description":"","identifier":"core_transform_scaling","members":[{"description":"Must name a valid Scale type","documentation":"The type of the scaling that is described in this element. The available types of scaling depend on the configuration of the application and can be written to disk on application startup into the FactoryDocumentation","name":"Type","optional":0,"type":"String"}],"name":"Scale"},{"description":"","identifier":"base_scale_static","members":[{"description":"Value of type 'Double'","documentation":"This value is used as a scaling factor for the scene graph node that this transformation is attached to relative to its parent","name":"Scale","optional":0,"type":"Double"}],"name":"StaticScale"},{"description":"","identifier":"base_scale_timedependent","members":[{"description":"Value of type 'Boolean'","documentation":"If this value is true, the velocity computation will never result in any negative values. This is useful for instantaneous events that only propagate forwards. The default value is 'true'","name":"ClampToPositive","optional":1,"type":"Boolean"},{"description":"Value of type 'String'","documentation":"The date at which this scale will be 0. The current value of the scale is computed by taking the difference between the current time and the reference date and multiplying it by the speed. This field must be formatted as: YYYY-MM-DDThh:mm:ss.uuu  where h is a 24h clock and u microseconds","name":"ReferenceDate","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"The speed at which the value grows or shrinks. The units for this are meters per second. The default value is 1 m/s","name":"Speed","optional":1,"type":"Double"}],"name":"TimeDependentScale"}],"identifier":"categoryScale","name":"Scale"},{"classes":[{"identifier":"ScreenSpaceBrowser","members":[],"name":"ScreenSpaceBrowser"},{"description":"","identifier":"base_screenspace_dashboard","members":[{"description":"Value of type 'String'","documentation":"Specifies the GUI name of the ScreenSpaceDashboard","name":"Name","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', this ScreenSpaceDashboard will use the main dashboard instead of creating an independent one","name":"UseMainDashboard","optional":1,"type":"Boolean"}],"name":"ScreenSpaceDashboard"},{"description":"","identifier":"base_screenspace_framebuffer","members":[],"name":"ScreenSpaceFramebuffer"},{"description":"","identifier":"base_screenspace_image_local","members":[{"description":"Value of type 'String'","documentation":"Specifies the GUI name of the ScreenspaceImage","name":"Name","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"Sets the path of the texture that is displayed on this screen space plane. If this value is changed, the image at the new path will automatically be loaded and displayed. The size of the image will also automatically set the default size of this plane","name":"TexturePath","optional":1,"type":"String"}],"name":"ScreenSpaceImageLocal"},{"description":"","identifier":"base_screenspace_image_online","members":[{"description":"Value of type 'String'","documentation":"Specifies the GUI name of the ScreenspaceImage","name":"Name","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"Sets the URL of the texture that is displayed on this screen space plane. If this value is changed, the image at the new path will automatically be loaded and displayed. The size of the image will also automatically set the default size of this plane","name":"URL","optional":1,"type":"String"}],"name":"ScreenSpaceImageOnline"},{"description":"","identifier":"core_screenspacerenderable","members":[{"description":"Value of type 'Color4'","documentation":"The fixed color that is combined with the screen space renderable to create the final color. The actual color of the screen space renderable is alpha-blended with the background color to produce the final result","name":"BackgroundColor","optional":1,"type":"Color4"},{"description":"Value of type 'Color3'","documentation":"Sets the color of the border","name":"BorderColor","optional":1,"type":"Color3"},{"description":"Greater than: 0","documentation":"The width of the border","name":"BorderWidth","optional":1,"type":"Double"},{"description":"Value of type 'Vector3<double>'","documentation":"This value determines the position of this screen space plane in Cartesian three-dimensional coordinates (meters)","name":"CartesianPosition","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Boolean'","documentation":"This setting determines whether this sceen space plane will be visible or not","name":"Enabled","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If enabled, the local rotation is applied after the plane is rotated to face the camera","name":"FaceCamera","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"This value determines whether the location of this screen space plane will be specified using radius, azimuth and elevation (if this is set to 'true') or using cartesian coordinates. By switching this value, the correct property will be shown or hidden. The Cartesian coordinate system is useful if a regular rendering is applied, whereas the radius azimuth elevation are most useful in a planetarium environment","name":"Gamma","optional":1,"type":"Double"},{"description":"An identifier string. May not contain '.', spaces, newlines, or tabs","documentation":"This is the unique identifier for this screenspace renderable. It has to be unique amongst all existing screenspace nodes that already have been added to the scene.","name":"Identifier","optional":1,"type":"Identifier"},{"description":"Value of type 'Color3'","documentation":"If set, the plane's texture is multiplied with this color. Useful for applying a color grayscale images","name":"MultiplyColor","optional":1,"type":"Color3"},{"description":"Value of type 'String'","documentation":"Specifies the name of this screenspace renderable. This does not have to be unique to the scene, but it is recommended to be","name":"Name","optional":1,"type":"String"},{"description":"In range: ( 0,1 )","documentation":"This value determines the opacity of the screen space plane. If this value is 1, the plane is completely opaque, if this value is 0, the plane is completely transparent","name":"Opacity","optional":1,"type":"Double"},{"description":"Value of type 'Vector3<double>'","documentation":"Sets the gamma correction of the texture","name":"RadiusAzimuthElevation","optional":1,"type":"Vector3<double>"},{"description":"Value of type 'Boolean'","documentation":"If this value is 'true', this screenspace renderable is going to ignore the global blackout factor from the Render Engine and will always render at full opacity. If it is 'false', it will adhere to the factor and fade out like the rest of the 3D rendering","name":"RenderDuringBlackout","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"This value determines a scale factor for the plane. The default size of a plane is determined by the concrete instance and reflects, for example, the size of the image being displayed","name":"Scale","optional":1,"type":"Double"},{"description":"Value of type 'String', or Value of type 'Table'","documentation":"Defines either a single or multiple tags that apply to this ScreenSpaceRenderable, thus making it possible to address multiple, separate Renderables with a single property change","name":"Tag","optional":1,"type":"String, or Table"},{"description":"Must name a valid Screenspace renderable","documentation":"The type of the Screenspace renderable that is to be created. The available types of Screenspace renderable depend on the configuration of the application and can be written to disk on application startup into the FactoryDocumentation","name":"Type","optional":0,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Determines whetether the z/radius values affects the size of the plane or not","name":"UsePerspectiveProjection","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"This value determines whether the location of this screen space plane will be specified using radius, azimuth and elevation (if this is set to 'true') or using cartesian coordinates. By switching this value, the correct property will be shown or hidden. The Cartesian coordinate system is useful if a regular rendering is applied, whereas the radius azimuth elevation are most useful in a planetarium environment","name":"UseRadiusAzimuthElevation","optional":1,"type":"Boolean"}],"name":"ScreenSpaceRenderable"},{"description":"","identifier":"skybrowser_screenspaceskybrowser","members":[{"description":"Value of type 'Boolean'","documentation":"If checked, the browser will be not be displayed. If it is not checked, it will be","name":"IsHidden","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If checked, spacecrafts will point towards the coordinate of an image upon selection.","name":"PointSpacecraft","optional":1,"type":"Boolean"},{"description":"Value of type 'Double'","documentation":"A parameter to set the resolution of the texture. 1 is full resolution and slower frame rate. Lower value means lower resolution of texture and faster frame rate","name":"TextureQuality","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If checked, the sky browser display copy will update its coordinates while the target is animating.","name":"UpdateDuringTargetAnimation","optional":1,"type":"Boolean"}],"name":"ScreenSpaceSkyBrowser"},{"identifier":"ScreenSpaceSpout","members":[],"name":"ScreenSpaceSpout"},{"description":"","identifier":"video_screenspacevideo","members":[{"description":"Value of type 'Date and time'","documentation":"The date and time that the video should end in the format 'YYYY MM DD hh:mm:ss'.","name":"EndTime","optional":1,"type":"Date and time"},{"description":"Value of type 'Boolean'","documentation":"If checked, the video is continues playing from the start when it reaches the end of the video.","name":"LoopVideo","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Play audio","name":"PlayAudio","optional":1,"type":"Boolean"},{"description":"In list { MapToSimulationTime, RealTimeLoop }","documentation":"The mode of how the video should be played back. Default is video is played back according to the set start and end times.","name":"PlaybackMode","optional":1,"type":"String"},{"description":"Value of type 'Date and time'","documentation":"The date and time that the video should start in the format 'YYYY MM DD hh:mm:ss'.","name":"StartTime","optional":1,"type":"Date and time"},{"description":"Value of type 'String'","documentation":"This should point to the video file that should be played.","name":"Video","optional":0,"type":"String"}],"name":"ScreenSpaceVideo"}],"identifier":"categoryScreenSpaceRenderable","name":"ScreenSpaceRenderable"},{"classes":[{"description":"","identifier":"gaiamission_constructoctreefrombin","members":[{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Bp-G color values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterBpG","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Bp mean magnitude values between [min, max] will be inserted into Octree (if min is set to 20.0 it is read as -Inf, if max is set to 20.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away. Default BpMag = 20.0 if no value existed","name":"FilterBpMag","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Bp-Rp color values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterBpRp","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with DEC values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterDec","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with DEC Error values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterDecError","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with G mean magnitude values between [min, max] will be inserted into Octree (if min is set to 20.0 it is read as -Inf, if max is set to 20.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away. Default GMag = 20.0 if no value existed","name":"FilterGMag","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with G-Rp color values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterGRp","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Parallax values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterParallax","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Parallax Error values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterParallaxError","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Proper Motion DEC values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterPmdec","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Proper Motion DEC Error values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterPmdecError","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Proper Motion RA values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterPmra","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Proper Motion RA Error values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterPmraError","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Position X values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterPosX","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Position Y values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterPosY","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Position Z values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterPosZ","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with RA values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterRa","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with RA Error values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterRaError","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Rp mean magnitude values between [min, max] will be inserted into Octree (if min is set to 20.0 it is read as -Inf, if max is set to 20.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away. Default RpMag = 20.0 if no value existed","name":"FilterRpMag","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Radial Velocity values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterRv","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Radial Velocity Error values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterRvError","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Velocity X values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterVelX","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Velocity Y values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterVelY","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'Vector2<double>'","documentation":"If defined then only stars with Velocity Z values between [min, max] will be inserted into Octree (if min is set to 0.0 it is read as -Inf, if max is set to 0.0 it is read as +Inf). If min = max then all values equal min|max will be filtered away","name":"FilterVelZ","optional":1,"type":"Vector2<double>"},{"description":"Value of type 'String'","documentation":"If SingleFileInput is set to true then this specifies the path to a single BIN file containing a full dataset. Otherwise this specifies the path to a folder with multiple BIN files containing subsets of sorted star data","name":"InFileOrFolderPath","optional":0,"type":"String"},{"description":"Value of type 'Integer'","documentation":"If set it determines what MAX_DIST to use when creating Octree","name":"MaxDist","optional":1,"type":"Integer"},{"description":"Value of type 'Integer'","documentation":"If set it determines what MAX_STAR_PER_NODE to use when creating Octree","name":"MaxStarsPerNode","optional":1,"type":"Integer"},{"description":"Value of type 'String'","documentation":"If SingleFileInput is set to true then this specifies the output file name (including full path). Otherwise this specifies the path to the folder which to save all files","name":"OutFileOrFolderPath","optional":0,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If true then task will read from a single file and output a single binary file with the full Octree. If false then task will read all files in specified folder and output multiple files for the Octree","name":"SingleFileInput","optional":1,"type":"Boolean"}],"name":"ConstructOctreeTask"},{"identifier":"ConvertRecFileVersionTask","members":[],"name":"ConvertRecFileVersionTask"},{"identifier":"ConvertRecFormatTask","members":[],"name":"ConvertRecFormatTask"},{"description":"This task is used for generating the binary data files that are used for the exoplanet system loading in OpenSpace. Using this binary file allows efficient data loading of an arbitrary exoplanet system during runtime, without keeping all data in memory.\n\nTwo output files are generated, whose paths have to be specified: One binary with the data for the exoplanets (OutputBIN) and one look-up table that is used to find where in the binary file a particular system is located (OutputLUT).\n\nAdditionally, the task uses three different files as input: 1) a CSV file with the data from the NASA Exoplanet Archive, 2) A SPECK file that contains star positions, and 3) a TXT file that is used for the conversion from the stars' effective temperature to a B-V color index. The paths for all these paths have to be specified. The SPECK file (2) will be used for the positions of the host stars, to make sure that they line up with the stars in that dataset. The cross-matching is done by star name, as given by the comment in the SPECK file and the host star column in the exoplanet dataset.\n\nNote that the CSV (1) has to include a certain set of columns for the rendering to be correct. Use the accompanying python script to download the datafile, or make sure to include all columns in your download.","identifier":"exoplanets_data_preparation_task","members":[{"description":"Value of type 'String'","documentation":"The csv file to extract data from","name":"InputDataFile","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The speck file with star locations","name":"InputSPECK","optional":0,"type":"String"},{"description":"A valid filepath","documentation":"The bin file to export data into","name":"OutputBIN","optional":0,"type":"String"},{"description":"A valid filepath","documentation":"The txt file to write look-up table into","name":"OutputLUT","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The path to a teff to bv conversion file. Should be a txt file where each line has the format 'teff,bv'","name":"TeffToBvFile","optional":0,"type":"String"}],"name":"ExoplanetsDataPreparationTask"},{"description":"","identifier":"generate_raw_volume_task","members":[{"description":"A valid filepath","documentation":"The lua dictionary file to export metadata to","name":"DictionaryOutput","optional":0,"type":"String"},{"description":"Value of type 'Vector3<int>'","documentation":"A vector representing the number of cells in each dimension","name":"Dimensions","optional":0,"type":"Vector3<int>"},{"description":"Value of type 'Vector3<double>'","documentation":"A vector representing the lower bound of the domain","name":"LowerDomainBound","optional":0,"type":"Vector3<double>"},{"description":"A valid filepath","documentation":"The raw volume file to export data to","name":"RawVolumeOutput","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The timestamp that is written to the metadata of this volume","name":"Time","optional":0,"type":"String"},{"description":"Value of type 'Vector3<double>'","documentation":"A vector representing the upper bound of the domain","name":"UpperDomainBound","optional":0,"type":"Vector3<double>"},{"description":"A Lua expression that returns a  function taking three numbers as arguments (x, y, z) and returning a  number","documentation":"The Lua function used to compute the cell values","name":"ValueFunction","optional":0,"type":"String"}],"name":"GenerateRawVolumeTask"},{"description":"","identifier":"galaxy_milkywayconversiontask","members":[],"name":"MilkywayConversionTask"},{"description":"","identifier":"galaxy_milkywaypointsconversiontask","members":[],"name":"MilkywayPointsConversionTask"},{"description":"","identifier":"gaiamission_fitsfiletorawdata","members":[{"documentation":"A list of strings with the names of all the additional columns that are to be read from the specified FITS file(s). These columns can be used for filtering while constructing Octree later","members":[{"description":"Value of type 'String'","documentation":"","name":"*","optional":1,"type":"String"}],"name":"FilterColumnNames","optional":1,"type":"Table"},{"description":"Value of type 'Integer'","documentation":"Defines the first row that will be read from the specified FITS file(s). If not defined then reading will start at first row","name":"FirstRow","optional":1,"type":"Integer"},{"description":"Value of type 'String'","documentation":"If SingleFileProcess is set to true then this specifies the path to a single FITS file that will be read. Otherwise it specifies the path to a folder with multiple FITS files that are to be read","name":"InFileOrFolderPath","optional":0,"type":"String"},{"description":"Value of type 'Integer'","documentation":"Defines the last row that will be read from the specified FITS file(s). If not defined (or less than FirstRow) then full file(s) will be read","name":"LastRow","optional":1,"type":"Integer"},{"description":"Value of type 'String'","documentation":"If SingleFileProcess is set to true then this specifies the name (including entire path) to the output file. Otherwise it specifies the path to the output folder which to export binary star data to","name":"OutFileOrFolderPath","optional":0,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"If true then task will read from a single FITS file and output a single binary file. If false then task will read all files in specified folder and output multiple files sorted by location","name":"SingleFileProcess","optional":1,"type":"Boolean"},{"description":"Greater than: 1","documentation":"Defines how many threads to use when reading from multiple files","name":"ThreadsToUse","optional":1,"type":"Integer"}],"name":"ReadFitsTask"},{"description":"","identifier":"gaiamission_speckfiletorawdata","members":[{"description":"Value of type 'String'","documentation":"The path to the SPECK file that are to be read","name":"InFilePath","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The path to the file to export raw VBO data to","name":"OutFilePath","optional":0,"type":"String"}],"name":"ReadSpeckTask"},{"description":"The base class of all tasks. Specify the Type property to create one of the available task types. This property should be included in the same table object as the properties of the specific task.\n\nTasks can be executed using the separate TaskRunner application. When starting the application, just enter the path to the file describing the task you want to run as input in the command line to initiate the run. All tasks should live in the task folder in the data folder of the OpenSpace installation.","identifier":"core_task","members":[{"description":"A valid Task created by a factory","documentation":"This key specifies the type of Task that gets created. It has to be one of the valid Tasks that are available for creation (see the FactoryDocumentation for a list of possible Tasks), which depends on the configration of the application","name":"Type","optional":0,"type":"String"}],"name":"Task"}],"identifier":"categoryTask","name":"Task"},{"classes":[{"description":"","identifier":"globebrowsing_defaulttileprovider","members":[{"documentation":"Specifies the cache settings that should be applied to this layer","members":[{"description":"Greater than: 0","documentation":"The block-size of the MRF cache","name":"BlockSize","optional":1,"type":"Integer"},{"description":"In list { PNG, JPEG, LERC }","documentation":"The compression algorithm to use for cached tiles","name":"Compression","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Specifies whether to use caching or not","name":"Enabled","optional":1,"type":"Boolean"},{"description":"In range: ( 0,100 )","documentation":"The quality setting of the compression alogrithm, only valid for JPEG","name":"Quality","optional":1,"type":"Integer"}],"name":"CacheSettings","optional":1,"type":"Table"},{"description":"Value of type 'String'","documentation":"The path to the file that is loaded by GDAL to produce tiles. Since GDAL supports it, this can also be the textual representation of the contents of a loading file","name":"FilePath","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The name of the enclosing globe","name":"GlobeName","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"Identifier of the enclosing layer to which tiles are provided","name":"Identifier","optional":1,"type":"String"},{"description":"Value of type 'Integer'","documentation":"The layer into which this tile provider is loaded","name":"LayerGroupID","optional":0,"type":"Integer"},{"description":"Value of type 'String'","documentation":"User-facing name of this tile provider","name":"Name","optional":1,"type":"String"},{"description":"Value of type 'Boolean'","documentation":"Determines if the tiles should be preprocessed before uploading to the GPU","name":"PerformPreProcessing","optional":1,"type":"Boolean"},{"description":"Value of type 'Integer'","documentation":"This value is the preferred size (in pixels) for each tile. Choosing the right value is a tradeoff between more efficiency (larger images) and better quality (smaller images). The tile pixel size has to be smaller than the size of the complete image if a single image is used","name":"TilePixelSize","optional":1,"type":"Integer"}],"name":"DefaultTileProvider"},{"description":"","identifier":"globebrowsing_imagesequencetileprovider","members":[{"description":"Value of type 'Directory'","documentation":"The path that is used to look for images for this image provider. The path must point to an existing folder that contains images","name":"FolderPath","optional":0,"type":"Directory"},{"description":"Value of type 'Integer'","documentation":"The index into the list of images that is used to pick the currently displayed image","name":"Index","optional":1,"type":"Integer"}],"name":"ImageSequenceTileProvider"},{"description":"","identifier":"globebrowsing_singleimageprovider","members":[{"description":"Value of type 'String'","documentation":"The file path that is used for this image provider. The file must point to an image that is then loaded and used for all tiles","name":"FilePath","optional":0,"type":"String"}],"name":"SingleImageProvider"},{"description":"","identifier":"globebrowsing_sizereferencetileprovider","members":[{"description":"Value of type 'Vector3<double>', or Value of type 'Double'","documentation":"","name":"Radii","optional":1,"type":"Vector3<double>, or Double"}],"name":"SizeReferenceTileProvider"},{"identifier":"SpoutImageProvider","members":[],"name":"SpoutImageProvider"},{"description":"","identifier":"globebrowsing_temporaltileprovider","members":[{"description":"Value of type 'String'","documentation":"If provided, the tile provider will use this color map to convert a greyscale image to color","name":"Colormap","optional":1,"type":"String"},{"description":"Value of type 'String'","documentation":"If the 'UseFixedTime' is enabled, this time will be used instead of the actual time taken from OpenSpace for the displayed tiles","name":"FixedTime","optional":1,"type":"String"},{"documentation":"","members":[{"description":"Value of type 'Directory'","documentation":"The folder that is parsed for files. Every file in the provided directory is checked against the provided format and added if it adheres to said format","name":"Folder","optional":0,"type":"Directory"},{"description":"Value of type 'String'","documentation":"The format of files that is pared in the provided folder. The format string has to be compatible to the C++ function get_time. https://en.cppreference.com/w/cpp/io/manip/get_time","name":"Format","optional":0,"type":"String"}],"name":"Folder","optional":1,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"Determines whether this tile provider should interpolate between two adjacent layers","name":"Interpolation","optional":1,"type":"Boolean"},{"description":"In list { Prototyped, Folder }","documentation":"The mode that his temporal tile provider operates in. In the `Prototyped` mode, a given start and end time, temporal resolution, and perscriptive time format is used to generate the information used by GDAL to access the data. In the `folder` method, a folder and a time format is provided and each file in the folder is scanned using the time format instead","name":"Mode","optional":0,"type":"String"},{"documentation":"","members":[{"description":"Value of type 'String'","documentation":"The text that will be used as the prototype to generate the data to load the image layer. Any occurance of `${OpenSpaceTimeId}` in this prototype is replaced with the current date according to the remaining information such as the resolution and the format and the resulting text is used to load the corresponding images","name":"Prototype","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The temporal resolution between each image","name":"TemporalResolution","optional":0,"type":"String"},{"documentation":"The starting and ending times for the range of values","members":[{"description":"Value of type 'String'","documentation":"The (inclusive) ending time of the temporal image range","name":"End","optional":0,"type":"String"},{"description":"Value of type 'String'","documentation":"The (inclusive) starting time of the temporal image range","name":"Start","optional":0,"type":"String"}],"name":"Time","optional":0,"type":"Table"},{"description":"Value of type 'String'","documentation":"The specification of the date format that is used in the tile provider. The time format must be specified in a manner appropriate for the SPICE function `timout_c`. https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/timout_c.html","name":"TimeFormat","optional":0,"type":"String"}],"name":"Prototyped","optional":1,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If this value is enabled, the time-varying timevarying dataset will always use the time that is specified in the 'FixedTime' property, rather than using the actual time from OpenSpace","name":"UseFixedTime","optional":1,"type":"Boolean"}],"name":"TemporalTileProvider"},{"description":"","identifier":"globebrowsing_tileindextileprovider","members":[{"description":"Value of type 'Boolean'","documentation":"If 'true' each index tile will have a unique background color assigned to it","name":"UniqueBackgroundColors","optional":1,"type":"Boolean"}],"name":"TileIndexTileProvider"},{"identifier":"TileProvider","members":[],"name":"TileProvider"},{"description":"","identifier":"globebrowsing_tileproviderbyindex","members":[{"documentation":"","members":[],"name":"DefaultProvider","optional":0,"type":"Table"},{"documentation":"The list of all tileprovides and the indices at which they are used","members":[{"documentation":"","members":[{"documentation":"The index for which the provided tile provider is used","members":[{"description":"In range: ( 0,255 )","documentation":"The z-level which corresponds to the depth of the tile pyramid, which directly impacts the applied resolution of the tileprovider shown here","name":"Level","optional":0,"type":"Integer"},{"description":"Greater or equal to: 0","documentation":"The x coordinate for this index. This specifies the horizontal direction (longitude) component","name":"X","optional":0,"type":"Integer"},{"description":"Greater or equal to: 0","documentation":"The y coordinate for this index. This specifies the vertical direction (latitude) component","name":"Y","optional":0,"type":"Integer"}],"name":"TileIndex","optional":0,"type":"Table"},{"documentation":"The dictionary that described the tileprovider to be used by the provided index","members":[],"name":"TileProvider","optional":0,"type":"Table"}],"name":"*","optional":1,"type":"Table"}],"name":"IndexTileProviders","optional":0,"type":"Table"}],"name":"TileProviderByIndex"},{"description":"","identifier":"globebrowsing_tileproviderbylevel","members":[{"description":"Value of type 'Integer'","documentation":"","name":"LayerGroupID","optional":0,"type":"Integer"},{"documentation":"","members":[{"documentation":"","members":[{"description":"Greater or equal to: 0","documentation":"","name":"MaxLevel","optional":0,"type":"Integer"},{"documentation":"","members":[],"name":"TileProvider","optional":0,"type":"Table"}],"name":"*","optional":1,"type":"Table"}],"name":"LevelTileProviders","optional":0,"type":"Table"}],"name":"TileProviderByLevel"},{"description":"","identifier":"video_videotileprovider","members":[{"description":"Value of type 'Date and time'","documentation":"The date and time that the video should end in the format 'YYYY MM DD hh:mm:ss'.","name":"EndTime","optional":1,"type":"Date and time"},{"description":"Value of type 'Boolean'","documentation":"If checked, the video is continues playing from the start when it reaches the end of the video.","name":"LoopVideo","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"Play audio","name":"PlayAudio","optional":1,"type":"Boolean"},{"description":"In list { MapToSimulationTime, RealTimeLoop }","documentation":"The mode of how the video should be played back. Default is video is played back according to the set start and end times.","name":"PlaybackMode","optional":1,"type":"String"},{"description":"Value of type 'Date and time'","documentation":"The date and time that the video should start in the format 'YYYY MM DD hh:mm:ss'.","name":"StartTime","optional":1,"type":"Date and time"},{"description":"Value of type 'String'","documentation":"This should point to the video file that should be played.","name":"Video","optional":0,"type":"String"}],"name":"VideoTileProvider"}],"identifier":"categoryTileProvider","name":"TileProvider"},{"classes":[{"description":"","identifier":"core_time_frame","members":[{"description":"Must name a valid TimeFrame type","documentation":"The type of the time frame that is described in this element. The available types of scaling depend on the configuration of the application and can be written to disk on application startup into the FactoryDocumentation","name":"Type","optional":0,"type":"String"}],"name":"TimeFrame"},{"description":"","identifier":"base_time_frame_interval","members":[{"description":"Value of type 'Double', or Value of type 'String'","documentation":"Specifies the time when this TimeFrame becomes inactive","name":"End","optional":1,"type":"Double, or String"},{"description":"Value of type 'Double', or Value of type 'String'","documentation":"Specifies the time when this TimeFrame becomes active","name":"Start","optional":1,"type":"Double, or String"}],"name":"TimeFrameInterval"},{"description":"","identifier":"base_time_frame_union","members":[{"documentation":"A vector of time frames to combine into one. The time frame is active when any of the contained time frames are, but not in gaps between contained time frames","members":[{"documentation":"","name":"*","optional":1,"reference":{"found":true,"identifier":"core_time_frame","name":"TimeFrame"},"type":"Table"}],"name":"TimeFrames","optional":0,"type":"Table"}],"name":"TimeFrameUnion"}],"identifier":"categoryTimeFrame","name":"TimeFrame"},{"classes":[{"description":"","identifier":"space_translation_globetranslation","members":[{"description":"Value of type 'Double'","documentation":"The altitude in meters. If the 'UseHeightmap' property is 'true', this is an offset from the actual surface of the globe. If not, this is an offset from the reference ellipsoid. The default value is 0.0","name":"Altitude","optional":1,"type":"Double"},{"description":"A valid scene graph node with a RenderableGlobe","documentation":"The globe on which the longitude/latitude is specified","name":"Globe","optional":0,"type":"String"},{"description":"Value of type 'Double'","documentation":"The latitude of the location on the globe's surface. The value can range from -90 to 90, with negative values representing the southern hemisphere of the globe. The default value is 0.0","name":"Latitude","optional":1,"type":"Double"},{"description":"Value of type 'Double'","documentation":"The longitude of the location on the globe's surface. The value can range from -180 to 180, with negative values representing the western hemisphere of the globe. The default value is 0.0","name":"Longitude","optional":1,"type":"Double"},{"description":"Value of type 'Boolean'","documentation":"If this value is 'true', the lat and lon are updated to match the camera","name":"UseCamera","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If this value is 'true', the altitude is updated to match the camera","name":"UseCameraAltitude","optional":1,"type":"Boolean"},{"description":"Value of type 'Boolean'","documentation":"If this value is 'true', the altitude specified in 'Altitude' will be treated as an offset from the heightmap. Otherwise, it will be an offset from the globe's reference ellipsoid. The default value is 'false'","name":"UseHeightmap","optional":1,"type":"Boolean"}],"name":"GlobeTranslation"},{"description":"","identifier":"space_transform_gp","members":[{"description":"Greater than: 0","documentation":"Specifies the element within the file that should be used in case the file provides multiple general pertubation elements. Defaults to 1.","name":"Element","optional":1,"type":"Integer"},{"description":"Value of type 'File'","documentation":"Specifies the filename of the general pertubation file","name":"File","optional":0,"type":"File"},{"description":"In list { TLE, OMM, SBDB }","documentation":"A NORAD-style Two-Line element Orbit Mean-Elements Message in the KVN notation JPL's Small Bodies Database The file format that is contained in the file","name":"Format","optional":0,"type":"String"}],"name":"GPTranslation"},{"description":"","identifier":"base_transform_translation_horizons","members":[{"description":"Value of type 'String', or Value of type 'Table'","documentation":"This value is the path to the file or files generated by Horizons with either a Vector table or an Observer table with the correct settings (see wiki)","name":"HorizonsTextFile","optional":0,"type":"String, or Table"}],"name":"HorizonsTranslation"},{"description":"","identifier":"space_transform_kepler","members":[{"description":"In range: ( -360,360 )","documentation":"This value determines the argument of periapsis in degrees, that is the position on the orbit that is closest to the orbiting body","name":"ArgumentOfPeriapsis","optional":0,"type":"Double"},{"description":"In range: ( -360,360 )","documentation":"This value determines the right ascension of the ascending node in degrees, that is the location of position along the orbit where the inclined plane and the horizonal reference plane intersect","name":"AscendingNode","optional":0,"type":"Double"},{"description":"In range: ( 0,1 )","documentation":"This value determines the eccentricity, that is the deviation from a perfect sphere, for this orbit. Currently, hyperbolic orbits using Keplerian elements are not supported","name":"Eccentricity","optional":0,"type":"Double"},{"description":"Value of type 'String'","documentation":"This value determines the epoch for which the initial location is defined in the form of YYYY MM DD HH:mm:ss","name":"Epoch","optional":0,"type":"String"},{"description":"In range: ( -360,360 )","documentation":"This value determines the degrees of inclination, or the angle of the orbital plane, relative to the reference plane, on which the object orbits around the central body","name":"Inclination","optional":0,"type":"Double"},{"description":"In range: ( -360,360 )","documentation":"This value determines the mean anomaly at the epoch in degrees, which determines the initial location of the object along the orbit at epoch","name":"MeanAnomaly","optional":0,"type":"Double"},{"description":"Greater than: 0","documentation":"Specifies the orbital period (in seconds)","name":"Period","optional":0,"type":"Double"},{"description":"Value of type 'Double'","documentation":"This value determines the semi-major axis, that is the distance of the object from the central body in kilometers (semi-major axis = average of periapsis and apoapsis)","name":"SemiMajorAxis","optional":0,"type":"Double"}],"name":"KeplerTranslation"},{"description":"","identifier":"base_transform_translation_lua","members":[{"description":"Value of type 'String'","documentation":"This value is the path to the Lua script that will be executed to compute the translation for this transformation. The script needs to define a function 'translate' that takes the current simulation time in seconds past the J2000 epoch as the first argument, the current wall time as milliseconds past the J2000 epoch as the second argument and computes the translation","name":"Script","optional":0,"type":"String"}],"name":"LuaTranslation"},{"description":"","identifier":"space_translation_spicetranslation","members":[{"description":"A date to lock the position to","documentation":"","name":"FixedDate","optional":1,"type":"String"},{"description":"A valid SPICE NAIF name for a reference frame","documentation":"","name":"Frame","optional":1,"type":"String"},{"description":"Value of type 'String', or Value of type 'Integer'","documentation":"This is the SPICE NAIF name for the parent of the body whose translation is to be computed by the SpiceTranslation. It can either be a fully qualified name (such as 'SOLAR SYSTEM BARYCENTER') or a NAIF integer id code (such as '0')","name":"Observer","optional":0,"type":"String, or Integer"},{"description":"Value of type 'String', or Value of type 'Integer'","documentation":"This is the SPICE NAIF name for the body whose translation is to be computed by the SpiceTranslation. It can either be a fully qualified name (such as 'EARTH') or a NAIF integer id code (such as '399')","name":"Target","optional":0,"type":"String, or Integer"}],"name":"SpiceTranslation"},{"description":"","identifier":"base_transform_translation_static","members":[{"description":"Value of type 'Vector3<double>'","documentation":"This value is used as a static offset (in meters) that is applied to the scene graph node that this transformation is attached to relative to its parent","name":"Position","optional":0,"type":"Vector3<double>"}],"name":"StaticTranslation"},{"description":"","identifier":"base_transform_translation_keyframe","members":[{"documentation":"A table of keyframes, with keys formatted as YYYY-MM-DDTHH:MM:SS and values that are valid Translation objects","members":[{"documentation":"","name":"*","optional":0,"reference":{"found":true,"identifier":"core_transform_translation","name":"Translation"},"type":"Table"}],"name":"Keyframes","optional":0,"type":"Table"},{"description":"Value of type 'Boolean'","documentation":"If this value is set to 'true', an interpolation is applied between the given keyframes. If this value is set to 'false', the interpolation is not applied","name":"ShouldInterpolate","optional":1,"type":"Boolean"}],"name":"TimelineTranslation"},{"description":"","identifier":"core_transform_translation","members":[{"description":"Must name a valid Translation type","documentation":"The type of translation that is described in this element. The available types of translations depend on the configuration of the application and can be written to disk on application startup into the FactoryDocumentation","name":"Type","optional":0,"type":"String"}],"name":"Translation"}],"identifier":"categoryTranslation","name":"Translation"}]